/*******************************************************************************
 * dnCTBHUD generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnCTBHUD extends dnTeamDeathmatchHUD
	config(User)
	collapsecategories;

var Texture BlueBackground;
var Texture RedBackground;
var Texture BabeLeftImage;
var Texture droppedWarning;
var Texture carriedWarning;
var Texture babeLocTexture;
var Texture returnPointTexture;
var Texture arrowTex;
var float ImagescaleX;
var float ImagescaleY;
var float IconXLowBounds;
var float IconYLowBounds;
var float IconXHighBounds;
var float IconYHighBounds;
var int indicatorRadius;
var Color Team0Color;
var Color Team1Color;
var float BkgX;
var float BkgY;
var localized string strMsgBabeCarried;
var localized string strMsgBabeScored;
var localized string strMsgBabeDropped;
var localized string strMsgBabeStanding;
var localized string BlueStr;
var localized string RedStr;
var config float CombatTextStartXPos;
var config float CombatTextStartYPos;
var dnCaptureTheBabe_Babe redBabe;
var dnCaptureTheBabe_Babe blueBabe;
var float OMCageZOffset;
var float OMBabeZOffset;

simulated event PostPostRender(Canvas C)
{
	local dnDeathmatchGameReplicationInfo GRI;

	GRI = dnDeathmatchGameReplicationInfo(Level.GRI);
	super.PostPostRender(C);
	// End:0xA0
	if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_340__(GRI, none), __NFUN_170__(GRI.RoundTimeLimit, 0)), __NFUN_145__(GRI.bWaitingForPlayers)), __NFUN_202__(GRI.CountDown, 0)), __NFUN_202__(GRI.ShowWinnerSeconds, 0)))
	{
		DrawBabeStateHUD(C);
	}
	DrawWorldIcons(C);
	return;
}

simulated function PostBeginPlay()
{
	super(dnDeathmatchGameHUD).PostBeginPlay();
	return;
}

function SetBabeState(int Team, dnDeathmatchGameReplicationInfo.EBabeState BabeState, string HudMsg)
{
	local dnDeathmatchGameReplicationInfo GRI;

	GRI = dnDeathmatchGameReplicationInfo(Level.GRI);
	// End:0x7E
	if(__NFUN_150__(__NFUN_148__(__NFUN_340__(GRI, none), GRI.bWaitingForPlayers), __NFUN_148__(__NFUN_340__(dnMultiplayer(Level.Game), none), dnMultiplayer(Level.Game).IsAlone())))
	{
		return;
	}
	// End:0xA8
	if(__NFUN_174__(int(BabeState), int(0)))
	{
		// End:0xA1
		if(__NFUN_173__(Team, 1))
		{
			Team = 0;			
		}
		else
		{
			Team = 1;
		}
	}
	AddCTBScrollingCombatText(HudMsg, byte(Team));
	return;
}

function AddCTBScrollingCombatText(string Text, byte Team)
{
	local HUDScrollingMessage msg;

	msg.Message = Text;
	// End:0x2F
	if(__NFUN_173__(int(Team), 1))
	{
		msg.DrawColor = RedColor;		
	}
	else
	{
		msg.DrawColor = BlueColor;
	}
	msg.ScreenX = __NFUN_195__(SizeX, CombatTextStartXPos);
	msg.ScreenY = __NFUN_195__(SizeY, CombatTextStartYPos);
	msg.VelX = 0;
	msg.VelY = -0.1;
	msg.Lifetime = 3;
	msg.FadeTime = 3;
	ScrollingCombatText[ScrollingCombatText.Add(1)] = msg;
	return;
}

simulated function DrawBabeStateHUD(Canvas C)
{
	local float backgroundBlueX, backgroundRedX, backgroundY, backgroundXLeft, backgroundXRight, backgroundImageSizeX,
		backgroundImageSizeY, babeBlueX, babeRedX, babeY, babeXLeft,
		babeXRight, babeImageSizeX, babeImageSizeY;

	local bool blueMirrorHoriz, redMirrorHoriz;
	local float carriedDroppedBlueX, carriedDroppedRedX, carriedDroppedY, carriedDroppedXLeft, carriedDroppedXRight, carriedImageSizeX,
		carriedImageSizeY, DroppedImageSizeX, DroppedImageSizeY;

	// End:0x0D
	if(__NFUN_145__(CheckBabes()))
	{
		return;
	}
	backgroundXLeft = __NFUN_195__(310, HUDScaleX);
	backgroundXRight = __NFUN_195__(520, HUDScaleX);
	// End:0x6A
	if(__NFUN_173__(int(PlayerOwner.PlayerReplicationInfo.Team), 0))
	{
		backgroundBlueX = backgroundXLeft;
		backgroundRedX = backgroundXRight;		
	}
	else
	{
		backgroundBlueX = backgroundXRight;
		backgroundRedX = backgroundXLeft;
	}
	backgroundY = __NFUN_195__(50, HUDScaleY);
	babeXLeft = __NFUN_195__(370, HUDScaleX);
	babeXRight = __NFUN_195__(555, HUDScaleX);
	// End:0xFF
	if(__NFUN_173__(int(PlayerOwner.PlayerReplicationInfo.Team), 0))
	{
		babeBlueX = babeXLeft;
		babeRedX = babeXRight;
		blueMirrorHoriz = false;
		redMirrorHoriz = true;		
	}
	else
	{
		babeBlueX = babeXRight;
		babeRedX = babeXLeft;
		blueMirrorHoriz = true;
		redMirrorHoriz = false;
	}
	babeY = __NFUN_195__(50, HUDScaleY);
	carriedDroppedXLeft = __NFUN_195__(345, HUDScaleX);
	carriedDroppedXRight = __NFUN_195__(585, HUDScaleX);
	// End:0x194
	if(__NFUN_173__(int(PlayerOwner.PlayerReplicationInfo.Team), 0))
	{
		carriedDroppedBlueX = carriedDroppedXLeft;
		carriedDroppedRedX = carriedDroppedXRight;		
	}
	else
	{
		carriedDroppedBlueX = carriedDroppedXRight;
		carriedDroppedRedX = carriedDroppedXLeft;
	}
	carriedDroppedY = __NFUN_195__(50, HUDScaleY);
	backgroundImageSizeX = __NFUN_195__(float(BlueBackground.__NFUN_1191__()), HUDScaleX);
	backgroundImageSizeY = __NFUN_195__(float(BlueBackground.__NFUN_1192__()), HUDScaleY);
	babeImageSizeX = __NFUN_195__(float(BabeLeftImage.__NFUN_1191__()), HUDScaleX);
	babeImageSizeY = __NFUN_195__(float(BabeLeftImage.__NFUN_1192__()), HUDScaleY);
	carriedImageSizeX = __NFUN_195__(float(carriedWarning.__NFUN_1191__()), HUDScaleX);
	carriedImageSizeY = __NFUN_195__(float(carriedWarning.__NFUN_1192__()), HUDScaleY);
	DroppedImageSizeX = __NFUN_195__(float(droppedWarning.__NFUN_1191__()), HUDScaleX);
	DroppedImageSizeY = __NFUN_195__(float(droppedWarning.__NFUN_1192__()), HUDScaleY);
	C.__NFUN_1250__(backgroundBlueX, backgroundY);
	C.__NFUN_1234__(BlueBackground, backgroundImageSizeX, backgroundImageSizeY, 0, 0, float(BlueBackground.__NFUN_1191__()), float(BlueBackground.__NFUN_1192__()));
	backgroundImageSizeX = __NFUN_195__(float(RedBackground.__NFUN_1191__()), HUDScaleX);
	backgroundImageSizeY = __NFUN_195__(float(RedBackground.__NFUN_1192__()), HUDScaleY);
	C.__NFUN_1250__(backgroundRedX, backgroundY);
	C.__NFUN_1234__(RedBackground, backgroundImageSizeX, backgroundImageSizeY, 0, 0, float(RedBackground.__NFUN_1191__()), float(RedBackground.__NFUN_1192__()));
	C.__NFUN_1250__(babeBlueX, babeY);
	C.__NFUN_1234__(BabeLeftImage, babeImageSizeX, babeImageSizeY, 0, 0, float(BabeLeftImage.__NFUN_1191__()), float(BabeLeftImage.__NFUN_1192__()),,,,,, blueMirrorHoriz);
	C.__NFUN_1250__(babeRedX, babeY);
	C.__NFUN_1234__(BabeLeftImage, babeImageSizeX, babeImageSizeY, 0, 0, float(BabeLeftImage.__NFUN_1191__()), float(BabeLeftImage.__NFUN_1192__()),,,,,, redMirrorHoriz);
	// End:0x4C4
	if(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(1)))
	{
		C.__NFUN_1250__(carriedDroppedBlueX, carriedDroppedY);
		C.__NFUN_1234__(carriedWarning, carriedImageSizeX, carriedImageSizeY, 0, 0, float(carriedWarning.__NFUN_1191__()), float(carriedWarning.__NFUN_1192__()));
	}
	// End:0x544
	if(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(1)))
	{
		C.__NFUN_1250__(carriedDroppedRedX, carriedDroppedY);
		C.__NFUN_1234__(carriedWarning, carriedImageSizeX, carriedImageSizeY, 0, 0, float(carriedWarning.__NFUN_1191__()), float(carriedWarning.__NFUN_1192__()));
	}
	// End:0x5C4
	if(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(2)))
	{
		C.__NFUN_1250__(carriedDroppedBlueX, carriedDroppedY);
		C.__NFUN_1234__(droppedWarning, DroppedImageSizeX, DroppedImageSizeY, 0, 0, float(droppedWarning.__NFUN_1191__()), float(droppedWarning.__NFUN_1192__()));
	}
	// End:0x644
	if(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(2)))
	{
		C.__NFUN_1250__(carriedDroppedRedX, carriedDroppedY);
		C.__NFUN_1234__(droppedWarning, DroppedImageSizeX, DroppedImageSizeY, 0, 0, float(droppedWarning.__NFUN_1191__()), float(droppedWarning.__NFUN_1192__()));
	}
	return;
}

simulated function DrawWorldIcons(Canvas C)
{
	// End:0x0D
	if(__NFUN_145__(CheckBabes()))
	{
		return;
	}
	// End:0x2A
	if(Level.__NFUN_1161__().IsDead())
	{
		return;
	}
	ImagescaleX = HUDScaleX;
	// End:0x4F
	if(__NFUN_201__(ImagescaleX, 1))
	{
		ImagescaleX = 1;
	}
	ImagescaleY = HUDScaleY;
	// End:0x74
	if(__NFUN_201__(ImagescaleY, 1))
	{
		ImagescaleY = 1;
	}
	IconXLowBounds = __NFUN_195__(float(C.SizeX), 0.15);
	IconYLowBounds = __NFUN_195__(float(C.SizeY), 0.15);
	IconXHighBounds = __NFUN_195__(float(C.SizeX), 0.85);
	IconYHighBounds = __NFUN_195__(float(C.SizeY), 0.85);
	// End:0x1B2
	if(__NFUN_173__(int(PlayerOwner.PlayerReplicationInfo.Team), 0))
	{
		DrawHUDIcon_TheirBabe(C, redBabe, dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState);
		// End:0x1AF
		if(__NFUN_148__(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(1)), __NFUN_339__(redBabe.CarriedBy, Level.__NFUN_1161__())))
		{
			DrawHUDIcon_ReturnPnt(C, redBabe, dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState);
		}		
	}
	else
	{
		DrawHUDIcon_TheirBabe(C, blueBabe, dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState);
		// End:0x259
		if(__NFUN_148__(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(1)), __NFUN_339__(blueBabe.CarriedBy, Level.__NFUN_1161__())))
		{
			DrawHUDIcon_ReturnPnt(C, blueBabe, dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState);
		}
	}
	return;
}

simulated function DrawHUDIcon_TheirBabe(Canvas C, dnCaptureTheBabe_Babe babe, dnDeathmatchGameReplicationInfo.EBabeState BabeState)
{
	local float X, Y, babeLocUSize, babeLocVSize, arrowOffset;

	local Vector babeLoc;
	local Pawn LocalPlayer;

	LocalPlayer = Level.__NFUN_1161__();
	// End:0x4F
	if(__NFUN_150__(__NFUN_148__(__NFUN_173__(int(BabeState), int(1)), __NFUN_339__(babe.CarriedBy, LocalPlayer)), __NFUN_173__(int(BabeState), int(3))))
	{
		return;
	}
	arrowOffset = __NFUN_195__(50, ImagescaleX);
	indicatorRadius = int(__NFUN_195__(float(285), ImagescaleX));
	babeLocUSize = __NFUN_195__(float(babeLocTexture.__NFUN_1191__()), ImagescaleX);
	babeLocVSize = __NFUN_195__(float(babeLocTexture.__NFUN_1192__()), ImagescaleY);
	babeLoc = __NFUN_238__(babe.Location, __NFUN_232__(0, 0, OMBabeZOffset));
	// End:0x1EF
	if(C.__NFUN_1244__(babeLoc, X, Y))
	{
		__NFUN_210__(X, __NFUN_196__(babeLocUSize, float(2)));
		__NFUN_210__(Y, __NFUN_196__(babeLocVSize, float(2)));
		// End:0x193
		if(__NFUN_150__(__NFUN_150__(__NFUN_150__(__NFUN_200__(X, IconXLowBounds), __NFUN_201__(X, IconXHighBounds)), __NFUN_200__(Y, IconYLowBounds)), __NFUN_201__(Y, IconYHighBounds)))
		{
			__NFUN_1189__(C, babeLocTexture, babeLoc, float(indicatorRadius),,,,, true);
			__NFUN_1189__(C, arrowTex, babeLoc, __NFUN_198__(float(indicatorRadius), arrowOffset));			
		}
		else
		{
			C.__NFUN_1250__(X, Y);
			C.__NFUN_1234__(babeLocTexture, babeLocUSize, babeLocVSize, 0, 0, float(babeLocTexture.__NFUN_1191__()), float(babeLocTexture.__NFUN_1192__()));
		}		
	}
	else
	{
		__NFUN_1189__(C, babeLocTexture, babeLoc, float(indicatorRadius),,,,, true);
		__NFUN_1189__(C, arrowTex, babeLoc, __NFUN_198__(float(indicatorRadius), arrowOffset));
	}
	return;
}

simulated function DrawHUDIcon_ReturnPnt(Canvas C, dnCaptureTheBabe_Babe babe, dnDeathmatchGameReplicationInfo.EBabeState BabeState)
{
	local float X, Y, returnPntUSize, returnPntVSize, arrowOffset;

	local Vector returnPntLoc;

	arrowOffset = __NFUN_195__(50, ImagescaleX);
	indicatorRadius = int(__NFUN_195__(float(285), ImagescaleX));
	returnPntUSize = __NFUN_195__(float(returnPointTexture.__NFUN_1191__()), ImagescaleX);
	returnPntVSize = __NFUN_195__(float(returnPointTexture.__NFUN_1192__()), ImagescaleY);
	returnPntLoc = __NFUN_238__(babe.AreaOppositeLocation, __NFUN_232__(0, 0, OMCageZOffset));
	// End:0x1A0
	if(C.__NFUN_1244__(returnPntLoc, X, Y))
	{
		__NFUN_210__(X, __NFUN_196__(returnPntUSize, float(2)));
		__NFUN_210__(Y, __NFUN_196__(returnPntVSize, float(2)));
		// End:0x144
		if(__NFUN_150__(__NFUN_150__(__NFUN_150__(__NFUN_200__(X, IconXLowBounds), __NFUN_201__(X, IconXHighBounds)), __NFUN_200__(Y, IconYLowBounds)), __NFUN_201__(Y, IconYHighBounds)))
		{
			__NFUN_1189__(C, returnPointTexture, returnPntLoc, float(indicatorRadius),,,,, true);
			__NFUN_1189__(C, arrowTex, returnPntLoc, __NFUN_198__(float(indicatorRadius), arrowOffset));			
		}
		else
		{
			C.__NFUN_1250__(X, Y);
			C.__NFUN_1234__(returnPointTexture, returnPntUSize, returnPntVSize, 0, 0, float(returnPointTexture.__NFUN_1191__()), float(returnPointTexture.__NFUN_1192__()));
		}		
	}
	else
	{
		__NFUN_1189__(C, returnPointTexture, returnPntLoc, float(indicatorRadius),,,,, true);
		__NFUN_1189__(C, arrowTex, returnPntLoc, __NFUN_198__(float(indicatorRadius), arrowOffset));
	}
	return;
}

simulated function bool CheckBabes()
{
	local Pawn P;
	local dnCaptureTheBabe_Babe temp;

	// End:0xA5
	if(__NFUN_150__(__NFUN_339__(redBabe, none), __NFUN_339__(blueBabe, none)))
	{
		P = Level.PawnList;
		J0x2F:

		// End:0xA5 [Loop If]
		if(__NFUN_340__(P, none))
		{
			// End:0x8D
			if(P.bIsCTBBabe)
			{
				temp = dnCaptureTheBabe_Babe(P);
				// End:0x82
				if(__NFUN_173__(int(temp.Team), 0))
				{
					blueBabe = temp;					
				}
				else
				{
					redBabe = temp;
				}
			}
			P = P.NextPawn;
			// [Loop Continue]
			goto J0x2F;
		}
	}
	// End:0xC1
	if(__NFUN_150__(__NFUN_339__(redBabe, none), __NFUN_339__(blueBabe, none)))
	{
		return false;
	}
	return true;
	return;
}

simulated function bool CheckAreas(dnCaptureTheBabe_Babe babe)
{
	return true;
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1269__(BlueBackground);
	PrecacheIndex.__NFUN_1269__(RedBackground);
	PrecacheIndex.__NFUN_1269__(BabeLeftImage);
	PrecacheIndex.__NFUN_1269__(droppedWarning);
	PrecacheIndex.__NFUN_1269__(carriedWarning);
	PrecacheIndex.__NFUN_1269__(babeLocTexture);
	PrecacheIndex.__NFUN_1269__(returnPointTexture);
	PrecacheIndex.__NFUN_1269__(arrowTex);
	return;
}

defaultproperties
{
	BlueBackground='dt_hud.ingame_hud.ctb_blueBackground'
	RedBackground='dt_hud.ingame_hud.ctb_redBackground'
	BabeLeftImage='dt_hud.ingame_hud.ctb_babeLeft'
	droppedWarning='dt_hud.ingame_hud.ctb_droppedWarning'
	carriedWarning='dt_hud.ingame_hud.ctb_inTransitWarning'
	babeLocTexture='dt_hud.ingame_hud.locationmarker_get'
	returnPointTexture='dt_hud.ingame_hud.locationmarker_give'
	arrowTex='dt_hud.ingame_hud.locationmarker_arrow'
	indicatorRadius=240
	Team0Color=(B=121,G=2,R=1,A=27)
	Team1Color=(B=121,G=2,R=1,A=255)
	BkgX=128
	BkgY=64
	strMsgBabeCarried="<?int?dnGame.dnCTBHUD.strMsgBabeCarried?>"
	strMsgBabeScored="<?int?dnGame.dnCTBHUD.strMsgBabeScored?>"
	strMsgBabeDropped="<?int?dnGame.dnCTBHUD.strMsgBabeDropped?>"
	strMsgBabeStanding="<?int?dnGame.dnCTBHUD.strMsgBabeStanding?>"
	BlueStr="<?int?dnGame.dnCTBHUD.BlueStr?>"
	RedStr="<?int?dnGame.dnCTBHUD.RedStr?>"
	CombatTextStartXPos=0.5
	CombatTextStartYPos=0.3
	OMCageZOffset=80
	OMBabeZOffset=50
	BabeOffCenterOffset=0.05
	BabeScale=196
	BabeOffsetY=0.005
	PickupEventYOffset=0.75
}