/*******************************************************************************
 * BeamTrail generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class BeamTrail extends BeamSystem
	collapsecategories
	hidecategories(Filter,HeatVision,Interactivity,Karma,KarmaObject,KarmaOverride,Lighting,Networking,ParticleSystemBase,ParticleTextureInfo,SoftParticleSystem,Sound,SpawnOnDestroyed);

var() noexport float MinSegmentDelay "Minimum amount of time between segment creations.";
var() noexport float MinSegmentDistSq "Minimum length (squared) of a segment before a new one can be made.";
var float NextSegmentTime;
var Vector LastSegmentEnd;

simulated function bool VerifySelf()
{
	return __NFUN_148__(__NFUN_340__(MountParent, none), super(Actor).VerifySelf());
	return;
}

simulated function PostBeginPlay()
{
	local Projectile OwnerProjectile;
	local Vector startLocation;
	local float ProjectileVelocitySq;

	super.PostBeginPlay();
	__NFUN_361__('Tick');
	// End:0x136
	if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_173__(int(Level.NetMode), int(NM_Client)), __NFUN_340__(Owner, none)), __NFUN_340__(Owner.Instigator, none)), __NFUN_340__(Owner.Instigator.Weapon, none)))
	{
		OwnerProjectile = Projectile(Owner);
		// End:0x133
		if(__NFUN_340__(OwnerProjectile, none))
		{
			Owner.Instigator.Weapon.GetBarrelLocation(int(OwnerProjectile.MuzzleFireIndex), startLocation);
			ProjectileVelocitySq = __NFUN_252__(OwnerProjectile.Velocity);
			// End:0x121
			if(__NFUN_206__(ProjectileVelocitySq, float(0)))
			{
				startLocation = __NFUN_235__(__NFUN_196__(__NFUN_244__(__NFUN_239__(Location, startLocation), OwnerProjectile.Velocity), ProjectileVelocitySq), OwnerProjectile.Velocity);
			}
			startLocation = __NFUN_239__(Location, startLocation);
		}		
	}
	else
	{
		startLocation = Location;
	}
	startLocation = Location;
	// End:0x182
	if(Enabled)
	{
		NextSegmentTime = Level.GameTimeSeconds;
		LastSegmentEnd = startLocation;
		AddSegmentActorAndLoc(self, startLocation, true);
	}
	return;
}

simulated function ResetTrail()
{
	FirstSegment = -1;
	LastSegment = -1;
	FirstFreeSegment = -1;
	ActiveSegmentCount = 0;
	AddSegmentActorAndLoc(self, Location, true);
	return;
}

simulated function ReInitialize(Vector Loc)
{
	local Vector startLocation;

	// End:0x0D
	if(__NFUN_145__(IsMP()))
	{
		return;
	}
	FirstSegment = -1;
	LastSegment = -1;
	FirstFreeSegment = -1;
	ActiveSegmentCount = 0;
	Segments.Empty();
	BeamSegments.Empty();
	__NFUN_645__(Loc);
	startLocation = Loc;
	Enabled = true;
	return;
}

simulated function DisableBeamTrail()
{
	// End:0x0D
	if(__NFUN_145__(IsMP()))
	{
		return;
	}
	Enabled = false;
	return;
}

simulated event Tick(float DeltaSeconds)
{
	local int i;

	// End:0x1E
	if(__NFUN_148__(__NFUN_339__(MountParent, none), __NFUN_173__(ActiveSegmentCount, 0)))
	{
		__NFUN_614__();
		return;
	}
	// End:0xD0
	if(__NFUN_148__(__NFUN_148__(__NFUN_146__(Enabled, true), __NFUN_203__(Level.GameTimeSeconds, NextSegmentTime)), __NFUN_203__(__NFUN_252__(__NFUN_239__(Location, LastSegmentEnd)), MinSegmentDistSq)))
	{
		i = AddSegmentActorAndLoc(self, Location, true);
		// End:0xA9
		if(__NFUN_174__(Segments[i].PrevSegment, -1))
		{
			Segments[Segments[i].PrevSegment].Actor2 = none;
		}
		LastSegmentEnd = Location;
		NextSegmentTime = __NFUN_198__(Level.GameTimeSeconds, MinSegmentDelay);
	}
	super.Tick(DeltaSeconds);
	return;
}

simulated event DrawscaleChanged(float DefaultDrawscaleRatio, Vector DefaultDrawscale3DRatio)
{
	super(Actor).DrawscaleChanged(DefaultDrawscaleRatio, DefaultDrawscale3DRatio);
	BeamStartWidth = __NFUN_195__(default.BeamStartWidth, DefaultDrawscaleRatio);
	BeamEndWidth = __NFUN_195__(default.BeamEndWidth, DefaultDrawscaleRatio);
	return;
}

defaultproperties
{
	MinSegmentDelay=0.05
	MinSegmentDistSq=1
	TraceEnabled=false
	BeamStartWidth=1
	BeamEndWidth=1
	DefaultLifetime=1
	AlphaAnimMid=0
	AlphaAnimEnd=0
	AlphaMidPercent=0.75
	BeamTexture='dt_effects.Beams.lightbeam1aRC'
	BeamType=1
	bForceNonFinalBlendBlooms=true
	bTickOnlyRecent=false
	bTickOnlyZoneRecent=false
	bTickOnlyWhenOwnerShould=true
	Style=3
	AlphaSortGroup=8
	ActorColorList=/* Array type was not detected. */
	Y=0
	Z=0
}