/*******************************************************************************
 * dnCaptureTheBabe_Babe generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnCaptureTheBabe_Babe extends Pawn
	config
	collapsecategories
	dependson(dnAnimationControllerEx_Babe_Standing)
	dependson(dnCaptureTheBabe_Player)
	dependson(dnCaptureTheBabe_Hand)
	dependson(CustomizationDecoration)
	dependson(DamageVolume)
	dependson(dnMultiplayer)
	dependson(dnDeathmatchGame)
	dependson(MP_Announcer)
	dependson(dnCaptureTheBabe_BabeArea);

enum CTB_VOS
{
	ctbvo_ButtSmack,
	ctbvo_Captured,
	ctbvo_CarrierKilled,
	ctbvo_CarrierKills,
	ctbvo_CarrierShrunk,
	ctbvo_Flirting,
	ctbvo_Help,
	ctbvo_Idle,
	ctbvo_Pickup,
	ctbvo_PutMeDown,
	ctbvo_Scream
};

var dnDecoration Area;
var Vector AreaOppositeLocation;
var(Team) noexport byte Team "The babe team the babe is on. note: players try to capture the babe of the opposite team";
var bool bTeleportTimerActive;
var bool bCarrierWasDestroyed;
var bool bDropInPlace;
var float DropTeleportTime;
var float ScoreTeleportTime;
var bool DropShouldDestroyWeapon;
var bool DoNotDropMe;
var int iFreakingOut;
var Pawn pawnTemp;
var(Param) noexport int freakOutThreshold "the ammount of crap (being run with, taking damage, etc) the babe will take before freaking out";
var name curanimname;
var Pawn Grabber;
var int UngrabbedRotation;
var Vector InitialLocation;
var Rotator InitialRotation;
var CustomizationDecoration GunBeltAttachment;
var CustomizationDecoration GunAttachment;
var int nBabePos1X;
var int nBabePos1Y;
var int nBabePos1Z;
var int nBabePos3X;
var int nBabePos3Y;
var int nBabePos3Z;
var int nPitchBabe;
var int nYawBabe;
var int nRollBabe;
var int nDebugAnim;
var bool bForceDropBecauseAlone;
var array<name> AshleyVOs;
var array<name> MaryKateVOs;
var MaterialEx TeamSkin[2];
var float MinBlinkTime;
var float MaxBlinkTime;
var int NumEyeSets;
var float ButtSlapDelay;
var bool HomeNow;
var int TeleportTimerHomeCount;
var bool bCanBeUsedBy;

replication
{
	// Pos:0x000
	reliable if(__NFUN_169__(int(Role), int(ROLE_Authority)))
		ForceSyncGrabUsable, SetAnimation, 
		SetGrabbedByEnemy2, SetUnGrabbedByEnemy2;

	// Pos:0x00B
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		Grabber, UngrabbedRotation, 
		curanimname;

	// Pos:0x016
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		AttachRevolver, RemoveRevolver;

	// Pos:0x021
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		AreaOppositeLocation, bCanBeUsedBy;

	// Pos:0x02C
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		ClientPlayBlinkAnimation, ClientPlayPutDownOrHelp, 
		ResetCollision, clientTalk;

	// Pos:0x037
	reliable if(__NFUN_148__(__NFUN_173__(int(Role), int(ROLE_Authority)), bNetInitial))
		Team;

	// Pos:0x04D
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		TeleportArea;
}

simulated function bool IsFriendly(Pawn Other)
{
	return true;
	return;
}

function InitPlayerReplicationInfo()
{
	super.InitPlayerReplicationInfo();
	// End:0x2F
	if(__NFUN_148__(__NFUN_340__(PlayerReplicationInfo, none), IsMP()))
	{
		PlayerReplicationInfo.bIsABot = true;
	}
	return;
}

simulated function DiedActivity(optional Pawn Killer, optional int Damage, optional Vector DamageOrigin, optional Vector DamageDirection, optional class<DamageType> DamageType, optional name HitBoneName)
{
	StopTeleportTimer();
	__NFUN_608__('ResetAndTeleportHome');
	ResetAndTeleportHome();
	return;
}

function TalkingCallback()
{
	local float Sec, teamRadSq;

	Sec = __NFUN_198__(__NFUN_195__(__NFUN_222__(), 15), 30);
	__NFUN_605__(Sec, false, 'TalkingCallback');
	// End:0x48
	if(__NFUN_148__(__NFUN_339__(CarriedBy, none), __NFUN_145__(bTeleportTimerActive)))
	{
		PlayBabeVO(5);		
	}
	else
	{
		PlayPutDownOrHelp();
		ClientPlayPutDownOrHelp();
	}
	return;
}

simulated function PlayPutDownOrHelp()
{
	// End:0x39
	if(__NFUN_173__(int(Team), int(Level.__NFUN_1161__().PlayerReplicationInfo.Team)))
	{
		PlayBabeVO(6, true);		
	}
	else
	{
		PlayBabeVO(9, true);
	}
	return;
}

simulated delegate ClientPlayPutDownOrHelp()
{
	PlayPutDownOrHelp();
	return;
}

simulated delegate clientTalk(name SoundName)
{
	FindSoundAndSpeak(SoundName);
	return;
}

simulated function bool CanPlayBabeVO()
{
	local dnMultiplayer MPGameInfo;

	MPGameInfo = dnMultiplayer(Level.Game);
	// End:0x67
	if(__NFUN_148__(__NFUN_340__(MPGameInfo, none), __NFUN_150__(__NFUN_150__(MPGameInfo.bGameEnded, MPGameInfo.bRoundEnded), MPGameInfo.bEndOfGameRequest)))
	{
		return false;
	}
	return true;
	return;
}

simulated function PlayBabeVO(dnCaptureTheBabe_Babe.CTB_VOS voLine, optional bool playOnlyLocally)
{
	// End:0x0D
	if(__NFUN_145__(CanPlayBabeVO()))
	{
		return;
	}
	__NFUN_695__(5);
	// End:0x50
	if(__NFUN_173__(int(Team), 0))
	{
		// End:0x3B
		if(__NFUN_145__(playOnlyLocally))
		{
			clientTalk(AshleyVOs[int(voLine)]);
		}
		FindSoundAndSpeak(AshleyVOs[int(voLine)]);		
	}
	else
	{
		// End:0x6D
		if(__NFUN_145__(playOnlyLocally))
		{
			clientTalk(MaryKateVOs[int(voLine)]);
		}
		FindSoundAndSpeak(MaryKateVOs[int(voLine)]);
	}
	return;
}

simulated function NU_SetClientAnim(name newname)
{
	local bool bIsLocallyControlled, bFirstPerson;
	local name AnimName;

	AnimName = newname;
	// End:0xD8
	if(__NFUN_341__(newname, 'Anim_CoverFace'))
	{
		// End:0xB9
		if(__NFUN_340__(CarriedBy, none))
		{
			bIsLocallyControlled = dnCaptureTheBabe_Player(CarriedBy).IsLocallyControlled();
			bFirstPerson = __NFUN_148__(bIsLocallyControlled, __NFUN_145__(dnCaptureTheBabe_Player(CarriedBy).bBehindView));
			// End:0x97
			if(bFirstPerson)
			{
				AnimName = __NFUN_343__(__NFUN_302__(string(newname), "FirstPerson"));				
			}
			else
			{
				AnimName = __NFUN_343__(__NFUN_302__(string(newname), "ThirdPerson"));
			}			
		}
		else
		{
			AnimName = __NFUN_343__(__NFUN_302__(string(newname), "ThirdPerson"));
		}
	}
	// End:0xEA
	if(__NFUN_339__(AnimationController, none))
	{
		InitializeAnimation();
	}
	dnAnimationControllerEx_Babe_Standing(AnimationController).SetAnimState(AnimName);
	return;
}

simulated function NU_SetUngrabbedRotation(int Rot)
{
	ViewRotationInt = Rot;
	ViewRotation.Pitch = 0;
	ViewRotation.Yaw = __NFUN_162__(2, __NFUN_166__(ViewRotationInt, __NFUN_162__(32768, ViewRotation.Pitch)));
	__NFUN_178__(ViewRotation.Pitch, float(2));
	__NFUN_652__(ViewRotation);
	return;
}

simulated function bool CarrierFireDown()
{
	return false;
	return;
}

simulated event SetBabeRotation(Rotator Rot)
{
	Rot.Pitch = 0;
	__NFUN_652__(Rot);
	// End:0x55
	if(__NFUN_173__(int(Role), int(ROLE_Authority)))
	{
		UngrabbedRotation = __NFUN_165__(__NFUN_162__(__NFUN_175__(32767, __NFUN_163__(Rotation.Pitch, 2)), 32768), __NFUN_175__(32767, __NFUN_163__(Rotation.Yaw, 2)));
	}
	return;
}

event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	return;
}

function SetAnimation(name AnimName)
{
	curanimname = AnimName;
	NU_SetClientAnim(AnimName);
	return;
}

function SetGrabbedByEnemy2(Pawn Player)
{
	PlayBabeVO(8);
	__NFUN_607__(0.8, false, 'GrabbedVO');
	NU_SetClientGrabberChange2(Player);
	Grabber = Player;
	DukeMultiPlayer(Grabber).DisablePowerups();
	return;
}

function GrabbedVO()
{
	// End:0x42
	if(__NFUN_148__(__NFUN_340__(DukeMultiPlayer(Grabber), none), DukeMultiPlayer(Grabber).CanDoThings()))
	{
		DukeMultiPlayer(Grabber).TriggerEventVO(7);
	}
	return;
}

function SetUnGrabbedByEnemy2()
{
	NU_SetClientGrabberChange2(none);
	Grabber = none;
	return;
}

function PostBeginPlay()
{
	local dnCaptureTheBabe GameMode;
	local dnCaptureTheBabe_Single gamemode_s;
	local bool Found, isSingle;
	local float Sec;
	local class<AnimationControllerEx> ControllerClass;
	local AnimationControllerEx Controller;

	Found = false;
	isSingle = false;
	// End:0x2C
	foreach __NFUN_747__(class'dnCaptureTheBabe', GameMode)
	{
		Found = true;
		// End:0x2C
		break;		
	}	
	// End:0x49
	foreach __NFUN_747__(class'dnCaptureTheBabe_Single', gamemode_s)
	{
		isSingle = true;
		// End:0x49
		break;		
	}	
	super.PostBeginPlay();
	FindBabeArea();
	// End:0x90
	if(__NFUN_150__(__NFUN_148__(__NFUN_339__(Area, none), __NFUN_145__(isSingle)), __NFUN_148__(__NFUN_340__(Area, none), isSingle)))
	{
		Found = false;
	}
	InitialLocation = Location;
	InitialRotation = Rotation;
	// End:0xB7
	if(__NFUN_145__(Found))
	{
		__NFUN_614__();		
	}
	else
	{
		Sec = __NFUN_198__(__NFUN_195__(__NFUN_222__(), 15), 30);
		__NFUN_605__(Sec, false, 'TalkingCallback');
		__NFUN_605__(1, true, 'moodupdate');
	}
	InitializeAnimation();
	SetRandomAnimation();
	// End:0x109
	if(__NFUN_173__(int(Role), int(ROLE_Authority)))
	{
		EnableBlinking();
	}
	__NFUN_607__(1, true, 'CheckVoicePitch');
	return;
}

simulated function CheckVoicePitch()
{
	// End:0x39
	if(__NFUN_340__(Level.__NFUN_1161__(), none))
	{
		__NFUN_608__('CheckVoicePitch');
		SoundPitchDrawScaleOverride = Level.__NFUN_1161__().SoundPitchDrawScaleOverride;
	}
	return;
}

simulated function SetRandomAnimation()
{
	local int nAnim;

	nAnim = __NFUN_187__(2);
	switch(nAnim)
	{
		// End:0x24
		case 0:
			SetAnimation('Anim_IdleA');
			// End:0x7A
			break;
		// End:0x36
		case 1:
			SetAnimation('Anim_IdleB');
			// End:0x7A
			break;
		// End:0xFFFF
		default:
			__NFUN_355__("Error Setting Animation. Defaulting to Anim_IdleA");
			SetAnimation('Anim_IdleA');
			break;
	}
	return;
}

simulated function SetTeamSkin()
{
	__NFUN_741__(1, TeamSkin[int(Team)]);
	return;
}

simulated function PostNetInitial()
{
	super.PostNetInitial();
	InitBabe();
	CreateRevolverAttachments();
	SetTeamSkin();
	return;
}

simulated function InitBabe()
{
	GrabInfo.MountItemOverride = 'mount_handleft';
	GrabInfo.MountOrigin.X = float(nBabePos1X);
	GrabInfo.MountOrigin.Y = float(nBabePos1Y);
	GrabInfo.MountOrigin.Z = float(nBabePos1Z);
	GrabInfo.MountAngles.Pitch = nPitchBabe;
	GrabInfo.MountAngles.Yaw = nYawBabe;
	GrabInfo.MountAngles.Roll = nRollBabe;
	GrabInfo.CarrierAnimName = 'None';
	GrabInfo.bCanDuckWhileHeld = false;
	__NFUN_642__(2);
	return;
}

simulated function moodupdate()
{
	// End:0x2D
	if(__NFUN_148__(__NFUN_340__(CarriedBy, none), dnCaptureTheBabe_Player(CarriedBy).IsSprinting()))
	{
		__NFUN_184__(iFreakingOut);
	}
	return;
}

simulated function bool isFreakingOut()
{
	return __NFUN_172__(iFreakingOut, freakOutThreshold);
	return;
}

function FindBabeArea()
{
	local dnCaptureTheBabe_BabeArea AreaTemp;

	Area = none;
	// End:0x56
	foreach __NFUN_747__(class'dnCaptureTheBabe_BabeArea', AreaTemp)
	{
		// End:0x40
		if(__NFUN_173__(int(Team), int(AreaTemp.Team)))
		{
			Area = AreaTemp;
			// End:0x55
			continue;
		}
		AreaOppositeLocation = AreaTemp.Location;		
	}	
	return;
}

simulated function DropMe2(Pawn Carrier, bool boCarrierDisconnected)
{
	local bool bScored;

	// End:0x280
	if(__NFUN_340__(Carrier, none))
	{
		// End:0x217
		if(__NFUN_148__(__NFUN_340__(Level.GRI, none), __NFUN_173__(int(Role), int(ROLE_Authority))))
		{
			__NFUN_620__(default.CollisionRadius, default.CollisionHeight);
			// End:0xA8
			if(boCarrierDisconnected)
			{
				// End:0x78
				if(__NFUN_173__(int(Team), 0))
				{
					dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe0State(2);					
				}
				else
				{
					// End:0xA5
					if(__NFUN_173__(int(Team), 1))
					{
						dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe1State(2);
					}
				}				
			}
			else
			{
				// End:0x149
				if(__NFUN_173__(int(Team), 0))
				{
					// End:0x125
					if(__NFUN_148__(__NFUN_340__(dnDeathmatchGame(Level.Game), none), __NFUN_340__(dnDeathmatchGame(Level.Game).Announcer, none)))
					{
						dnDeathmatchGame(Level.Game).Announcer.TriggerQueueAnnounce('Announce_BabeCapture_Blue', self);
					}
					dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe0State(3);					
				}
				else
				{
					// End:0x1E7
					if(__NFUN_173__(int(Team), 1))
					{
						// End:0x1C6
						if(__NFUN_148__(__NFUN_340__(dnDeathmatchGame(Level.Game), none), __NFUN_340__(dnDeathmatchGame(Level.Game).Announcer, none)))
						{
							dnDeathmatchGame(Level.Game).Announcer.TriggerQueueAnnounce('Announce_BabeCapture_Red', self);
						}
						dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe1State(3);
					}
				}
				bScored = true;
				// End:0x217
				if(__NFUN_340__(DukeMultiPlayer(Carrier), none))
				{
					DukeMultiPlayer(Carrier).TriggerEventVO(7);
				}
			}
		}
		DropShouldDestroyWeapon = false;
		DoNotDropMe = false;
		Carrier.WalkSpeedScale = __NFUN_195__(Carrier.WalkSpeedScale, 0.05);
		// End:0x270
		if(bScored)
		{
			dnCaptureTheBabe_Player(Carrier).DropCarriedActor3(self,, true,, true);
		}
		DropShouldDestroyWeapon = false;
		bGrabbing = false;
	}
	return;
}

simulated function Scored2(Pawn Carrier)
{
	// End:0x0B
	if(bTeleportTimerActive)
	{
		return;
	}
	dnMultiplayer(Level.Game).ScorePoint(dnCaptureTheBabe_Player(Carrier));
	PlayBabeVO(1, true);
	iFreakingOut = 0;
	return;
}

simulated function buttSlapped()
{
	// End:0x7D
	if(__NFUN_340__(CarriedBy, none))
	{
		iFreakingOut = 0;
		nDebugAnim = __NFUN_164__(nDebugAnim, 3);
		// End:0x3B
		if(__NFUN_173__(nDebugAnim, 0))
		{
			SetAnimation('Anim_Slapped1');			
		}
		else
		{
			// End:0x54
			if(__NFUN_173__(nDebugAnim, 1))
			{
				SetAnimation('Anim_Slapped2');				
			}
			else
			{
				SetAnimation('Anim_Slapped3');
			}
		}
		__NFUN_184__(nDebugAnim);
		PlayBabeVO(0, true);
		__NFUN_605__(5, false, 'ContinueComplaining');
	}
	return;
}

simulated function ContinueComplaining()
{
	// End:0x1D
	if(__NFUN_145__(bTeleportTimerActive))
	{
		SetAnimation('Anim_StandKick');
		SetHideFakeHand(false);
	}
	return;
}

simulated function ShowFakeHandWithDelay()
{
	// End:0x1E
	if(__NFUN_145__(bTeleportTimerActive))
	{
		// End:0x1E
		if(__NFUN_340__(CarriedBy, none))
		{
			SetHideFakeHand(false);
		}
	}
	return;
}

simulated event bool CanBeGrabbedBy(Pawn User)
{
	return false;
	return;
}

simulated function ClientUnGrabbed(Pawn Grabber, bool Thrown, Vector Loc, Rotator Rot, float Force, Rotator DropDirection, float HeldTime, Vector AngularVelocity)
{
	super(InteractiveActor).ClientUnGrabbed(Grabber, Thrown, Loc, Rot, Force, DropDirection, HeldTime, AngularVelocity);
	bDropInPlace = false;
	return;
}

simulated function UnGrabbed(Pawn GrabberPawn, bool Thrown)
{
	local PlayerPawn PP;
	local Vector TargetLocation, vDiff;
	local Rotator Rot;

	Rot = Rotation;
	super(InteractiveActor).UnGrabbed(GrabberPawn, false);
	SetHideFakeHand(true);
	Rot = Rotation;
	// End:0x1D3
	if(__NFUN_145__(GrabberPawn.IsDead()))
	{
		// End:0xE8
		if(dnCaptureTheBabe_Player(GrabberPawn).carrierShrinking)
		{
			SetAnimation('Anim_ScaredComplex_Begin');
			TargetLocation = GrabberPawn.Location;
			vDiff = __NFUN_253__(__NFUN_239__(TargetLocation, Location));
			vDiff.Z = 0;
			Rot = Rotator(vDiff);
			Rot.Roll = 0;
			Rot.Pitch = 0;
			SetBabeRotation(Rot);
			__NFUN_645__(TargetLocation);
			StartTeleportTimer_Home(DropTeleportTime);
			PlayBabeVO(4, true);			
		}
		else
		{
			// End:0x112
			if(bForceDropBecauseAlone)
			{
				bForceDropBecauseAlone = false;
				SetAnimation('Anim_Scared');
				StartTeleportTimer_Home(DropTeleportTime);				
			}
			else
			{
				// End:0x1BA
				if(__NFUN_148__(__NFUN_339__(CarriedBy, none), bCarrierWasDestroyed))
				{
					bDropInPlace = true;
					TargetLocation = GrabberPawn.Location;
					vDiff = __NFUN_253__(__NFUN_239__(TargetLocation, Location));
					vDiff.Z = 0;
					Rot = Rotator(vDiff);
					Rot.Roll = 0;
					Rot.Pitch = 0;
					SetBabeRotation(Rot);
					bCarrierWasDestroyed = false;
					SetAnimation('Anim_Scared');
					StartTeleportTimer_Home(DropTeleportTime);					
				}
				else
				{
					StartTeleportTimer_CageFirstThenHome(ScoreTeleportTime);
				}
			}
			SetBabeRotation(Rot);
		}		
	}
	else
	{
		SetAnimation('Anim_ScaredComplex_Begin');
		TargetLocation = GrabberPawn.Location;
		vDiff = __NFUN_253__(__NFUN_239__(TargetLocation, Location));
		vDiff.Z = 0;
		Rot = Rotator(vDiff);
		Rot.Roll = 0;
		Rot.Pitch = 0;
		SetBabeRotation(Rot);
		StartTeleportTimer_Home(DropTeleportTime);
		PlayBabeVO(2, true);
	}
	PP = PlayerPawn(GrabberPawn);
	// End:0x344
	if(__NFUN_148__(__NFUN_340__(PP, none), __NFUN_173__(int(Role), int(ROLE_Authority))))
	{
		__NFUN_620__(default.CollisionRadius, default.CollisionHeight);
		ResetCollision();
		// End:0x2F0
		if(__NFUN_173__(int(Team), 0))
		{
			// End:0x2ED
			if(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(1)))
			{
				dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe0State(2);
			}			
		}
		else
		{
			// End:0x344
			if(__NFUN_173__(int(Team), 1))
			{
				// End:0x344
				if(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(1)))
				{
					dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe1State(2);
				}
			}
		}
	}
	AttachRevolver();
	dnCaptureTheBabe_Player(GrabberPawn).SetTouchedEnemyBabe2(none);
	dnCaptureTheBabe_Player(GrabberPawn).GivePreviousWeapon();
	Grabber = none;
	__NFUN_642__(2);
	// End:0x390
	if(HomeNow)
	{
		ResetAndTeleportHome();
	}
	return;
}

simulated function ResetAndTeleportHome()
{
	__NFUN_620__(default.CollisionRadius, default.CollisionHeight);
	// End:0x3D
	if(__NFUN_173__(int(Team), 0))
	{
		dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe0State(0);		
	}
	else
	{
		dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe1State(0);
	}
	TeleportHome();
	return;
}

simulated function bool CanShrink(class<DamageType> DamageType)
{
	return false;
	return;
}

function Bump(Actor Other)
{
	// End:0xC9
	if(Other.__NFUN_358__('dnCaptureTheBabe_Player'))
	{
		// End:0xC9
		if(__NFUN_173__(int(Team), int(Pawn(Other).PlayerReplicationInfo.Team)))
		{
			// End:0xC6
			if(__NFUN_150__(__NFUN_148__(__NFUN_173__(int(Team), 0), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(2))), __NFUN_148__(__NFUN_173__(int(Team), 1), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(2)))))
			{
				dnCaptureTheBabe_Player(Other).ReturnedBabe();
				ResetAndTeleportHome();
			}			
		}
	}
	Touch(Other);
	return;
}

simulated function bool IsPlayerWithinUseRange(DukeMultiPlayer P)
{
	// End:0x5D
	if(__NFUN_203__(__NFUN_244__(__NFUN_239__(Location, P.Location), Vector(P.Rotation)), UseAngleThreshold))
	{
		// End:0x5D
		if(__NFUN_200__(__NFUN_252__(__NFUN_239__(P.Location, Location)), __NFUN_195__(default.CollisionRadius, default.CollisionRadius)))
		{
			return true;
		}
	}
	return false;
	return;
}

function bool CanTouchGrabBabe(Pawn Other)
{
	// End:0x108
	if(__NFUN_340__(DukeMultiPlayer(Other), none))
	{
		// End:0x45
		if(__NFUN_150__(__NFUN_173__(int(Other.PostureStateEx), int(3)), __NFUN_173__(int(Other.PostureStateEx), int(8))))
		{
			return false;
		}
		// End:0x69
		if(DukeMultiPlayer(Other).GameReplicationInfo.bWaitingForPlayers)
		{
			return false;
		}
		// End:0x106
		if(__NFUN_174__(int(Team), int(DukeMultiPlayer(Other).PlayerReplicationInfo.Team)))
		{
			// End:0x101
			if(__NFUN_150__(__NFUN_148__(__NFUN_173__(int(Team), 0), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(3))), __NFUN_148__(__NFUN_173__(int(Team), 1), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(3)))))
			{
				return false;
			}
			return true;			
		}
		else
		{
			return false;
		}
	}
	return false;
	return;
}

function Used(Actor Other, Pawn EventInstigator)
{
	GrabBabe(Other);
	return;
}

simulated function bool CanBeUsedBy(Pawn User)
{
	local bool boRetVal;

	boRetVal = super(InteractiveActor).CanBeUsedBy(User);
	// End:0x2A9
	if(__NFUN_340__(DukeMultiPlayer(User), none))
	{
		// End:0x3C
		if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		{
			bCanBeUsedBy = false;			
		}
		else
		{
			// End:0x49
			if(__NFUN_145__(bCanBeUsedBy))
			{
				return false;
			}
		}
		// End:0xB2
		if(__NFUN_148__(__NFUN_340__(PlayerPawn(User).Weapon, none), __NFUN_150__(PlayerPawn(User).Weapon.__NFUN_358__('MP_PipeBomb'), PlayerPawn(User).Weapon.__NFUN_358__('MP_Tripmine'))))
		{
			return false;
		}
		// End:0xF5
		if(__NFUN_148__(__NFUN_340__(PlayerPawn(User).Weapon, none), PlayerPawn(User).Weapon.__NFUN_358__('MP_Steroids')))
		{
			return false;
		}
		// End:0x103
		if(__NFUN_340__(Grabber, none))
		{
			return false;
		}
		// End:0x137
		if(__NFUN_150__(__NFUN_173__(int(User.PostureStateEx), int(3)), __NFUN_173__(int(User.PostureStateEx), int(8))))
		{
			return false;
		}
		// End:0x15B
		if(DukeMultiPlayer(User).GameReplicationInfo.bWaitingForPlayers)
		{
			return false;
		}
		// End:0x170
		if(User.IsMostlyShrunk())
		{
			return false;
		}
		// End:0x194
		if(dnDeathmatchGameReplicationInfo(Level.GRI).JustStoodUp())
		{
			return false;
		}
		// End:0x2A7
		if(__NFUN_174__(int(Team), int(DukeMultiPlayer(User).PlayerReplicationInfo.Team)))
		{
			// End:0x29A
			if(__NFUN_150__(__NFUN_150__(__NFUN_150__(__NFUN_148__(__NFUN_173__(int(Team), 0), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(3))), __NFUN_148__(__NFUN_173__(int(Team), 1), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(3)))), __NFUN_148__(__NFUN_173__(int(Team), 0), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(1)))), __NFUN_148__(__NFUN_173__(int(Team), 1), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(1)))))
			{
				return false;
			}
			bCanBeUsedBy = true;
			return true;			
		}
		else
		{
			return false;
		}
	}
	bCanBeUsedBy = boRetVal;
	return boRetVal;
	return;
}

simulated event Tick(float DeltaSeconds)
{
	// End:0x59
	if(__NFUN_148__(__NFUN_340__(Grabber, none), Grabber.IsDead()))
	{
		SetHideFakeHand(true);
		DoNotDropMe = false;
		dnCaptureTheBabe_Player(Grabber).bCarryingBabe = false;
		Grabber.DropCarriedActor(, true);
	}
	return;
}

function GrabBabe(Actor Other)
{
	local dnCaptureTheBabe_Player CTB_Other;

	CTB_Other = dnCaptureTheBabe_Player(Other);
	// End:0x1E
	if(__NFUN_339__(CTB_Other, none))
	{
		return;
	}
	// End:0x23E
	if(__NFUN_148__(__NFUN_148__(__NFUN_145__(CTB_Other.bFullyShrunk), __NFUN_145__(CTB_Other.IsShrinking())), __NFUN_145__(CTB_Other.IsSizeChangeActive())))
	{
		// End:0x23E
		if(__NFUN_145__(CTB_Other.Weapon.__NFUN_358__('MP_Steroids')))
		{
			// End:0x23E
			if(__NFUN_145__(CTB_Other.Weapon.__NFUN_358__('MP_FortyOunceBeer')))
			{
				// End:0x23E
				if(__NFUN_148__(__NFUN_150__(__NFUN_148__(__NFUN_173__(int(Team), 0), __NFUN_150__(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(0)), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team0BabeState), int(2)))), __NFUN_148__(__NFUN_173__(int(Team), 1), __NFUN_150__(__NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(0)), __NFUN_173__(int(dnDeathmatchGameReplicationInfo(Level.GRI).Team1BabeState), int(2))))), bGrabbable))
				{
					Pawn(Other).CarriedActorLeftHandAdjust.Yaw = 0;
					Pawn(Other).CarriedActorLeftHandAdjust.Pitch = 0;
					Pawn(Other).CarriedActorLeftHandAdjust.Roll = 0;
					CarriedActorLeftHandAdjust.Yaw = 0;
					CarriedActorLeftHandAdjust.Pitch = 0;
					CarriedActorLeftHandAdjust.Roll = 0;
					// End:0x23E
					if(__NFUN_145__(dnMultiplayer(Level.Game).IsAlone()))
					{
						// End:0x228
						if(CTB_Other.bOnSteroids)
						{
							CTB_Other.EndSteroids();
						}
						SetGrabbedByEnemy2(Pawn(Other));
						RemoveRevolver();
					}
				}
			}
		}
	}
	return;
}

simulated function StartTeleportTimer_CageFirstThenHome(float Time)
{
	// End:0x10
	if(__NFUN_169__(int(Role), int(ROLE_Authority)))
	{
		return;
	}
	// End:0x1B
	if(bTeleportTimerActive)
	{
		return;
	}
	bTeleportTimerActive = true;
	__NFUN_607__(Time, true, 'TeleportTimerHome');
	TeleportArea();
	SetAnimation('Anim_DanceA');
	SetHideFakeHand(true);
	return;
}

function StartTeleportTimer_Home(float Time)
{
	local Vector AreaLocationModified;

	// End:0x0B
	if(bTeleportTimerActive)
	{
		return;
	}
	bTeleportTimerActive = true;
	__NFUN_607__(Time, true, 'TeleportTimerHome');
	return;
}

function TeleportTimerHome()
{
	// End:0x36
	if(__NFUN_148__(__NFUN_684__(5), __NFUN_169__(TeleportTimerHomeCount, 20)))
	{
		__NFUN_608__('TeleportTimerHome');
		__NFUN_607__(0.5, false, 'TeleportTimerHome');
		__NFUN_184__(TeleportTimerHomeCount);		
	}
	else
	{
		TeleportTimerHomeCount = 0;
		// End:0xBD
		if(__NFUN_340__(Level.GRI, none))
		{
			__NFUN_620__(default.CollisionRadius, default.CollisionHeight);
			// End:0x90
			if(__NFUN_173__(int(Team), 0))
			{
				dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe0State(0);				
			}
			else
			{
				// End:0xBD
				if(__NFUN_173__(int(Team), 1))
				{
					dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe1State(0);
				}
			}
		}
		TeleportHome();
	}
	return;
}

simulated function StopTeleportTimer()
{
	__NFUN_608__('TeleportTimerHome');
	bTeleportTimerActive = false;
	return;
}

simulated event PhysicsVolumeChange(PhysicsVolume NewVolume)
{
	super.PhysicsVolumeChange(NewVolume);
	// End:0xEF
	if(__NFUN_150__(__NFUN_150__(NewVolume.bWaterVolume, NewVolume.bKillVolume), __NFUN_148__(__NFUN_148__(__NFUN_340__(DamageVolume(NewVolume), none), __NFUN_340__(DamageVolume(NewVolume).DamageType, none)), __NFUN_150__(__NFUN_150__(__NFUN_150__(__NFUN_357__(DamageVolume(NewVolume).DamageType, class'FallingDamage'), __NFUN_339__(DamageVolume(NewVolume).DamageType, class'BiochemicalDamage')), __NFUN_339__(DamageVolume(NewVolume).DamageType, class'ElectricalDamage')), __NFUN_339__(DamageVolume(NewVolume).DamageType, class'FireDamage')))))
	{
		HomeNow = true;
	}
	return;
}

simulated function TeleportHome()
{
	StopTeleportTimer();
	Level.Game.PlayTeleportEffect(self, false, true);
	__NFUN_864__(InitialLocation, true);
	SetBabeRotation(InitialRotation);
	Level.Game.PlayTeleportEffect(self, false, true);
	bGrabbable = true;
	SetRandomAnimation();
	__NFUN_606__('ContinueComplaining');
	ResetCollision();
	HomeNow = false;
	return;
}

simulated delegate ResetCollision()
{
	__NFUN_621__(default.bCollideActors, default.bBlockActors, default.bBlockPlayers, default.bBlockKarma, default.bCollideWorld);
	return;
}

noexport simulated delegate TeleportArea()
{
	bTeleportTimerActive = false;
	__NFUN_621__(default.bCollideActors, default.bBlockActors, default.bBlockPlayers, default.bBlockKarma, default.bCollideWorld);
	__NFUN_864__(__NFUN_238__(AreaOppositeLocation, __NFUN_232__(0, 0, 24)), true);
	__NFUN_642__(2);
	Level.Game.PlayTeleportEffect(self, false, true);
	bGrabbable = true;
	__NFUN_606__('ContinueComplaining');
	return;
}

simulated function bool CanBeGrabUsedBy(Pawn User)
{
	return false;
	return;
}

simulated function NU_SetClientGrabberChange2(Pawn newgrabber)
{
	local PlayerPawn PP;
	local Rotator Rot;
	local bool bIsLocallyControlled, bFirstPerson;

	// End:0x2BB
	if(__NFUN_340__(newgrabber, none))
	{
		bIsLocallyControlled = dnCaptureTheBabe_Player(newgrabber).IsLocallyControlled();
		bFirstPerson = __NFUN_148__(bIsLocallyControlled, __NFUN_145__(dnCaptureTheBabe_Player(newgrabber).bBehindView));
		// End:0x9F
		if(bFirstPerson)
		{
			GrabInfo.MountOrigin.X = float(nBabePos1X);
			GrabInfo.MountOrigin.Y = float(nBabePos1Y);
			GrabInfo.MountOrigin.Z = float(nBabePos1Z);			
		}
		else
		{
			GrabInfo.MountOrigin.X = float(nBabePos3X);
			GrabInfo.MountOrigin.Y = float(nBabePos3Y);
			GrabInfo.MountOrigin.Z = float(nBabePos3Z);
		}
		GrabInfo.MountAngles.Pitch = nPitchBabe;
		GrabInfo.MountAngles.Yaw = nYawBabe;
		GrabInfo.MountAngles.Roll = nRollBabe;
		newgrabber.CarriedActor = self;
		CarriedBy = newgrabber;
		Grabbed(newgrabber);
		FindSoundAndSpeak('Sound_TossBomb');
		PP = PlayerPawn(newgrabber);
		// End:0x1F0
		if(__NFUN_148__(__NFUN_340__(PP, none), __NFUN_173__(int(Role), int(ROLE_Authority))))
		{
			__NFUN_620__(60, default.CollisionHeight);
			__NFUN_621__(false, false, false, false, false);
			// End:0x1C3
			if(__NFUN_173__(int(Team), 0))
			{
				dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe0State(1);				
			}
			else
			{
				// End:0x1F0
				if(__NFUN_173__(int(Team), 1))
				{
					dnDeathmatchGameReplicationInfo(Level.GRI).SetBabe1State(1);
				}
			}
		}
		StopTeleportTimer();
		SetAnimation('Anim_StandKick');
		dnCaptureTheBabe_Player(newgrabber).SetTouchedEnemyBabe2(self);
		__NFUN_605__(10, false, 'ShowFakeHandWithDelay');
		// End:0x2B8
		if(__NFUN_148__(__NFUN_340__(dnCaptureTheBabe_Player(newgrabber), none), __NFUN_201__(dnCaptureTheBabe_Player(newgrabber).CollisionModifierWithBabe, 0)))
		{
			dnCaptureTheBabe_Player(newgrabber).__NFUN_620__(__NFUN_195__(newgrabber.CollisionRadius, dnCaptureTheBabe_Player(newgrabber).CollisionModifierWithBabe), newgrabber.CollisionHeight);
			newgrabber.__NFUN_645__(newgrabber.Location);
		}		
	}
	else
	{
		// End:0x30D
		if(__NFUN_145__(bForceDropBecauseAlone))
		{
			StartTeleportTimer_CageFirstThenHome(ScoreTeleportTime);
			SetBabeRotation(Rot);
			__NFUN_620__(default.CollisionRadius, default.CollisionHeight);
			dnCaptureTheBabe_Player(Grabber).SetTouchedEnemyBabe2(none);
			Scored2(Grabber);			
		}
		else
		{
			StartTeleportTimer_Home(ScoreTeleportTime);
			SetBabeRotation(Rot);
			__NFUN_620__(default.CollisionRadius, default.CollisionHeight);
			dnCaptureTheBabe_Player(Grabber).SetTouchedEnemyBabe2(none);
		}
		__NFUN_606__('ShowFakeHandWithDelay');
		SetHideFakeHand(true);
		// End:0x3DC
		if(__NFUN_201__(dnCaptureTheBabe_Player(Grabber).CollisionModifierWithBabe, 0))
		{
			dnCaptureTheBabe_Player(Grabber).__NFUN_620__(__NFUN_195__(Grabber.CollisionRadius, __NFUN_196__(1, dnCaptureTheBabe_Player(Grabber).CollisionModifierWithBabe)), Grabber.CollisionHeight);
			Grabber.__NFUN_645__(Grabber.Location);
		}
		Grabber.CarriedActor = self;
		DropMe2(Grabber, false);
		Grabber.CarriedActor = none;
		CarriedBy = none;
		dnCaptureTheBabe_Player(Grabber).GivePreviousWeapon();
	}
	return;
}

simulated function CreateRevolverAttachments()
{
	local Vector SpawnLocation;

	SpawnLocation = __NFUN_568__().__NFUN_533__('LeftUpLeg', true);
	GunBeltAttachment = __NFUN_615__(class'CustomizationDecoration', self,, SpawnLocation);
	// End:0xA8
	if(__NFUN_340__(GunBeltAttachment, none))
	{
		GunBeltAttachment.__NFUN_595__(class'babe_holster');
		GunBeltAttachment.MountType = 2;
		GunBeltAttachment.MountMeshItem = 'LeftUpLeg';
		GunBeltAttachment.DestroyOnDismount = true;
		GunBeltAttachment.__NFUN_591__(DrawScale);
		GunBeltAttachment.__NFUN_635__(self, false, false, true, true, true);
	}
	GunAttachment = __NFUN_615__(class'CustomizationDecoration', self,, SpawnLocation);
	// End:0x139
	if(__NFUN_340__(GunAttachment, none))
	{
		GunAttachment.__NFUN_595__(class'babe_revolver');
		GunAttachment.MountType = 2;
		GunAttachment.MountMeshItem = 'LeftUpLeg';
		GunAttachment.DestroyOnDismount = true;
		GunAttachment.__NFUN_591__(DrawScale);
		GunAttachment.__NFUN_635__(self, false, false, true, true, true);
	}
	return;
}

noexport simulated delegate RemoveRevolver()
{
	GunAttachment.__NFUN_590__(true);
	return;
}

noexport simulated delegate AttachRevolver()
{
	GunAttachment.__NFUN_590__(false);
	return;
}

simulated function AnimEnd_ScaredComplex_Begin()
{
	SetAnimation('Anim_ScaredComplex_Crouch');
	return;
}

simulated function AnimEnd_ScaredComplex_Crouch()
{
	SetAnimation('Anim_ScaredComplex_CrouchToNormal');
	return;
}

simulated function AnimEnd_ScaredComplex_CrouchToNormal()
{
	SetAnimation('Anim_ScaredComplex_ShrinkMakeFun');
	return;
}

simulated function AnimEnd_ScaredComplex_ShrinkMakeFun()
{
	SetRandomAnimation();
	return;
}

simulated function AnimEnd_BabeGrabbed()
{
	SetAnimation('Anim_StandKick');
	return;
}

simulated function AnimEnd_BabeSlappedFinished()
{
	// End:0x17
	if(__NFUN_340__(CarriedBy, none))
	{
		SetAnimation('Anim_SlappedHurt');
	}
	return;
}

simulated function AnimEnd_BabeKickFinished()
{
	// End:0x17
	if(__NFUN_340__(CarriedBy, none))
	{
		SetAnimation('Anim_CoverFace');
	}
	return;
}

simulated function GrabUsableDelay()
{
	bGrabUsable = true;
	ForceSyncGrabUsable(bGrabUsable);
	return;
}

simulated function FailedGrabUsableDelay()
{
	bGrabUsable = true;
	ForceSyncGrabUsable(bGrabUsable, true);
	return;
}

simulated function ForceSyncGrabUsable(bool B, optional bool bFailedAttempt)
{
	local dnCaptureTheBabe_Player Player;

	bGrabUsable = B;
	// End:0x99
	if(bGrabUsable)
	{
		// End:0x80
		if(__NFUN_150__(__NFUN_340__(CarriedBy, none), __NFUN_340__(Grabber, none)))
		{
			// End:0x4F
			if(__NFUN_340__(CarriedBy, none))
			{
				Player = dnCaptureTheBabe_Player(CarriedBy);				
			}
			else
			{
				// End:0x6B
				if(__NFUN_340__(Grabber, none))
				{
					Player = dnCaptureTheBabe_Player(Grabber);
				}
			}
			Player.bButtSlap = false;			
		}
		else
		{
			// End:0x99
			if(__NFUN_145__(bFailedAttempt))
			{
				__NFUN_607__(ButtSlapDelay, false, 'FailedGrabUsableDelay');
			}
		}
	}
	return;
}

simulated function SetHideFakeHand(bool boHide)
{
	local dnCaptureTheBabe_Player Player;
	local dnCaptureTheBabe_Hand hand;
	local Pawn PlayerPawn;

	PlayerPawn = none;
	// End:0x2B
	if(__NFUN_145__(boHide))
	{
		__NFUN_607__(ButtSlapDelay, false, 'GrabUsableDelay');
		__NFUN_608__('FailedGrabUsableDelay');		
	}
	else
	{
		__NFUN_608__('GrabUsableDelay');
		__NFUN_608__('FailedGrabUsableDelay');
		bGrabUsable = false;
	}
	// End:0xD4
	if(__NFUN_150__(__NFUN_340__(CarriedBy, none), __NFUN_340__(Grabber, none)))
	{
		// End:0x77
		if(__NFUN_340__(CarriedBy, none))
		{
			PlayerPawn = CarriedBy;			
		}
		else
		{
			// End:0x8E
			if(__NFUN_340__(Grabber, none))
			{
				PlayerPawn = Grabber;
			}
		}
		Player = dnCaptureTheBabe_Player(PlayerPawn);
		// End:0xD4
		if(__NFUN_340__(Player.hand, none))
		{
			Player.hand.SetHandHidden(boHide);
		}
	}
	return;
}

simulated function Anim_EyesBlink(int nEyeSet)
{
	local name fnAnimName;

	fnAnimName = __NFUN_343__(__NFUN_302__(string('Anim_EyesBlink'), string(nEyeSet)));
	PlayBlinkAnim(fnAnimName);
	return;
}

simulated event EnableBlinking()
{
	MaxBlinkTime = default.MaxBlinkTime;
	__NFUN_605__(__NFUN_223__(MinBlinkTime, MaxBlinkTime), false, 'bLink');
	return;
}

simulated event DisableBlinking()
{
	MaxBlinkTime = 0;
	__NFUN_606__('bLink');
	return;
}

simulated event bLink()
{
	local int i;

	i = 0;
	J0x07:

	// End:0x2E [Loop If]
	if(__NFUN_169__(i, NumEyeSets))
	{
		Anim_EyesBlink(__NFUN_165__(i, 1));
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x07;
	}
	__NFUN_605__(__NFUN_223__(MinBlinkTime, MaxBlinkTime), false, 'bLink');
	return;
}

simulated event PlayBlinkAnim(name AnimName)
{
	// End:0x24
	if(__NFUN_148__(__NFUN_173__(int(Role), int(ROLE_Authority)), IsMP()))
	{
		ClientPlayBlinkAnimation(AnimName);
	}
	// End:0x36
	if(__NFUN_339__(AnimationController, none))
	{
		InitializeAnimation();
	}
	dnAnimationControllerEx_Babe_Standing(AnimationController).SetAnimState(AnimName);
	return;
}

simulated delegate ClientPlayBlinkAnimation(name AnimName)
{
	PlayBlinkAnim(AnimName);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	local int i;

	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1267__(class'babe_holster');
	PrecacheIndex.__NFUN_1267__(class'babe_revolver');
	i = __NFUN_166__(string(AshleyVOs), 1);
	J0x3E:

	// End:0x70 [Loop If]
	if(__NFUN_172__(i, 0))
	{
		PrecacheIndex.__NFUN_1277__(VoicePack, AshleyVOs[i]);
		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x3E;
	}
	i = __NFUN_166__(string(MaryKateVOs), 1);
	J0x7F:

	// End:0xB1 [Loop If]
	if(__NFUN_172__(i, 0))
	{
		PrecacheIndex.__NFUN_1277__(VoicePack, MaryKateVOs[i]);
		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x7F;
	}
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_TossBomb');
	PrecacheIndex.__NFUN_1269__(TeamSkin[0]);
	PrecacheIndex.__NFUN_1269__(TeamSkin[1]);
	PrecacheIndex.__NFUN_1283__('Anim_IdleA', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_IdleB', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_CoverFaceFirstPerson', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_CoverFaceThirdPerson', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Slapped1', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Slapped2', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Slapped3', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_StandKick', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_SlappedHurt', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_ScaredComplex_Begin', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_ScaredComplex_Crouch', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_ScaredComplex_CrouchToNormal', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_ScaredComplex_ShrinkMakeFun', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Scared', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_DanceA', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_EyesBlink1', AnimationControllerClass, Mesh);
	return;
}

k2call simulated function DustImpactEffect(optional EventInfo AnimEventInfo)
{
	BoneEffectSpawner(__NFUN_343__(AnimEventInfo.EventString), class'BulletImpact_Dust_Spawner', __NFUN_265__(16384, 0, 0), true);
	return;
}

k2call simulated function GrassImpactEffect(optional EventInfo AnimEventInfo)
{
	BoneEffectSpawner(__NFUN_343__(AnimEventInfo.EventString), class'BulletImpact_Grass_Spawner', __NFUN_265__(16384, 0, 0), true);
	return;
}

k2call simulated function GroundImpactEffect(optional EventInfo AnimEventInfo)
{
	BoneEffectSpawner(__NFUN_343__(AnimEventInfo.EventString), class'StompImpact_Large_Brown_Spawner',, true);
	return;
}

defaultproperties
{
	DropTeleportTime=10
	ScoreTeleportTime=5
	freakOutThreshold=3
	AshleyVOs(0)=AnimRateVariance
	AnimGridLink=/* Unknown default property type! */
}