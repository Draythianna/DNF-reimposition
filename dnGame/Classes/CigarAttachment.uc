/*******************************************************************************
 * CigarAttachment generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class CigarAttachment extends dnDecoration
	dependson(CigarAttachment_ThirdPerson);

var() noexport float EgoPerPuff "Maximum ego to gain each puff which happesn every PuffDuration seconds";
var() noexport float PuffPeriod "Time between puffs.";
var() noexport float PuffDuration "Time it takes to complete a puff.";
var() noexport float TotalEgoBonus "The total ego to give over time.";
var Pawn Puffer;
var float GridPerSecond;
var float EgoBonusRemaining;
var float BurnGrid;
var float BurnGridTarget;
var float BurnGridMin;
var float BurnGridMax;
var Color BurningColor;
var CigarSmoke SmokeThin;
var CigarSmokeThick SmokeThick;
var float SmokeCallBack;
var SMountPrefab ThirdPersonMountPrefab;
var CigarAttachment_ThirdPerson CigarTP;

replication
{
	// Pos:0x000
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		BurnGrid;
}

event PostVerifySelf()
{
	super.PostVerifySelf();
	SmokeThin = CigarSmoke(FindMountedActor('SMOKE_THIN'));
	SmokeThick = CigarSmokeThick(FindMountedActor('SMOKE_THICK'));
	__NFUN_354__(__NFUN_340__(SmokeThin, none));
	__NFUN_354__(__NFUN_340__(SmokeThick, none));
	PuffPeriod = __NFUN_225__(PuffPeriod, PuffDuration);
	SmokeCallBackFunc();
	return;
}

simulated event HiddenChanged()
{
	super(Actor).HiddenChanged();
	// End:0x25
	if(__NFUN_340__(CigarTP, none))
	{
		CigarTP.__NFUN_590__(bHidden);
	}
	return;
}

event Destroyed()
{
	super.Destroyed();
	// End:0x26
	if(__NFUN_340__(CigarTP, none))
	{
		CigarTP.__NFUN_614__();
		CigarTP = none;
	}
	return;
}

final function MakePawnPuff(Pawn NewPuffer)
{
	Puffer = NewPuffer;
	__NFUN_641__(Puffer);
	BurnGrid = -1;
	AnimationController.SetAnimGridState('SmokeGrid', BurnGrid);
	// End:0x61
	if(Puffer.bIsPlayerPawn)
	{
		PlayerPawn(Puffer).CigarAttachment = self;
	}
	EgoBonusRemaining = TotalEgoBonus;
	BurnGrid = BurnGridMin;
	BurnGridTarget = BurnGridMin;
	GridPerSecond = __NFUN_196__(__NFUN_196__(__NFUN_199__(BurnGridMax, BurnGridMin), __NFUN_196__(TotalEgoBonus, EgoPerPuff)), PuffDuration);
	__NFUN_605__(PuffPeriod, true, 'DoPuff');
	DoPuff();
	// End:0xE5
	if(__NFUN_340__(DukePlayer(Puffer), none))
	{
		DukePlayer(Puffer).GivePermanentEgoCapAward(17);
	}
	CigarTP = __NFUN_615__(class'CigarAttachment_ThirdPerson', Owner);
	// End:0x11C
	if(__NFUN_340__(CigarTP, none))
	{
		CigarTP.__NFUN_633__(ThirdPersonMountPrefab, Puffer, false);
	}
	return;
}

simulated event Tick(float DeltaTime)
{
	local byte Step;
	local Color C;

	super(Actor).Tick(DeltaTime);
	// End:0x1E4
	if(__NFUN_173__(int(Role), int(ROLE_Authority)))
	{
		// End:0x2A
		if(__NFUN_339__(Puffer, none))
		{
			__NFUN_614__();
			return;
		}
		// End:0xFD
		if(__NFUN_206__(BurnGrid, BurnGridTarget))
		{
			BurnGrid = __NFUN_227__(__NFUN_198__(BurnGrid, __NFUN_195__(GridPerSecond, DeltaTime)), BurnGridMin, BurnGridTarget);
			// End:0xCB
			if(__NFUN_204__(BurnGrid, BurnGridTarget))
			{
				SmokeThick.Enabled = true;
				__NFUN_605__(SmokeCallBack, false, 'SmokeCallBackFunc');
				// End:0xC8
				if(__NFUN_204__(EgoBonusRemaining, 0))
				{
					__NFUN_614__();
					// End:0xC8
					if(Puffer.bIsPlayerPawn)
					{
						PlayerPawn(Puffer).CigarAttachment = none;
					}
				}				
			}
			else
			{
				SmokeThin.Enabled = false;
			}
			__NFUN_601__('Generic0', __NFUN_338__(0.05, __NFUN_603__('Generic0'), BurningColor));			
		}
		else
		{
			SmokeThin.Enabled = true;
			C = __NFUN_603__('Generic0');
			Step = byte(__NFUN_195__(float(255), DeltaTime));
			// End:0x15C
			if(__NFUN_172__(int(C.R), __NFUN_165__(32, int(Step))))
			{
				__NFUN_154__(C.R, Step);				
			}
			else
			{
				C.R = 32;
			}
			// End:0x193
			if(__NFUN_172__(int(C.G), int(Step)))
			{
				__NFUN_154__(C.G, Step);				
			}
			else
			{
				C.G = 0;
			}
			// End:0x1CA
			if(__NFUN_172__(int(C.B), int(Step)))
			{
				__NFUN_154__(C.B, Step);				
			}
			else
			{
				C.B = 0;
			}
			__NFUN_601__('Generic0', C);
		}
	}
	AnimationController.SetAnimGridState('SmokeGrid', BurnGrid);
	// End:0x248
	if(__NFUN_340__(CigarTP, none))
	{
		CigarTP.AnimationController.SetAnimGridState('SmokeGrid', BurnGrid);
		CigarTP.__NFUN_601__('Generic0', __NFUN_603__('Generic0'));
	}
	return;
}

final function DoPuff()
{
	local float BonusEgo;

	// End:0x0E
	if(__NFUN_339__(Puffer, none))
	{
		return;
	}
	BonusEgo = EgoPerPuff;
	// End:0x9A
	if(__NFUN_201__(BonusEgo, 1))
	{
		__NFUN_210__(EgoBonusRemaining, BonusEgo);
		DecoActivity(0, 'PuffCigar_Cool');
		BurnGridTarget = __NFUN_199__(BurnGridMax, __NFUN_195__(__NFUN_196__(EgoBonusRemaining, TotalEgoBonus), __NFUN_199__(BurnGridMax, BurnGridMin)));
		// End:0x9A
		if(Puffer.bIsPlayerPawn)
		{
			Puffer.__NFUN_605__(__NFUN_198__(PuffDuration, 1), false, 'PlayCigarExhale');
		}
	}
	return;
}

final function SmokeCallBackFunc()
{
	SmokeThick.Enabled = false;
	return;
}

simulated event bool ShouldShowHoloDukeEffect()
{
	return true;
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(class'CigarAttachment_ThirdPerson');
	PrecacheIndex.__NFUN_1283__('SmokeGrid', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1277__(class'DukePlayer'.default.VoicePack, 'Cig_Exhale');
	return;
}

defaultproperties
{
	EgoPerPuff=10
	PuffPeriod=8
	PuffDuration=1.3
	TotalEgoBonus=50
	GridPerSecond=0.05
	BurnGrid=-1
	BurnGridMin=-1
	BurnGridMax=-0.3
	BurningColor=(B=121,G=2,R=1,A=255)
	SmokeCallBack=0.6
	ThirdPersonMountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=f_Jaw,MountOrigin=(X=1.609595E+22,Y=2.954501E-17,Z=1.463),Z=-0.413)
	
	BlendTotalTime=/* Unknown default property type! */
	bAdjustStart=0
}