/*******************************************************************************
 * Detonator generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Detonator extends Weapon
	dependson(PipeBomb)
	dependson(dnPipeBombProjectile);

var Color ActivePipeBombsColor;
var Color NoActivePipeBombsColor;
var PipeBomb PipeBombRef;
var int ActivePipeBombCount;
var array<dnPipeBombProjectile> PipeBombs;

replication
{
	// Pos:0x000
	reliable if(__NFUN_148__(__NFUN_173__(int(Role), int(ROLE_Authority)), bNetOwner))
		ActivePipeBombCount, PipeBombRef;

	// Pos:0x016
	reliable if(__NFUN_148__(__NFUN_173__(int(Role), int(ROLE_SimulatedProxy)), bNetOwner))
		rPushButton;
}

simulated event ScriptGetActorColor()
{
	// End:0x1B
	if(__NFUN_170__(ActivePipeBombCount, 0))
	{
		__NFUN_601__('Generic0', ActivePipeBombsColor);		
	}
	else
	{
		__NFUN_601__('Generic0', NoActivePipeBombsColor);
	}
	super(Actor).ScriptGetActorColor();
	return;
}

simulated function bool CanActivateNow()
{
	// End:0x0D
	if(__NFUN_171__(ActivePipeBombCount, 0))
	{
		return false;
	}
	return super.CanActivateNow();
	return;
}

final k2call simulated function PushButton(optional EventInfo AnimEventInfo)
{
	rPushButton();
	return;
}

simulated function rPushButton(optional float Delay)
{
	local int i;

	i = __NFUN_166__(string(PipeBombs), 1);
	J0x0F:

	// End:0x9A [Loop If]
	if(__NFUN_172__(i, 0))
	{
		// End:0x90
		if(__NFUN_340__(PipeBombs[i], none))
		{
			PipeBombs[i].Instigator = Instigator;
			PipeBombs[i].rPipeBombExecuteExplode(__NFUN_239__(PipeBombs[i].Location, __NFUN_234__(__NFUN_253__(PipeBombs[i].__NFUN_640__()), 16)));
		}
		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x0F;
	}
	return;
}

simulated function GetPrincipalAmmoValues(out int Value, out int MaxValue)
{
	PipeBombRef.GetPrincipalAmmoValues(Value, MaxValue);
	return;
}

simulated event bool AttemptFire(optional bool bContinueFire)
{
	// End:0x0B
	if(IsCompletelyOutOfAmmo())
	{
		return false;
	}
	return super.AttemptFire(bContinueFire);
	return;
}

simulated event int GetLoadedAmmo()
{
	return PipeBombRef.GetLoadedAmmo();
	return;
}

simulated function int GetTotalAmmo()
{
	return PipeBombRef.GetTotalAmmo();
	return;
}

simulated function int GetMaximumAmmo()
{
	return PipeBombRef.GetMaximumAmmo();
	return;
}

function float GetClipPCT()
{
	return PipeBombRef.GetClipPCT();
	return;
}

simulated function string GetHUDAmmoDisplay()
{
	return "";
	return;
}

function AddPipebomb(dnPipeBombProjectile PipeBomb)
{
	local int i;

	i = PipeBombs.Add(1);
	PipeBombs[i] = PipeBomb;
	ActivePipeBombCount = string(PipeBombs);
	return;
}

function RemovePipebomb(dnPipeBombProjectile PipeBomb)
{
	local int i;

	i = 0;
	J0x07:

	// End:0x46 [Loop If]
	if(__NFUN_169__(i, string(PipeBombs)))
	{
		// End:0x3C
		if(__NFUN_339__(PipeBombs[i], PipeBomb))
		{
			PipeBombs.Remove(i, 1);
			// [Explicit Break]
			goto J0x46;
		}
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x07;
	}
	J0x46:

	ActivePipeBombCount = string(PipeBombs);
	// End:0x85
	if(__NFUN_148__(__NFUN_173__(ActivePipeBombCount, 0), __NFUN_339__(Instigator.Weapon, self)))
	{
		Instigator.BringUpLastWeapon();
	}
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(InteractiveActor).RegisterPrecacheComponents(PrecacheIndex);
	// End:0x78
	if(PrecacheIndex.__NFUN_1285__(self))
	{
		PrecacheIndex.__NFUN_1277__(VoicePack, 'Activate');
		PrecacheIndex.__NFUN_1277__(VoicePack, 'Deactivate');
		PrecacheIndex.__NFUN_1277__(VoicePack, 'Fire');
		PrecacheIndex.__NFUN_1277__(class'VoicePack_Duke', 'pipebomb_detonator_melee');
	}
	return;
}

state Firing
{
	k2call simulated function WeaponCallback_DefinitelyDoneFiring()
	{
		return;
	}
	stop;
}

defaultproperties
{
	ActivePipeBombsColor=(B=121,G=2,R=1,A=255)
	NoActivePipeBombsColor=(B=121,G=2,R=1,A=34)
	bAutoSwitchOnPickup=false
	bDrawLastWeaponHUD=true
	WeaponConfig='DetonatorWeaponConfig'
	bActivatableByCategoryIteration=false
	bActivatableByGlobalIteration=false
	dnInventoryCategory=3
	dnCategoryPriority=1
	ChargeDisplayType=0
	CommandAlias="UseWeapon dnGame.Detonator"
	InventoryReferenceClass='Detonator'
	AutoRegisterIKClasses=/* Array type was not detected. */
}