/*******************************************************************************
 * dnMothershipGun generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnMothershipGun extends dnDecoration_Characters
	collapsecategories;

var Actor TargetActor;
var bool bFollowTarget;
var name PivotBoneName;
var name MuzzleBoneName;
var float MaxRotationSpeed;
var BeamSystem LaserBeam;
var SoftParticleSystem BeamCharge;
var SoftParticleSystem BeamShoot;
var SoftParticleSystem BeamImpact;
var dnFriendFX_Spawners BeamMuzzleFlash;
var float BeamChargeTime;
var float BeamOnTime;
var array<dnMothershipGunArmor> ArmorPieces;
var SoftParticleSystem ArmorExplosion;
var name TakeDamageEvent;
var bool bOnTarget;
var float OnTargetMinDot;
var name OnTargetEvent;
var bool bResetRotation;
var name ResetCompleteEvent;
var Rotator BaseRotation;
var float MaxResetRotationSpeed;
var name OpenAnim;
var name CloseAnim;

function PostVerifySelf()
{
	local dnMothershipGunArmor Armor;

	super(dnDecoration).PostVerifySelf();
	__NFUN_718__('FireOn', __NFUN_343__(__NFUN_302__(string(Tag), "FireOn")));
	__NFUN_718__('FireOff', __NFUN_343__(__NFUN_302__(string(Tag), "FireOff")));
	__NFUN_718__('FollowTargetOn', __NFUN_343__(__NFUN_302__(string(Tag), "FollowTargetOn")));
	__NFUN_718__('FollowTargetOff', __NFUN_343__(__NFUN_302__(string(Tag), "FollowTargetOff")));
	__NFUN_718__('LoseArmorPiece', __NFUN_343__(__NFUN_302__(string(Tag), "LoseArmorPiece")));
	__NFUN_718__('OpenGun', __NFUN_343__(__NFUN_302__(string(Tag), "OpenGun")));
	__NFUN_718__('CloseGun', __NFUN_343__(__NFUN_302__(string(Tag), "CloseGun")));
	__NFUN_718__('ResetRotation', __NFUN_343__(__NFUN_302__(string(Tag), "ResetRotation")));
	TargetActor = FindActor(class'Actor', __NFUN_343__(__NFUN_302__(string(Tag), "Target")));
	LaserBeam = __NFUN_615__(class'dnMothershipBeam');
	LaserBeam.Enabled = false;
	LaserBeam.TickStyle = 0;
	LaserBeam.MountType = 2;
	LaserBeam.MountMeshItem = 'mount_gun';
	LaserBeam.__NFUN_635__(self);
	LaserBeam.AddSegmentActor(LaserBeam, TargetActor,, 'mount_gun');
	BeamCharge = SoftParticleSystem(FindMountedActor('BeamCharge', class'SoftParticleSystem'));
	BeamShoot = SoftParticleSystem(FindMountedActor('BeamShoot', class'SoftParticleSystem'));
	BeamImpact = __NFUN_615__(class'MotherShip_GunBeam_Impact_Spawner');
	BeamMuzzleFlash = dnFriendFX_Spawners(FindMountedActor('BeamMuzzleFlash', class'dnFriendFX_Spawners'));
	// End:0x238
	foreach __NFUN_753__(class'dnMothershipGunArmor', Armor)
	{
		ArmorPieces[string(ArmorPieces)] = Armor;		
	}	
	ArmorExplosion = __NFUN_615__(class'Map02_MotherShip_Gun_Explode_Spawner');
	TakeDamageEvent = __NFUN_343__(__NFUN_302__(string(Tag), "TakeDamage"));
	OnTargetEvent = __NFUN_343__(__NFUN_302__(string(Tag), "OnTarget"));
	ResetCompleteEvent = __NFUN_343__(__NFUN_302__(string(Tag), "ResetComplete"));
	BaseRotation = MeshInstance.__NFUN_534__(PivotBoneName, true);
	return;
}

simulated event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	super(dnDecoration).TakeDamage(Instigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
	GlobalTrigger(TakeDamageEvent, Instigator, self);
	return;
}

function TriggerFunc_OpenGun()
{
	DecoPlayAnim(OpenAnim);
	return;
}

function TriggerFunc_CloseGun()
{
	DecoPlayAnim(CloseAnim);
	return;
}

function TriggerFunc_FireOn()
{
	BeamCharge.Trigger(self, none);
	__NFUN_607__(BeamChargeTime, false, 'TurnOnBeam');
	return;
}

function TurnOnBeam()
{
	BeamCharge.__NFUN_1054__();
	BeamMuzzleFlash.ExecuteEffect(true);
	BeamShoot.Trigger(self, none);
	BeamImpact.Trigger(self, none);
	LaserBeam.Enabled = true;
	LaserBeam.TickStyle = LaserBeam.default.TickStyle;
	LaserBeam.__NFUN_745__();
	__NFUN_607__(BeamOnTime, false, 'TurnOffBeam');
	return;
}

function TurnOffBeam()
{
	__NFUN_608__('TurnOffBeam');
	LaserBeam.Enabled = false;
	LaserBeam.TickStyle = 0;
	BeamCharge.__NFUN_1054__();
	BeamShoot.__NFUN_1054__();
	BeamImpact.__NFUN_1054__();
	return;
}

function TriggerFunc_FireOff()
{
	TurnOffBeam();
	return;
}

function TriggerFunc_FollowTargetOn()
{
	local DukePlayer Player;

	// End:0x29
	if(__NFUN_339__(TargetActor, none))
	{
		// End:0x28
		foreach __NFUN_747__(class'DukePlayer', Player)
		{
			TargetActor = Player;			
		}		
	}
	bFollowTarget = true;
	return;
}

function TriggerFunc_FollowTargetOff()
{
	bFollowTarget = false;
	return;
}

function TriggerFunc_ResetRotation()
{
	TriggerFunc_FollowTargetOff();
	bResetRotation = true;
	return;
}

event Tick(float DeltaTime)
{
	local bool bWasOnTarget;
	local Rotator TargetRotation, CurrentRotation, ThisFrameRotation;

	super(Actor).Tick(DeltaTime);
	__NFUN_354__(__NFUN_145__(__NFUN_148__(bResetRotation, bFollowTarget)));
	// End:0x18B
	if(bResetRotation)
	{
		TargetRotation = BaseRotation;
		CurrentRotation = MeshInstance.__NFUN_534__(PivotBoneName, true);
		ThisFrameRotation.Yaw = __NFUN_191__(__NFUN_166__(TargetRotation.Yaw, CurrentRotation.Yaw), int(__NFUN_195__(__NFUN_194__(MaxResetRotationSpeed), DeltaTime)), int(__NFUN_195__(MaxResetRotationSpeed, DeltaTime)));
		ThisFrameRotation.Pitch = __NFUN_191__(__NFUN_166__(TargetRotation.Pitch, CurrentRotation.Pitch), int(__NFUN_195__(__NFUN_194__(MaxResetRotationSpeed), DeltaTime)), int(__NFUN_195__(MaxResetRotationSpeed, DeltaTime)));
		ThisFrameRotation.Roll = __NFUN_191__(__NFUN_166__(TargetRotation.Roll, CurrentRotation.Roll), int(__NFUN_195__(__NFUN_194__(MaxResetRotationSpeed), DeltaTime)), int(__NFUN_195__(MaxResetRotationSpeed, DeltaTime)));
		__NFUN_180__(CurrentRotation.Yaw, ThisFrameRotation.Yaw);
		__NFUN_180__(CurrentRotation.Pitch, ThisFrameRotation.Pitch);
		__NFUN_180__(CurrentRotation.Roll, ThisFrameRotation.Roll);
		MeshInstance.__NFUN_538__(PivotBoneName, CurrentRotation, true, false);
		// End:0x18B
		if(__NFUN_271__(CurrentRotation, TargetRotation))
		{
			bResetRotation = false;
			GlobalTrigger(ResetCompleteEvent, none, self);
		}
	}
	// End:0x331
	if(bFollowTarget)
	{
		TargetRotation = Rotator(__NFUN_239__(TargetActor.Location, Location));
		CurrentRotation = MeshInstance.__NFUN_534__(PivotBoneName, true);
		ThisFrameRotation.Yaw = __NFUN_191__(__NFUN_166__(TargetRotation.Yaw, CurrentRotation.Yaw), int(__NFUN_195__(__NFUN_194__(MaxRotationSpeed), DeltaTime)), int(__NFUN_195__(MaxRotationSpeed, DeltaTime)));
		ThisFrameRotation.Pitch = __NFUN_191__(__NFUN_166__(TargetRotation.Pitch, CurrentRotation.Pitch), int(__NFUN_195__(__NFUN_194__(MaxRotationSpeed), DeltaTime)), int(__NFUN_195__(MaxRotationSpeed, DeltaTime)));
		ThisFrameRotation.Roll = __NFUN_191__(__NFUN_166__(TargetRotation.Roll, CurrentRotation.Roll), int(__NFUN_195__(__NFUN_194__(MaxRotationSpeed), DeltaTime)), int(__NFUN_195__(MaxRotationSpeed, DeltaTime)));
		__NFUN_180__(CurrentRotation.Yaw, ThisFrameRotation.Yaw);
		__NFUN_180__(CurrentRotation.Pitch, ThisFrameRotation.Pitch);
		__NFUN_180__(CurrentRotation.Roll, ThisFrameRotation.Roll);
		bWasOnTarget = bOnTarget;
		bOnTarget = __NFUN_203__(__NFUN_244__(Vector(CurrentRotation), Vector(TargetRotation)), OnTargetMinDot);
		// End:0x315
		if(__NFUN_148__(bOnTarget, __NFUN_145__(bWasOnTarget)))
		{
			GlobalTrigger(OnTargetEvent, none, self);
		}
		MeshInstance.__NFUN_538__(PivotBoneName, CurrentRotation, true, false);		
	}
	else
	{
		bOnTarget = false;
	}
	// End:0x381
	if(LaserBeam.Enabled)
	{
		BeamImpact.__NFUN_645__(LaserBeam.Segments[__NFUN_166__(string(LaserBeam.Segments), 1)].Location2);
	}
	return;
}

function TriggerFunc_LoseArmorPiece()
{
	local int i;
	local dnMothershipGunArmor ArmorPiece;
	local Vector Closest;
	local Rotator Direction;

	// End:0x0E
	if(__NFUN_173__(string(ArmorPieces), 0))
	{
		return;
	}
	i = __NFUN_187__(string(ArmorPieces));
	ArmorPiece = ArmorPieces[i];
	ArmorPieces.Remove(i, 1);
	// End:0x99
	if(__NFUN_340__(ArmorExplosion, none))
	{
		ArmorExplosion.SystemSizeScale = __NFUN_195__(ArmorExplosion.default.SystemSizeScale, DrawScale);
		ArmorExplosion.__NFUN_645__(ArmorPiece.Location);
		ArmorExplosion.Trigger(self, none);
	}
	__NFUN_264__(MeshInstance.__NFUN_533__(PivotBoneName, true), MeshInstance.__NFUN_533__(MuzzleBoneName, true), ArmorPiece.Location, Closest);
	Direction = Rotator(__NFUN_253__(__NFUN_239__(ArmorPiece.Location, Closest)));
	ArmorPiece.__NFUN_631__();
	ArmorPiece.TickStyle = 2;
	ArmorPiece.__NFUN_621__(,,, true);
	ArmorPiece.LaunchedFromGun();
	ArmorPiece.__NFUN_642__(18);
	ArmorPiece.__NFUN_817__();
	ArmorPiece.__NFUN_790__(__NFUN_241__(__NFUN_256__(__NFUN_232__(5000, 0, 0), __NFUN_232__(0, 800, 800)), Direction));
	ArmorPiece.__NFUN_791__(__NFUN_256__(__NFUN_232__(0, 0, 0), __NFUN_232__(__NFUN_195__(0.25, 3.141593), __NFUN_195__(0.25, 3.141593), __NFUN_195__(0.25, 3.141593))));
	FindAndPlaySound('MotherShip_Gun_ArmorDestroy');
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(class'dnMothershipBeam');
	PrecacheIndex.__NFUN_1266__(class'MotherShip_GunBeam_Impact_Spawner');
	PrecacheIndex.__NFUN_1266__(class'Map02_MotherShip_Gun_Explode_Spawner');
	PrecacheIndex.__NFUN_1284__(Mesh, OpenAnim);
	PrecacheIndex.__NFUN_1284__(Mesh, CloseAnim);
	PrecacheIndex.__NFUN_1277__(VoicePack, 'MotherShip_Gun_ArmorDestroy');
	return;
}

defaultproperties
{
	PivotBoneName=gun_pivot
	MuzzleBoneName=mount_gun
	MaxRotationSpeed=2048
	BeamChargeTime=3
	BeamOnTime=16
	OnTargetMinDot=0.9
	MaxResetRotationSpeed=6000
	OpenAnim=Open
	CloseAnim=Close
	HealthPrefab=0
	bEnemy=true
	bIgnoreAimAssist=true
	MountOnSpawn=/* Array type was not detected. */
}