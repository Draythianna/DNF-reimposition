/*******************************************************************************
 * DynamicAmbientSound generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class DynamicAmbientSound extends Keypoint
	collapsecategories
	hidecategories(Material,Lighting,Karma,Interactivity,Collision);

var() noexport bool bDontRepeat "Never play two of the same sound in a row";
var() noexport bool bInitiallyOn "Initial state. Trigger it to turn the actor on and off.";
var() noexport float PlayProbability "The chance of the sound effect playing";
var() noexport float minReCheckTime "Try to restart the sound after (min amount)";
var() noexport float maxReCheckTime "Try to restart the sound after (max amount)";
var() noexport array<Sound> Sounds "What to play (must be at least one sound)";
var() noexport array<byte> Volumes "Volume for the sound. Value between 0 and 255. If left at 0, it will default to 128.";
var bool bCurrentlyPlaying;
var int LastSoundIndex;

event PostBeginPlay()
{
	super(Actor).PostBeginPlay();
	LastSoundIndex = -1;
	// End:0x22
	if(bInitiallyOn)
	{
		Trigger(none, none);
	}
	return;
}

function bool VerifySelf()
{
	local int i;

	// End:0x2E
	if(__NFUN_170__(string(Volumes), string(Sounds)))
	{
		Volumes.Remove(string(Sounds), __NFUN_166__(string(Volumes), string(Sounds)));		
	}
	else
	{
		// End:0x59
		if(__NFUN_169__(string(Volumes), string(Sounds)))
		{
			Volumes.Insert(string(Volumes), __NFUN_166__(string(Sounds), string(Volumes)));
		}
	}
	i = __NFUN_166__(string(Sounds), 1);
	J0x68:

	// End:0xCA [Loop If]
	if(__NFUN_172__(i, 0))
	{
		// End:0xA0
		if(__NFUN_339__(Sounds[i], none))
		{
			Sounds.Remove(i, 1);
			Volumes.Remove(i, 1);
			// [Explicit Continue]
			goto J0xC0;
		}
		// End:0xC0
		if(__NFUN_173__(int(Volumes[i]), 0))
		{
			Volumes[i] = 128;
		}
		J0xC0:

		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x68;
	}
	// End:0x106
	if(__NFUN_171__(string(Sounds), 0))
	{
		InvalidAlert(__NFUN_302__(string(self), " doesn't have any sounds to play!"));
		return false;
	}
	return super(Actor).VerifySelf();
	return;
}

event Trigger(Actor Other, Pawn EventInstigator)
{
	super(Actor).Trigger(Other, EventInstigator);
	// End:0x22
	if(bCurrentlyPlaying)
	{
		StopPlayingSounds();		
	}
	else
	{
		StartPlayingSounds();
	}
	return;
}

final function StartPlayingSounds()
{
	bCurrentlyPlaying = true;
	TickStyle = 2;
	PlayMySound();
	return;
}

final function StopPlayingSounds()
{
	bCurrentlyPlaying = false;
	TickStyle = 0;
	__NFUN_606__('PlayMySound');
	return;
}

final function PlayMySound()
{
	local int i;

	// End:0x0E
	if(__NFUN_171__(string(Sounds), 0))
	{
		return;
	}
	// End:0x94
	if(__NFUN_202__(__NFUN_222__(), PlayProbability))
	{
		i = __NFUN_187__(string(Sounds));
		// End:0x5F
		if(__NFUN_148__(bDontRepeat, __NFUN_170__(string(Sounds), 1)))
		{
			J0x3F:

			// End:0x5F [Loop If]
			if(__NFUN_173__(i, LastSoundIndex))
			{
				i = __NFUN_187__(string(Sounds));
				// [Loop Continue]
				goto J0x3F;
			}
		}
		LastSoundIndex = i;
		__NFUN_697__(3, Sounds[i],,,,,, __NFUN_196__(float(__NFUN_165__(int(Volumes[i]), 1)), float(128)));
	}
	__NFUN_605__(__NFUN_198__(__NFUN_195__(__NFUN_199__(maxReCheckTime, minReCheckTime), __NFUN_222__()), minReCheckTime), false, 'PlayMySound');
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	local int i;

	i = __NFUN_166__(string(Sounds), 1);
	J0x0F:

	// End:0x3C [Loop If]
	if(__NFUN_172__(i, 0))
	{
		PrecacheIndex.__NFUN_1274__(Sounds[i]);
		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x0F;
	}
	return;
}

defaultproperties
{
	PlayProbability=0.6
	minReCheckTime=5
	maxReCheckTime=10
	bStatic=false
}