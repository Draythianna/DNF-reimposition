/*******************************************************************************
 * dnRocket_RPG_Homing generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnRocket_RPG_Homing extends dnRocket_RPG
	collapsecategories;

var bool bHomingMode;
var Actor Target;
var name TargetBone;
var Vector TargetLastLocation;
var float MaxRotationSpeed;
var() float SeekTimeLimit;

event Tick(float DeltaTime)
{
	super(dnProjectile).Tick(DeltaTime);
	// End:0x1F
	if(bHomingMode)
	{
		FollowTarget(DeltaTime);
	}
	return;
}

simulated function Destroyed()
{
	// End:0x32
	if(__NFUN_145__(IsMP()))
	{
		// End:0x32
		if(__NFUN_148__(__NFUN_145__(bExploded), __NFUN_202__(LifeSpan, 0.1)))
		{
			ExecuteExplode(Location);
		}
	}
	super(dnProjectile).Destroyed();
	return;
}

function FollowTarget(float DeltaTime)
{
	local Rotator TargetRotation;

	// End:0x18
	if(__NFUN_201__(SeekTimeLimit, float(0)))
	{
		__NFUN_210__(SeekTimeLimit, DeltaTime);
	}
	// End:0x26
	if(__NFUN_202__(SeekTimeLimit, float(0)))
	{
		return;
	}
	// End:0x78
	if(__NFUN_340__(Target, none))
	{
		TargetLastLocation = Target.Location;
		// End:0x78
		if(__NFUN_342__(TargetBone, 'None'))
		{
			TargetLastLocation = Target.__NFUN_568__().__NFUN_533__(TargetBone, true);
		}
	}
	TargetRotation = Rotator(__NFUN_239__(TargetLastLocation, Location));
	__NFUN_652__(__NFUN_287__(__NFUN_224__(1, __NFUN_195__(MaxRotationSpeed, DeltaTime)), Rotation, TargetRotation));
	Acceleration = __NFUN_235__(AccelerationScaler, Vector(Rotation));
	Velocity = __NFUN_235__(__NFUN_251__(Velocity), Vector(Rotation));
	return;
}

function StartTelekinesis(Pawn TKOwner)
{
	bHomingMode = false;
	super(InteractiveActor).StartTelekinesis(TKOwner);
	return;
}

defaultproperties
{
	MaxRotationSpeed=8
	SeekTimeLimit=3.5
	Speed=780
	MaxSpeed=1040
	bNetTemporary=false
}