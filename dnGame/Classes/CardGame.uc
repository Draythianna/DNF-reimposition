/*******************************************************************************
 * CardGame generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class CardGame extends Dispatchers
	collapsecategories;

const Joker = 0;
const Ace = 1;
const Jack = 11;
const Queen = 12;
const King = 13;
const Spades = 0;
const Clubs = 1;
const Hearts = 2;
const Diamonds = 3;

struct TableDecoration
{
	var() int X;
	var() int Y;
	var() int Left;
	var() int Top;
	var() int Right;
	var() int Bottom;
};

struct Card
{
	var int suit;
	var int Value;
	var byte Front;
};

var() MaterialEx TableRenderMaterial;
var() TextureCanvas TableCanvas;
var() byte BackgroundColor;
var() Texture CardBack;
var() Texture CardFront;
var() Texture JokerFront;
var() Texture RedLetters[14];
var() Texture BlackLetters[14];
var() Texture AuxBitmap[14];
var() Texture Suits[4];
var() Texture SmallSuits[4];
var() int xValueOffset;
var() int yValueOffset;
var() int xSmallSuitOffset;
var() int ySmallSuitOffset;
var() int xSuitOffset;
var() int ySuitOffset;
var() int xAuxOffset;
var() int yAuxOffset;
var() TableDecoration TableDecorations[16];
var() localized Texture TableDecorationTextures[16];

function int DeckIndex2Value(int Index)
{
	// End:0x0D
	if(__NFUN_173__(Index, 0))
	{
		return 0;
	}
	return __NFUN_165__(__NFUN_164__(__NFUN_166__(Index, 1), 13), 1);
	return;
}

function int Value2DeckIndex(int suit, int Value)
{
	return __NFUN_165__(__NFUN_162__(suit, 13), Value);
	return;
}

function int Card2DeckIndex(Card C)
{
	local int V;

	// End:0x12
	if(__NFUN_173__(C.Value, 0))
	{
		return 0;
	}
	return Value2DeckIndex(C.suit, C.Value);
	return;
}

function Card RandomCard(bool UseJokers)
{
	local Card C;

	J0x00:
	C.Front = byte(false);
	C.suit = __NFUN_187__(4);
	// End:0x37
	if(UseJokers)
	{
		C.Value = __NFUN_187__(14);		
	}
	else
	{
		C.Value = __NFUN_165__(__NFUN_187__(13), 1);
	}
	// End:0x6C
	if(__NFUN_148__(__NFUN_145__(bool(C.Value)), bool(C.suit)))
	{
		// [Loop Continue]
		goto J0x00;
	}
	return C;
	return;
}

function DrawTable()
{
	local int i, XUL, YVL;

	TableCanvas.Palette = CardBack.Palette;
	TableCanvas.__NFUN_1204__(BackgroundColor);
	i = 0;
	J0x38:

	// End:0x1A3 [Loop If]
	if(__NFUN_169__(i, 16))
	{
		// End:0x90
		if(__NFUN_148__(__NFUN_173__(TableDecorations[i].Right, 0), __NFUN_173__(TableDecorations[i].Left, 0)))
		{
			XUL = TableDecorationTextures[i].USize;			
		}
		else
		{
			XUL = __NFUN_166__(TableDecorations[i].Right, TableDecorations[i].Left);
		}
		// End:0x104
		if(__NFUN_148__(__NFUN_173__(TableDecorations[i].Bottom, 0), __NFUN_173__(TableDecorations[i].Top, 0)))
		{
			YVL = TableDecorationTextures[i].VSize;			
		}
		else
		{
			YVL = __NFUN_166__(TableDecorations[i].Bottom, TableDecorations[i].Top);
		}
		TableCanvas.__NFUN_1206__(TableDecorationTextures[i], TableDecorations[i].X, TableDecorations[i].Y, XUL, YVL, TableDecorations[i].Left, TableDecorations[i].Top, XUL, YVL, true);
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x38;
	}
	return;
}

function bool isBlack(int suit)
{
	return __NFUN_150__(__NFUN_173__(suit, 0), __NFUN_173__(suit, 1));
	return;
}

function DrawCard(int X, int Y, bool Front, int suit, int Value)
{
	local Texture temp;

	// End:0x0E
	if(__NFUN_339__(TableCanvas, none))
	{
		return;
	}
	// End:0x47
	if(__NFUN_145__(Front))
	{
		// End:0x45
		if(__NFUN_340__(CardBack, none))
		{
			TableCanvas.DrawBitmap(CardBack, X, Y, true);
		}
		return;
	}
	// End:0x80
	if(__NFUN_173__(Value, 0))
	{
		// End:0x7E
		if(__NFUN_340__(JokerFront, none))
		{
			TableCanvas.DrawBitmap(JokerFront, X, Y, true);
		}
		return;
	}
	// End:0xAC
	if(__NFUN_340__(CardFront, none))
	{
		TableCanvas.DrawBitmap(CardFront, X, Y, true);
	}
	// End:0xCE
	if(isBlack(suit))
	{
		temp = BlackLetters[Value];		
	}
	else
	{
		temp = RedLetters[Value];
	}
	// End:0x118
	if(__NFUN_340__(temp, none))
	{
		TableCanvas.DrawBitmap(temp, __NFUN_165__(X, xValueOffset), __NFUN_165__(Y, yValueOffset));
	}
	// End:0x15D
	if(__NFUN_340__(SmallSuits[suit], none))
	{
		TableCanvas.DrawBitmap(SmallSuits[suit], __NFUN_165__(X, xSmallSuitOffset), __NFUN_165__(Y, ySmallSuitOffset));
	}
	// End:0x1A2
	if(__NFUN_340__(AuxBitmap[Value], none))
	{
		TableCanvas.DrawBitmap(AuxBitmap[Value], __NFUN_165__(X, xAuxOffset), __NFUN_165__(Y, yAuxOffset));
	}
	// End:0x1E7
	if(__NFUN_340__(Suits[suit], none))
	{
		TableCanvas.DrawBitmap(Suits[suit], __NFUN_165__(X, xSuitOffset), __NFUN_165__(Y, ySuitOffset));
	}
	return;
}

function DrawCardStructure(int X, int Y, Card C)
{
	DrawCard(X, Y, bool(C.Front), C.suit, C.Value);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	local int i;

	super(Actor).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1269__(TableRenderMaterial);
	PrecacheIndex.__NFUN_1270__(CardBack);
	PrecacheIndex.__NFUN_1270__(CardFront);
	PrecacheIndex.__NFUN_1270__(JokerFront);
	i = 0;
	J0x5A:

	// End:0xB8 [Loop If]
	if(__NFUN_169__(i, 14))
	{
		PrecacheIndex.__NFUN_1270__(RedLetters[i]);
		PrecacheIndex.__NFUN_1270__(BlackLetters[i]);
		PrecacheIndex.__NFUN_1270__(AuxBitmap[i]);
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x5A;
	}
	i = 0;
	J0xBF:

	// End:0x105 [Loop If]
	if(__NFUN_169__(i, 4))
	{
		PrecacheIndex.__NFUN_1270__(Suits[i]);
		PrecacheIndex.__NFUN_1270__(SmallSuits[i]);
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0xBF;
	}
	i = 0;
	J0x10C:

	// End:0x13A [Loop If]
	if(__NFUN_169__(i, 16))
	{
		PrecacheIndex.__NFUN_1270__(TableDecorationTextures[i]);
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x10C;
	}
	return;
}

defaultproperties
{
	BackgroundColor=97
	yValueOffset=3
	ySmallSuitOffset=18
	xSuitOffset=15
	ySuitOffset=30
	xAuxOffset=15
	yAuxOffset=3
}