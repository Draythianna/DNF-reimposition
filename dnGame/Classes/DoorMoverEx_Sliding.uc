/*******************************************************************************
 * DoorMoverEx_Sliding generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class DoorMoverEx_Sliding extends DoorMoverEx_Sliding_NativeBase
	collapsecategories
	hidecategories(Brush,Networking,LightColor,HeatVision,Hackflags,Filter);

var() noexport float SlideRate "Units per second.";
var() noexport float SlideTime "Optional time parameter.  Overrides SlideRate when > 0.0.";
var Vector SlideOffset;

replication
{
	// Pos:0x000
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		SlideOffset, SlideRate;
}

simulated function Used(Actor Other, Pawn EventInstigator)
{
	// End:0x42
	if(__NFUN_148__(__NFUN_148__(EventInstigator.bIsPlayerPawn, __NFUN_145__(PassUseToOwner())), __NFUN_145__(bLocked)))
	{
		EventInstigator.HandQuickAction('HandQuickAction_Door_Push');
	}
	super(DoorMoverEx).Used(Other, EventInstigator);
	return;
}

simulated function InitDoor()
{
	SlideOffset = GetSlideDir();
	// End:0x29
	if(__NFUN_174__(int(SlideDir), int(2)))
	{
		__NFUN_246__(SlideOffset, SlideDistance);		
	}
	else
	{
		SlideDistance = __NFUN_251__(SlideOffset);
	}
	// End:0x57
	if(__NFUN_201__(SlideTime, 0))
	{
		SlideRate = __NFUN_196__(SlideDistance, SlideTime);
	}
	super(DoorMoverEx).InitDoor();
	return;
}

simulated function OpenDoor(optional Actor Other, optional bool bKicked)
{
	DetonateAttachedMines();
	SlideTo(SlideOffset, SlideRate, 'DoorOpenCallback');
	super(DoorMoverEx).OpenDoor(Other, bKicked);
	return;
}

simulated function CloseDoor()
{
	DetonateAttachedMines();
	SlideTo(__NFUN_232__(0, 0, 0), SlideRate, 'DoorClosedCallback');
	super(DoorMoverEx).CloseDoor();
	return;
}

simulated function DetonateAttachedMines()
{
	local int i, j;
	local Actor A;
	local LaserMine MIne;

	i = __NFUN_166__(string(MountedActorList), 1);
	J0x0F:

	// End:0xE3 [Loop If]
	if(__NFUN_172__(i, 0))
	{
		MIne = LaserMine(MountedActorList[i].MountedActor);
		// End:0x54
		if(__NFUN_340__(MIne, none))
		{
			MIne.Detonate();
			// [Explicit Continue]
			goto J0xD9;
		}
		A = MountedActorList[i].MountedActor;
		j = __NFUN_166__(string(A.MountedActorList), 1);
		J0x83:

		// End:0xD9 [Loop If]
		if(__NFUN_172__(j, 0))
		{
			MIne = LaserMine(A.MountedActorList[j].MountedActor);
			// End:0xCF
			if(__NFUN_340__(MIne, none))
			{
				MIne.Detonate();
			}
			__NFUN_185__(j);
			// [Loop Continue]
			goto J0x83;
		}
		J0xD9:

		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x0F;
	}
	return;
}

final simulated function SlideTo(Vector NewOffset, float SlideSpeed, optional name SlideFinishedCallback)
{
	local SDesiredLocation DL;

	DL.Target = NewOffset;
	DL.Style = 1;
	DL.TimeTotal = CalcSlideTime(DL.Target, SlideSpeed);
	DL.StyleStopped = 1;
	DL.FunctionComplete = SlideFinishedCallback;
	__NFUN_650__(DL);
	return;
}

final function Vector GetSlideDir()
{
	local Vector OutSlideDir;

	// End:0x1C
	if(__NFUN_173__(int(SlideDir), int(2)))
	{
		OutSlideDir = SlideCustomDir;		
	}
	else
	{
		// End:0x3D
		if(__NFUN_173__(int(SlideDir), int(0)))
		{
			OutSlideDir.X = 1;			
		}
		else
		{
			// End:0x5B
			if(__NFUN_173__(int(SlideDir), int(1)))
			{
				OutSlideDir.X = -1;
			}
		}
	}
	return OutSlideDir;
	return;
}

final simulated function float CalcSlideTime(Vector DestLoc, float SlideSpeed)
{
	local float Dist;

	// End:0x15
	if(__NFUN_200__(SlideSpeed, 0))
	{
		return 0;
	}
	return __NFUN_196__(__NFUN_251__(__NFUN_239__(DestLoc, MountOrigin)), SlideSpeed);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(InteractiveActor).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1281__('HandQuickAction_Door_Push');
	return;
}

defaultproperties
{
	SlideRate=25
	SlideDistance=100
	bUsesHinge=true
	ProximitySensorClass='dnDoorProximitySensorEx'
	StaticMesh='sm_geo_doors.Generic.Generic_Door'
	VoicePack='SoundConfig.Doors.DoorVoicePack_Wood_Sliding'
}