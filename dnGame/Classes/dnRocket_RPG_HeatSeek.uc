/*******************************************************************************
 * dnRocket_RPG_HeatSeek generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnRocket_RPG_HeatSeek extends dnRocket_RPG
	collapsecategories;

var bool bEngaged;
var() float EngageDelay;
var() float ReseekDelay;
var() float ReseekDelayVariance;
var() float SeekTimeLimit;
var Pawn Shooter;
var Actor Target;
var Vector TargetLastLocation;
var Vector OriginalTargetLocation;
var() float SeekDistance;
var() float MaxRotationSpeed;
var() Rotator RotVar;

replication
{
	// Pos:0x000
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		SetTarget;
}

simulated event PostVerifySelf()
{
	super(Projectile).PostVerifySelf();
	Shooter = Instigator;
	return;
}

simulated function InitializeMotion()
{
	super(dnRocket).InitializeMotion();
	OriginalTargetLocation = __NFUN_238__(Location, __NFUN_235__(1000, Vector(Rotation)));
	TargetLastLocation = OriginalTargetLocation;
	return;
}

noexport simulated delegate SetTarget(Actor t)
{
	Target = t;
	return;
}

function Engage()
{
	// End:0x24
	if(__NFUN_339__(Target, none))
	{
		// End:0x1E
		if(bEngaged)
		{
			SearchForTarget();			
		}
		else
		{
			FlyInRandomDir();
		}
	}
	bEngaged = true;
	return;
}

function FlyInRandomDir()
{
	// End:0x1D
	if(__NFUN_243__(TargetLastLocation, OriginalTargetLocation))
	{
		TargetLastLocation = OriginalTargetLocation;		
	}
	else
	{
		TargetLastLocation = __NFUN_238__(Location, __NFUN_235__(1000, Vector(__NFUN_284__(Rotation, RotVar))));
	}
	return;
}

function SearchForTarget()
{
	local float DistSquared, MaxDistSquared, TargetChance;
	local Pawn P;
	local int i;
	local Decoration D;

	MaxDistSquared = __NFUN_195__(SeekDistance, SeekDistance);
	TargetChance = 0.3;
	P = Level.PawnList;
	J0x32:

	// End:0x13E [Loop If]
	if(__NFUN_340__(P, none))
	{
		// End:0x92
		if(__NFUN_340__(Shooter, none))
		{
			// End:0x75
			if(__NFUN_148__(Shooter.bIsPlayerPawn, P.bIgnoreAimAssist))
			{
				// [Explicit Continue]
				goto J0x126;
			}
			// End:0x92
			if(__NFUN_145__(P.IsEnemyTo(Shooter)))
			{
				// [Explicit Continue]
				goto J0x126;
			}
		}
		DistSquared = __NFUN_252__(__NFUN_239__(P.Location, Location));
		// End:0x126
		if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_145__(P.bHidden), __NFUN_340__(P, Shooter)), __NFUN_200__(DistSquared, MaxDistSquared)), __NFUN_203__(P.CollisionHeight, float(8))))
		{
			// End:0x126
			if(__NFUN_150__(__NFUN_339__(Target, none), __NFUN_200__(__NFUN_222__(), TargetChance)))
			{
				SetTarget(P);
			}
		}
		J0x126:

		P = P.NextPawn;
		// [Loop Continue]
		goto J0x32;
	}
	// End:0x21D
	if(__NFUN_148__(__NFUN_340__(Shooter, none), Shooter.bIsPlayerPawn))
	{
		i = __NFUN_166__(string(Level.EnemyDecorations), 1);
		J0x178:

		// End:0x21D [Loop If]
		if(__NFUN_172__(i, 0))
		{
			D = Level.EnemyDecorations[i];
			// End:0x213
			if(__NFUN_148__(__NFUN_340__(D, none), __NFUN_145__(D.bIgnoreAimAssist)))
			{
				DistSquared = __NFUN_252__(__NFUN_239__(D.Location, Location));
				// End:0x213
				if(__NFUN_200__(DistSquared, MaxDistSquared))
				{
					// End:0x213
					if(__NFUN_150__(__NFUN_339__(Target, none), __NFUN_200__(__NFUN_222__(), TargetChance)))
					{
						SetTarget(D);
					}
				}
			}
			__NFUN_185__(i);
			// [Loop Continue]
			goto J0x178;
		}
	}
	// End:0x22F
	if(__NFUN_339__(Target, none))
	{
		FlyInRandomDir();
	}
	return;
}

function FollowTarget(Actor TargetActor, float DeltaTime)
{
	local Rotator TargetRotation;

	// End:0x18
	if(__NFUN_201__(SeekTimeLimit, float(0)))
	{
		__NFUN_210__(SeekTimeLimit, DeltaTime);
	}
	// End:0x26
	if(__NFUN_202__(SeekTimeLimit, float(0)))
	{
		return;
	}
	// End:0x47
	if(__NFUN_340__(TargetActor, none))
	{
		TargetLastLocation = TargetActor.Location;
	}
	TargetRotation = Rotator(__NFUN_239__(TargetLastLocation, Location));
	__NFUN_652__(__NFUN_287__(__NFUN_224__(1, __NFUN_195__(MaxRotationSpeed, DeltaTime)), Rotation, TargetRotation));
	Acceleration = __NFUN_235__(AccelerationScaler, Vector(Rotation));
	Velocity = __NFUN_235__(__NFUN_251__(Velocity), Vector(Rotation));
	return;
}

simulated event Tick(float DeltaTime)
{
	super(dnProjectile).Tick(DeltaTime);
	// End:0x23
	if(__NFUN_201__(EngageDelay, float(0)))
	{
		__NFUN_210__(EngageDelay, DeltaTime);
	}
	// End:0x53
	if(__NFUN_202__(EngageDelay, float(0)))
	{
		Engage();
		// End:0x53
		if(__NFUN_339__(Target, none))
		{
			EngageDelay = __NFUN_226__(ReseekDelay, ReseekDelayVariance);
		}
	}
	// End:0x6C
	if(bEngaged)
	{
		FollowTarget(Target, DeltaTime);
	}
	return;
}

function ForceTarget(Actor NewTarget)
{
	SetTarget(NewTarget);
	return;
}

function StartTelekinesis(Pawn TKOwner)
{
	__NFUN_362__('Tick');
	super(InteractiveActor).StartTelekinesis(TKOwner);
	return;
}

defaultproperties
{
	EngageDelay=0.3
	ReseekDelay=0.2
	ReseekDelayVariance=0.1
	SeekTimeLimit=3.5
	SeekDistance=300
	MaxRotationSpeed=4
	RotVar=(Pitch=691282469,Yaw=572915712,Roll=10548)
	Speed=400
	Damage=55
	DamageRadius=130
	DamageClass='EnforcerGunDamage'
	ShakeScalar=3.75
	ShakeInfo(0)=(bNoLerp=false,bToggleSign=false,Style=3,Function=0,FalloffActor=none,FalloffDistance=0,ShakeDuration=0.45,ShakeFrequency=0.05,ShakeMagnitude=800,ShakeFullMagnitude=0,ShakeFullMagnitudeTime=0,ShakeName=dnRocket_RPG_Shake)
	RumbleInfo(0)=(RumbleName=dnRocket_RPG_HeatSeek_Rumble,RumbleDuration=0.4,RumbleLeftMagnitude=0.6,RumbleRightMagnitude=0.2,FalloffActor=none,FalloffDistance=0)
	ExplosionClass='p_Weapons.EnforcerRocket_Explode.EnforcerRocket_Explode_Spawner'
	ExplosionLight='dnExplosionLight_RPG_HeatSeek'
	MountOnSpawn(0)=(bSkipVerifySelf=false,SpawnClass='Weapon_LightEx_Rocket_HeatSeek',SpawnChance=0,MountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.292418E-41,Y=2.965399E-17,Z=0),Z=-6),MountOriginVariance=(X=1.292418E-41,Y=2.94903E-17,Z=0),Z=0)
	MountOnSpawn(1)=(MountAngles=(Pitch=8741,Yaw=572915712,Roll=0),Roll=-16384)
	MountOnSpawn(2)=(MountAnglesVariance=(Pitch=8741,Yaw=572915712,Roll=0),Roll=0)
	MountOnSpawn(3)=(MountType=0,DismountPhysics=0)
	bNetTemporary=false
	DrawScale=0.5
}