/*******************************************************************************
 * dnPressureGauge generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnPressureGauge extends dnGauge
	abstract
	collapsecategories;

struct SGaugeState
{
	var() anim name AnimIdle;
	var() anim name AnimLeft;
	var() anim name AnimRight;
	var() noexport name OutEvent "Event to fire when entering this state.";
};

var(dnGauge) array<SGaugeState> GaugeStates;
var float GaugeTweenTime;

event PreBeginPlay()
{
	__NFUN_718__('GaugeLeft', GaugeLeftTag);
	__NFUN_718__('GaugeRight', GaugeRightTag);
	SetGaugeState(GaugeStartState);
	super.PreBeginPlay();
	return;
}

function SetGaugeState(int NewGaugeState)
{
	NewGaugeState = __NFUN_191__(NewGaugeState, 0, __NFUN_166__(string(GaugeStates), 1));
	// End:0x39
	if(bInverseGauge)
	{
		GaugeState = __NFUN_166__(__NFUN_166__(string(GaugeStates), 1), NewGaugeState);		
	}
	else
	{
		GaugeState = NewGaugeState;
	}
	SetGaugeAnimState(GaugeState);
	return;
}

function AdjustGaugeState(int GaugeStateAdjustment)
{
	SetGaugeState(__NFUN_165__(GaugeState, GaugeStateAdjustment));
	return;
}

function SetGaugeAnimState(int GaugeAnimState)
{
	DecoPlayAnim(GaugeStates[GaugeAnimState].AnimIdle, 1, GaugeTweenTime);
	GlobalTrigger(GaugeStates[GaugeAnimState].OutEvent);
	return;
}

function HandleGaugeLeft()
{
	DecoPlayAnim(GaugeStates[GaugeState].AnimLeft, 1, GaugeTweenTime);
	// End:0x48
	if(__NFUN_170__(GaugeState, 0))
	{
		__NFUN_185__(GaugeState);
		GlobalTrigger(GaugeStates[GaugeState].OutEvent);
	}
	return;
}

function HandleGaugeRight()
{
	DecoPlayAnim(GaugeStates[GaugeState].AnimRight, 1, GaugeTweenTime);
	// End:0x50
	if(__NFUN_169__(GaugeState, __NFUN_166__(string(GaugeStates), 1)))
	{
		__NFUN_184__(GaugeState);
		GlobalTrigger(GaugeStates[GaugeState].OutEvent);
	}
	return;
}

event AnimEndEx(SAnimEndInfo AnimEndInfo)
{
	super(dnDecoration).AnimEndEx(AnimEndInfo);
	DecoLoopAnim(GaugeStates[GaugeState].AnimIdle, 1, GaugeTweenTime);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	local int i;

	super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
	i = __NFUN_166__(string(GaugeStates), 1);
	J0x1A:

	// End:0x95 [Loop If]
	if(__NFUN_172__(i, 0))
	{
		PrecacheIndex.__NFUN_1284__(Mesh, GaugeStates[i].AnimIdle);
		PrecacheIndex.__NFUN_1284__(Mesh, GaugeStates[i].AnimLeft);
		PrecacheIndex.__NFUN_1284__(Mesh, GaugeStates[i].AnimRight);
		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x1A;
	}
	return;
}

defaultproperties
{
	GaugeTweenTime=0.1
	MountOnSpawn(0)=(bSkipVerifySelf=false,SpawnClass='DecoGlass_PressureGauge',SpawnChance=0,MountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=true,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.292418E-41,Y=2.95443E-17,Z=0),Z=0),MountOriginVariance=(X=1.292418E-41,Y=2.94903E-17,Z=0),Z=0)
}