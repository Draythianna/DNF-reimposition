/*******************************************************************************
 * dnRocket_IceBlast generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnRocket_IceBlast extends dnRocket
	collapsecategories;

var array<StaticMesh> IceShards;
var class<dnFriendFX_Spawners> BounceEffect;

simulated function bool ShouldAutoExplodeOnActor(Actor HitActor)
{
	// End:0x0E
	if(__NFUN_339__(HitActor, none))
	{
		return false;
	}
	// End:0x47
	if(__NFUN_148__(HitActor.bIsPawn, Pawn(HitActor).CanFreeze(DamageClass, 0)))
	{
		return true;
	}
	// End:0x5C
	if(HitActor.bIsCorpse)
	{
		return true;
	}
	return super(Projectile).ShouldAutoExplodeOnActor(HitActor);
	return;
}

simulated function ProjectileHitSomething(Vector HitNormal, Actor Wall)
{
	local Vector HitLocation, Dir, TraceStart, TraceEnd;

	HitLocation = __NFUN_238__(Location, __NFUN_235__(ExploWallOut, HitNormal));
	// End:0x3E
	if(ShouldAutoExplodeOnActor(Wall))
	{
		ExecuteExplode(HitLocation, HitNormal, Wall);
		return;
	}
	// End:0xAC
	if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_340__(Wall, none), Wall.bIsBreakableGlass), __NFUN_145__(BreakableGlass(Wall).bUnBreakable)), bBreakGlass))
	{
		BreakableGlass(Wall).ReplicateBreakGlassDir(Location, Velocity, 100);
		return;
	}
	// End:0x117
	if(bDoMaterialEffects)
	{
		Dir = __NFUN_253__(Velocity);
		TraceStart = __NFUN_239__(Location, __NFUN_234__(Dir, 5));
		TraceEnd = __NFUN_238__(Location, __NFUN_234__(Dir, __NFUN_198__(__NFUN_225__(CollisionRadius, CollisionHeight), 10)));
		PerformTraceMaterialEffects(TraceStart, TraceEnd, DamageClass);
	}
	// End:0x19E
	if(__NFUN_150__(__NFUN_169__(NumBounces, 0), __NFUN_148__(__NFUN_170__(NumBounces, 0), __NFUN_171__(__NFUN_182__(NumWallHits), NumBounces))))
	{
		// End:0x191
		if(__NFUN_340__(KarmaActor(Wall), none))
		{
			KarmaActor(Wall).__NFUN_820__(__NFUN_234__(__NFUN_234__(__NFUN_233__(HitNormal), __NFUN_251__(Velocity)), 0.65), HitLocation);
			DoDamage(HitLocation, Wall);
		}
		BounceOffWall(HitNormal);
		return;
	}
	ExecuteExplode(HitLocation, HitNormal, Wall);
	return;
}

final simulated function SpawnIceShards(int Count, Rotator BaseRot)
{
	local int i;
	local StaticMesh ShardSM;
	local Rotator OffsetRot, SpawnRot;
	local Vector SpawnLoc, SpawnLinVel, SpawnAngVel;

	i = 0;
	J0x07:

	// End:0x116 [Loop If]
	if(__NFUN_169__(i, Count))
	{
		ShardSM = IceShards[__NFUN_187__(string(IceShards))];
		// End:0x39
		if(__NFUN_339__(ShardSM, none))
		{
			// [Explicit Continue]
			goto J0x10C;
		}
		OffsetRot = __NFUN_284__(BaseRot, __NFUN_265__(12000, 12000, 0));
		SpawnLoc = __NFUN_238__(Location, __NFUN_263__(__NFUN_232__(1, 0, 0), OffsetRot));
		SpawnRot = __NFUN_284__(__NFUN_265__(0, 0, 0), __NFUN_265__(65536, 65536, 65536));
		SpawnLinVel = __NFUN_235__(__NFUN_226__(250, 100), __NFUN_253__(__NFUN_239__(SpawnLoc, Location)));
		SpawnAngVel = __NFUN_256__(__NFUN_232__(0, 0, 0), __NFUN_232__(3.141593, 3.141593, 3.141593));
		__NFUN_619__(ShardSM, class'dnPhysicsMaterial_Ice', SpawnLoc, SpawnRot, 1, SpawnLinVel, SpawnAngVel, false);
		J0x10C:

		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x07;
	}
	return;
}

simulated function BounceOffWall(Vector HitNormal)
{
	local float DrawScaleChange;
	local Vector DrawScale3DChange;
	local dnFriendFX_Spawners EffectActor;

	super(Projectile).BounceOffWall(HitNormal);
	SpawnIceShards(1, Rotator(HitNormal));
	// End:0xE1
	if(__NFUN_148__(__NFUN_145__(PhysicsVolume.bWaterVolume), __NFUN_340__(BounceEffect, none)))
	{
		EffectActor = FindFriendSpawner(ExplosionClass);
		// End:0xE1
		if(__NFUN_340__(EffectActor, none))
		{
			__NFUN_594__(DrawScaleChange, DrawScale3DChange);
			EffectActor.SystemSizeScale = __NFUN_195__(EffectActor.default.SystemSizeScale, DrawScaleChange);
			EffectActor.__NFUN_645__(__NFUN_238__(Location, __NFUN_234__(HitNormal, ExplosionOffset)));
			EffectActor.__NFUN_652__(Rotator(HitNormal));
			EffectActor.RemoteRole = ROLE_None;
			EffectActor.ExecuteEffect(true);
		}
	}
	return;
}

simulated function ExplodeEffects(optional Vector HitNormal, optional Actor HitActor)
{
	super(Projectile).ExplodeEffects(HitNormal, HitActor);
	SpawnIceShards(3, Rotator(HitNormal));
	return;
}

event Tick(float DeltaSeconds)
{
	super(dnProjectile).Tick(DeltaSeconds);
	// End:0x29
	if(__NFUN_201__(default.LifeSpan, 0))
	{
		__NFUN_591__(__NFUN_196__(LifeSpan, default.LifeSpan));
	}
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	local int i;

	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(BounceEffect);
	i = __NFUN_166__(string(IceShards), 1);
	J0x2C:

	// End:0x59 [Loop If]
	if(__NFUN_172__(i, 0))
	{
		PrecacheIndex.__NFUN_1267__(IceShards[i]);
		__NFUN_185__(i);
		// [Loop Continue]
		goto J0x2C;
	}
	return;
}

defaultproperties
{
	IceShards(0)=ObjectProperty'dnUsableSomething.User'
	IceShards(1)='sm_class_effects.FreezeRay.FreezeShard_01'
	IceShards(2)='sm_class_effects.FreezeRay.FreezeShard_02'
	IceShards(3)='sm_class_effects.FreezeRay.FreezeShard_03'
	IceShards(4)=BoolProperty'DukeMultiPlayer.FadeToPowerupEffect.body'
	IceShards(5)='DukeHUD'
	IceShards(6)='p_Weapons.FreezeRay_Projectile.FreezeRay_Projectile_Small_Spawner'
	bInterrupt=40
	DamageClass='Engine.ColdDamage'
	ImpactSoundName=ProjectileImpact
	ExplosionClass='p_Weapons.FreezeRay_Projectile.FreezeRay_Projectile_Spawner'
	bTelekineticable=false
	MountOnSpawn=/* Array type was not detected. */
	AnimationName=/* Unknown default property type! */
	bSurviveDismount=true
	bDontScaleByDrawScale=false
	bScaleByDrawScaleNonDefault=false
	bTransformDrawScale3DChange=false
	bTakeParentTag=false
	bTransferToCorpse=false
	bDontSetOwner=false
	MountParentTag=None
	DrawScaleOverride=0
	AppendToTag=None
	ForceTag=None
	ForceEvent=None
	MountMeshItem=None
	MountOrigin=(X=1.292418E-41,Y=2.94903E-17,Z=0)
	MountOriginVariance=(X=1.292418E-41,Y=2.94903E-17,Z=0)
	MountAngles=(Pitch=8741,Yaw=572915712,Roll=0)
	MountAnglesVariance=(Pitch=8741,Yaw=572915712,Roll=0)
	MountType=0
	DismountPhysics=0
}