/*******************************************************************************
 * Octababy generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Octababy extends AIActor
	config
	collapsecategories;

const ChanceIdleSound = 0.5f;

var bool bMissedJumpAttack;
var bool bHitWall;
var float WaterSpeedScale;
var float DodgeGate;
var float DodgeInterval;
var bool InWater;

event NotifySetTargetActor()
{
	super.NotifySetTargetActor();
	// End:0x2E
	if(bCanFly)
	{
		RndMeleeHeight = __NFUN_198__(default.RndMeleeHeight, PrimaryTargetActor.CollisionHeight);		
	}
	else
	{
		RndMeleeHeight = default.RndMeleeHeight;
	}
	return;
}

event Landed(Vector HitNormal, Actor LandedOnActor)
{
	super(Pawn).Landed(HitNormal, LandedOnActor);
	FindSoundAndSpeak('Sound_Land');
	return;
}

k2call simulated function ClawDamage(optional EventInfo AnimEventInfo)
{
	ApplyDamage(class'RatMeleeDamage', int(ClawDamageAmount), ClawDamageVel, 4);
	return;
}

k2call simulated function BiteDamage(optional EventInfo AnimEventInfo)
{
	ApplyDamage(class'RatMeleeDamage', int(BiteDamageAmount), BiteDamageVel, 4);
	return;
}

event PhysicsVolumeChange(PhysicsVolume MyNewVolume)
{
	SetInWater(MyNewVolume.bWaterVolume);
	super.PhysicsVolumeChange(MyNewVolume);
	return;
}

function SetInWater(bool NowInWater)
{
	InWater = NowInWater;
	// End:0xB3
	if(NowInWater)
	{
		Landed(__NFUN_232__(0, 0, 1), PhysicsVolume);
		SetAnimSync(0, 0, 0, 0, 1);
		SavedUseAcceleration = true;
		bCanFly = true;
		bIsFlying = true;
		AnimDispSpeedScale = WaterSpeedScale;
		// End:0x78
		if(__NFUN_174__(int(Physics), int(18)))
		{
			__NFUN_642__(4);
		}
		SetAnimController(7);
		Stompable = false;
		// End:0xB0
		if(__NFUN_340__(PrimaryTargetActor, none))
		{
			RndMeleeHeight = __NFUN_198__(default.RndMeleeHeight, PrimaryTargetActor.CollisionHeight);
		}		
	}
	else
	{
		SetAnimSync(0, 0, 0, 0, 2);
		SavedUseAcceleration = false;
		bCanFly = false;
		bIsFlying = false;
		AnimDispSpeedScale = 1;
		// End:0xF9
		if(__NFUN_174__(int(Physics), int(18)))
		{
			__NFUN_642__(1);
		}
		SetAnimController(1);
		Stompable = true;
		RndMeleeHeight = default.RndMeleeHeight;
	}
	return;
}

simulated event bool CanBreatheNormally()
{
	return true;
	return;
}

function Anim_MoveTo(Engine.BaseAI.EAIMoveSpeed MoveSpeed)
{
	super.Anim_MoveTo(MoveSpeed);
	// End:0x22
	if(__NFUN_200__(__NFUN_222__(), 0.5))
	{
		FindSoundAndSpeak('Sound_Chase');
	}
	FindSoundAndSpeak('Sound_Slither');
	return;
}

function Anim_WalkBackward()
{
	super.Anim_WalkBackward();
	FindSoundAndSpeak('Sound_Slither');
	return;
}

function Anim_RunBackward()
{
	super.Anim_RunBackward();
	FindSoundAndSpeak('Sound_DragBack');
	return;
}

function Anim_MoveTo_StrafeLeft(Engine.BaseAI.EAIMoveSpeed eMoveSpeed)
{
	super.Anim_MoveTo_StrafeLeft(eMoveSpeed);
	FindSoundAndSpeak('Sound_Slither');
	return;
}

function Anim_MoveTo_StrafeRight(Engine.BaseAI.EAIMoveSpeed eMoveSpeed)
{
	super.Anim_MoveTo_StrafeRight(eMoveSpeed);
	FindSoundAndSpeak('Sound_Slither');
	return;
}

event Engine.BaseAI.EAICode ShouldRoar()
{
	// End:0x1B
	if(bIsFlying)
	{
		// End:0x18
		if(__NFUN_200__(__NFUN_222__(), 0.1))
		{
			return 0;
		}
		return 1;
	}
	// End:0x3B
	if(bMissedJumpAttack)
	{
		bMissedJumpAttack = false;
		// End:0x3B
		if(__NFUN_200__(__NFUN_222__(), 0.5))
		{
			return 0;
		}
	}
	return 1;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldAttack()
{
	// End:0x23
	if(__NFUN_148__(__NFUN_174__(int(COND_ShouldAttackNormal()), int(0)), __NFUN_174__(int(COND_ShouldAttackShrunkWater()), int(0))))
	{
		return 1;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldAttackShrunkWater()
{
	// End:0x18
	if(__NFUN_145__(PrimaryTarget.IsValidTarget()))
	{
		return 1;
	}
	// End:0x34
	if(__NFUN_150__(__NFUN_145__(InWater), __NFUN_339__(PrimaryTargetActor, none)))
	{
		return 1;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldEndAttackShrunkWater()
{
	// End:0x12
	if(__NFUN_173__(int(COND_ShouldAttackShrunkWater()), int(0)))
	{
		return 1;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldAttackNormal()
{
	// End:0x18
	if(__NFUN_145__(PrimaryTarget.IsValidTarget()))
	{
		return 1;
	}
	// End:0x24
	if(InWater)
	{
		return 1;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldEndAttackNormal()
{
	// End:0x12
	if(__NFUN_173__(int(COND_ShouldAttackNormal()), int(0)))
	{
		return 1;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldDodge()
{
	local PlayerPawn P;

	// End:0x7A
	if(__NFUN_148__(__NFUN_340__(PrimaryTargetActor, none), __NFUN_200__(DodgeGate, Level.GameTimeSeconds)))
	{
		P = PlayerPawn(PrimaryTargetActor);
		// End:0x7A
		if(__NFUN_148__(__NFUN_340__(P, none), __NFUN_339__(P.LookHitPawn, self)))
		{
			DodgeGate = __NFUN_198__(Level.GameTimeSeconds, DodgeInterval);
			return 0;
		}
	}
	return 1;
	return;
}

function float CalculateFlyContraintStrengthScala(float DeltaTime)
{
	local Engine.BaseAI.EAIOp MyOp;

	MyOp = GetCurrentOp();
	// End:0x23
	if(__NFUN_173__(int(MyOp), int(92)))
	{
		return 1;		
	}
	else
	{
		// End:0x54
		if(__NFUN_150__(__NFUN_173__(int(MyOp), int(26)), __NFUN_173__(int(MyOp), int(25))))
		{
			return __NFUN_195__(5, CalculateFlyContraintStrengthScalar(DeltaTime));
		}
	}
	return CalculateFlyContraintStrengthScalar(DeltaTime);
	return;
}

function bool ShouldApplyMeleeDamageToActor(Actor HitActor)
{
	// End:0x1C
	if(__NFUN_339__(HitActor.Class, class'Octababy'))
	{
		return false;
	}
	return true;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldDodgeLeft()
{
	// End:0x0F
	if(__NFUN_200__(__NFUN_222__(), 0.5))
	{
		return 0;
	}
	return 1;
	return;
}

function DoExtraMeleeEffects(Actor DamagedActor, float DamageAmount, Vector DamageLocation, Vector Direction, Class DamageClass)
{
	local Vector Variance, Dir;
	local int i;

	// End:0x8A
	if(__NFUN_340__(Corpse(DamagedActor), none))
	{
		Direction = Vector(DamagedActor.Rotation);
		Variance = __NFUN_232__(1, 1, 1);
		i = 0;
		J0x45:

		// End:0x8A [Loop If]
		if(__NFUN_169__(i, 3))
		{
			Dir = __NFUN_256__(Direction, Variance);
			TraceFireMaterialHit(class'BulletDamage', self, DamageLocation, Direction, class'Flesh_Human', false);
			__NFUN_184__(i);
			// [Loop Continue]
			goto J0x45;
		}
	}
	return;
}

simulated function bool CanDisablePhysicsConstraintsInStateGotoX()
{
	return __NFUN_145__(InWater);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(Pawn).RegisterPrecacheComponents(PrecacheIndex);
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Idle');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Walk');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_WalkBackwards');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Run');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_RunBackwards');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_SidestepLeft');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_SidestepRight');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_StrafeLeft');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_StrafeRight');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_DodgeLeft');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_DodgeRight');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_TurnLeft45');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_TurnLeft180');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_TurnRight45');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_TurnRight180');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Roar');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Attack');
	// End:0x13E
	if(PrecacheIndex.bPlayerCanBeShrunk)
	{
		RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_AttackShrunk');
	}
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_PainFront');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_PainBack');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Jump0');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_JumpAttack');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_JumpAttack0');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_JumpAttack1');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Fall0');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Fall1');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Land0');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_Land1');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_HeavyLand0');
	RegisterAIAnimationControllerEntry(PrecacheIndex, 'Anim_HeavyLand1');
	PrecacheIndex.__NFUN_1279__(class'BulletDamage');
	PrecacheIndex.__NFUN_1279__(class'RatMeleeDamage');
	PrecacheIndex.__NFUN_1280__(class'Flesh_Human');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Attack_Claw');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Chase');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_DragBack');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Hiss');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Idle');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Jump');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Land');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Slither');
	PrecacheIndex.__NFUN_1266__(class'dnScreenSplatter_Blood');
	PrecacheIndex.__NFUN_1279__(class'ShrunkSmashDamage');
	PrecacheIndex.__NFUN_1277__(class'DukePlayer'.default.VoicePack, 'Stomp_Squish');
	PrecacheIndex.__NFUN_1277__(class'DukePlayer'.default.VoicePack, 'StompLines');
	return;
}

event EnumerateUsableAnimationControllers(PrecacheIndex PrecacheIndex, out array<Engine.BaseAI.EAIAnimController> UsableControllers)
{
	UsableControllers[string(UsableControllers)] = 1;
	// End:0x5A
	if(__NFUN_150__(__NFUN_310__(PrecacheIndex.MapName, "Map07B"), __NFUN_310__(PrecacheIndex.MapName, "Map19B")))
	{
		UsableControllers[string(UsableControllers)] = 7;
	}
	return;
}

state AnimX
{
	event BeginState()
	{
		super.BeginState();
		// End:0x2E
		if(__NFUN_148__(__NFUN_173__(int(GetCurrentOp()), int(85)), __NFUN_200__(__NFUN_222__(), 0.5)))
		{
			FindSoundAndSpeak('Sound_Idle');
		}
		return;
	}
	stop;
}

defaultproperties
{
	WaterSpeedScale=2.5
	DodgeInterval=2
	Nodes(0)=(AnimEnd_NextAnimStateName=22,Root=8.117489E+11)
	Nodes(1)=(SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoGuardPos,Status=0,ReportedInvalid=false,SucCond=79,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Attack,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=AttackNormal,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=0,FailFunc=COND_ShouldEndAttackNormal,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(2)=(Ident=AttackShrunkWater,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=0,FailFunc=COND_ShouldEndAttackShrunkWater,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Melee,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=21,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Wait,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Dodge,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(3)=(Ident=AvoidTarget,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=COND_ShouldNotAvoidTarget,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Cower,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Default,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=85,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=idle,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=85,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(4)=(Ident=FaceTarget,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=145,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=FaceGuardedActor,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=143,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoSearchPos,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=71,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoJumpAttackRange,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=57,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
}