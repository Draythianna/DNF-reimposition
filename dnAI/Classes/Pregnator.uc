/*******************************************************************************
 * Pregnator generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Pregnator extends AIActor
	config
	collapsecategories
	dependson(dnControl_PregnatorFaceHump);

const MinDodgeHealth = 10;
const ChanceInitialRoar = 0.7f;
const ChanceRoarInsteadOfPain = 0.3f;
const ChanceDodgeInsteadOfPain = 0.5f;
const ChanceRoarInsteadOfShoot = 0.2f;
const MinMoveInterval = 0.5f;
const RndMoveInterval = 0.5f;
const MinMeleeDuration = 3.0f;
const RndMeleeDuration = 2.0f;
const MinMeleeInterval = 4.0f;
const RndMeleeInterval = 0.0f;
const MinMeleeAttackTime = 0.4f;
const RndMeleeAttackTime = 0.0f;
const MinChargeInterval = 4.0f;
const RndChargeInterval = 3.0f;
const MinShootInterval = 2.5f;
const RndShootInterval = 1.5f;
const MinRoarInterval = 3.0f;
const RndRoarInterval = 2.0f;

var Engine.BaseAI.EAIArcSector DodgeSector;
var float MeleeGate;
var float MeleeAttackGate;
var float ChargeGate;
var float ShootGate;
var float MoveGate;
var() float ChanceRoar;
var() float RoarMinInterval;
var float RoarGate;
var() float JumpSpeed;

event NotifySetTargetActor()
{
	super.NotifySetTargetActor();
	return;
}

function Anim_Idle()
{
	FindSoundAndSpeak('Sound_Idle');
	PlayAnim('Anim_Idle');
	return;
}

function Anim_Landing(int Type)
{
	PlayAnim(__NFUN_343__(__NFUN_302__(string('Anim_Land'), string(Type))));
	FindSoundAndSpeak('Sound_Land');
	return;
}

function Anim_MoveTo(Engine.BaseAI.EAIMoveSpeed MoveSpeed)
{
	FindSoundAndSpeak('Sound_Idle');
	// End:0x38
	if(__NFUN_148__(__NFUN_173__(int(MoveSpeed), int(2)), __NFUN_173__(int(GetCurrentOp()), int(14))))
	{
		PlayAnim('Anim_RunFast');		
	}
	else
	{
		super.Anim_MoveTo(MoveSpeed);
	}
	return;
}

k2call simulated function KnobDamage(optional EventInfo AnimEventInfo)
{
	ApplyDamage(class'BiteDamage', int(BiteDamageAmount), BiteDamageVel, 4);
	return;
}

k2call simulated function ClawDamage(optional EventInfo AnimEventInfo)
{
	ApplyDamage(class'TentacleDamage', int(ClawDamageAmount), ClawDamageVel, 4);
	return;
}

function dnProjectile FireProjectile(name MuzzleName, class<dnProjectile> ProjClass, float LeadTime, bool CheckLOS)
{
	local dnProjectile Projectile;
	local dnGrenade Grenade;
	local float GravityZ;

	Projectile = super.FireProjectile(MuzzleName, ProjClass, LeadTime, CheckLOS);
	// End:0x102
	if(__NFUN_340__(Projectile, none))
	{
		ShootGate = __NFUN_198__(__NFUN_198__(Level.GameTimeSeconds, 2.5), __NFUN_195__(__NFUN_222__(), 1.5));
		FindSoundAndSpeak('Sound_AttackSpit');
		GravityZ = Projectile.__NFUN_640__().Z;
		Grenade = dnGrenade(Projectile);
		// End:0xFF
		if(__NFUN_148__(__NFUN_340__(Grenade, none), __NFUN_206__(GravityZ, class'PhysicsVolume'.default.Gravity.Z)))
		{
			Grenade.UpwardsBoost = __NFUN_237__(__NFUN_234__(Grenade.default.UpwardsBoost, GravityZ), class'PhysicsVolume'.default.Gravity.Z);
			Grenade.InitializeMotion();
		}		
	}
	else
	{
		FindSoundAndSpeak('Sound_AttackSwallow');
	}
	return Projectile;
	return;
}

function SetChargeGate()
{
	ChargeGate = __NFUN_198__(__NFUN_198__(Level.GameTimeSeconds, 4), __NFUN_195__(__NFUN_222__(), 3));
	return;
}

function SetRoarGate()
{
	RoarGate = __NFUN_198__(Level.GameTimeSeconds, RoarMinInterval);
	return;
}

event AnimEnd_MeleeAttack_Pregnator()
{
	MeleeAttackGate = __NFUN_198__(__NFUN_198__(Level.GameTimeSeconds, 0.4), __NFUN_195__(__NFUN_222__(), 0));
	return;
}

event Engine.BaseAI.EAICode COND_CanMeleeAttack()
{
	local Engine.BaseAI.EAICode Code;

	// End:0x1C
	if(__NFUN_200__(Level.GameTimeSeconds, MeleeAttackGate))
	{
		return 60;
	}
	Code = CheckCondition(22);
	// End:0x3E
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldMelee()
{
	local Engine.BaseAI.EAICode Code;

	// End:0x11
	if(__NFUN_173__(int(AttackConstraint), int(1)))
	{
		return 0;
	}
	// End:0x22
	if(__NFUN_173__(int(AttackConstraint), int(2)))
	{
		return 72;
	}
	// End:0x3E
	if(__NFUN_200__(Level.GameTimeSeconds, MeleeGate))
	{
		return 60;
	}
	Code = CheckCondition(20);
	// End:0x60
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	MeleeGate = __NFUN_198__(__NFUN_198__(Level.GameTimeSeconds, 3), __NFUN_195__(__NFUN_222__(), 2));
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldEndMelee()
{
	// End:0x11
	if(__NFUN_173__(int(AttackConstraint), int(2)))
	{
		return 0;
	}
	// End:0x22
	if(__NFUN_173__(int(AttackConstraint), int(1)))
	{
		return 73;
	}
	// End:0x89
	if(__NFUN_150__(__NFUN_150__(__NFUN_173__(int(CheckCondition(21)), int(0)), __NFUN_203__(Level.GameTimeSeconds, MeleeGate)), __NFUN_173__(int(GetCurrentOp()), int(85))))
	{
		MeleeGate = __NFUN_198__(__NFUN_198__(Level.GameTimeSeconds, 4), __NFUN_195__(__NFUN_222__(), 0));
		return 0;
	}
	return 1;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldJumpAttack()
{
	local Engine.BaseAI.EAICode Code;

	// End:0x1C
	if(__NFUN_200__(Level.GameTimeSeconds, ChargeGate))
	{
		return 60;
	}
	// End:0x2F
	if(__NFUN_145__(CheckGlobalGate('PregnatorChargeGate')))
	{
		return 105;
	}
	// End:0x43
	if(__NFUN_174__(int(CheckCondition(15)), int(0)))
	{
		return 25;
	}
	// End:0x4F
	if(IsInAir())
	{
		return 51;
	}
	// End:0x6B
	if(__NFUN_200__(Level.GameTimeSeconds, MeleeGate))
	{
		return 60;
	}
	Code = CheckCondition(90);
	// End:0x8D
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	Code = CheckCondition(91);
	// End:0xAF
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	UpdateGlobalGate('PregnatorChargeGate');
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldGotoGuardAttack()
{
	local Engine.BaseAI.EAICode Code;

	Code = CheckCondition(79);
	// End:0x22
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	Code = CheckCondition(3);
	// End:0x44
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	Code = CheckCondition(60);
	// End:0x66
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	Code = CheckCondition(25);
	// End:0x88
	if(__NFUN_174__(int(Code), int(0)))
	{
		return Code;
	}
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldInitialRoar()
{
	// End:0x18
	if(__NFUN_145__(PrimaryTarget.IsValidTarget()))
	{
		return 4;
	}
	// End:0x34
	if(__NFUN_200__(Level.GameTimeSeconds, RoarGate))
	{
		return 60;
	}
	// End:0x43
	if(__NFUN_200__(__NFUN_222__(), 0.7))
	{
		return 25;
	}
	// End:0x57
	if(__NFUN_174__(int(CheckCondition(59)), int(0)))
	{
		return 5;
	}
	SetRoarGate();
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldRoarInsteadOfPain()
{
	// End:0x13
	if(__NFUN_145__(DamageInfo.Valid))
	{
		return 43;
	}
	// End:0x2F
	if(__NFUN_200__(Level.GameTimeSeconds, RoarGate))
	{
		return 60;
	}
	// End:0x3E
	if(__NFUN_201__(__NFUN_222__(), 0.3))
	{
		return 25;
	}
	SetRoarGate();
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldRoar()
{
	// End:0x1C
	if(__NFUN_200__(Level.GameTimeSeconds, RoarGate))
	{
		return 60;
	}
	// End:0x2B
	if(__NFUN_201__(__NFUN_222__(), ChanceRoar))
	{
		return 25;
	}
	SetRoarGate();
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldDodgeInsteadOfPain()
{
	// End:0x13
	if(__NFUN_145__(DamageInfo.Valid))
	{
		return 43;
	}
	// End:0x2B
	if(__NFUN_145__(PrimaryTarget.IsValidTarget()))
	{
		return 4;
	}
	// End:0x47
	if(__NFUN_200__(__NFUN_198__(Health, DamageInfo.Damage), float(10)))
	{
		return 45;
	}
	// End:0x56
	if(__NFUN_201__(__NFUN_222__(), 0.5))
	{
		return 25;
	}
	// End:0x83
	if(__NFUN_148__(__NFUN_200__(__NFUN_222__(), 0.5), __NFUN_173__(int(CheckCondition(73)), int(0))))
	{
		DodgeSector = 2;
		return 0;		
	}
	else
	{
		// End:0x9F
		if(__NFUN_173__(int(CheckCondition(74)), int(0)))
		{
			DodgeSector = 3;
			return 0;
		}
	}
	return 10;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldDodgeLeft()
{
	// End:0x11
	if(__NFUN_173__(int(DodgeSector), int(2)))
	{
		return 0;
	}
	return 1;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldTryShot()
{
	return 0;
	return;
}

event Engine.BaseAI.EAICode COND_ShouldMoveFromWait()
{
	// End:0x1C
	if(__NFUN_200__(Level.GameTimeSeconds, MoveGate))
	{
		return 60;
	}
	return COND_CanMove();
	return;
}

event Engine.BaseAI.EAICode COND_CanMove()
{
	// End:0x1F
	if(__NFUN_174__(int(CheckCondition(24)), int(0)))
	{
		// End:0x1F
		if(SetGoal(8))
		{
			return 0;
		}
	}
	// End:0x2D
	if(SetGoal(22))
	{
		return 0;
	}
	// End:0x3B
	if(SetGoal(15))
	{
		return 0;
	}
	return 53;
	return;
}

event Engine.BaseAI.EAICode COND_BeginWaitState()
{
	MoveGate = __NFUN_198__(__NFUN_198__(Level.GameTimeSeconds, 0.5), __NFUN_195__(__NFUN_222__(), 0.5));
	return 0;
	return;
}

event float GetDefaultGotoXRange(float Range)
{
	return 5;
	return;
}

function bool TryFaceHump(Actor WallActor, optional bool Force)
{
	local DukePlayer Duke;
	local Vector TargetPos, Offset2D;
	local dnControl_PregnatorFaceHump FaceHumpControl;
	local float DotVal, Dist;
	local int i;
	local array<Actor> BlockingActors;

	// End:0x12
	if(__NFUN_145__(CheckGlobalGate('PregnatorFaceHumpGate')))
	{
		return false;
	}
	Duke = DukePlayer(WallActor);
	// End:0x2C7
	if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_173__(int(FrozenState), int(0)), __NFUN_145__(__NFUN_921__())), __NFUN_145__(JumpAttackParms.Attacked)), __NFUN_340__(Duke, none)), __NFUN_145__(Duke.IsDead())), __NFUN_145__(Duke.bAttachedToUsableSomething)), __NFUN_145__(Duke.__NFUN_921__())))
	{
		i = __NFUN_166__(string(MountedActorList), 1);
		J0xAB:

		// End:0xDE [Loop If]
		if(__NFUN_172__(i, 0))
		{
			// End:0xD4
			if(__NFUN_340__(LaserMine(MountedActorList[i].MountedActor), none))
			{
				return false;
			}
			__NFUN_185__(i);
			// [Loop Continue]
			goto J0xAB;
		}
		// End:0x134
		if(__NFUN_145__(Force))
		{
			Offset2D = __NFUN_239__(Location, Duke.Location);
			Offset2D.Z = 0;
			DotVal = __NFUN_244__(Vector(Duke.Rotation), __NFUN_253__(Offset2D));
		}
		// End:0x2C7
		if(__NFUN_150__(Force, __NFUN_203__(DotVal, 0.8)))
		{
			// End:0x1C5
			if(__NFUN_145__(Force))
			{
				TargetPos = __NFUN_238__(Duke.Location, __NFUN_263__(class'dnControl_PregnatorFaceHump'.default.PregnatorMountPrefab.MountOrigin, Duke.Rotation));
				Offset2D = __NFUN_239__(Location, TargetPos);
				Offset2D.Z = 0;
				Dist = __NFUN_251__(Offset2D);
			}
			// End:0x2C7
			if(__NFUN_150__(Force, __NFUN_202__(Dist, 35)))
			{
				// End:0x254
				if(__NFUN_145__(Force))
				{
					BlockingActors = __NFUN_637__(TargetPos, Rotation, true, false, CollisionRadius, CollisionHeight);
					// End:0x254
					if(__NFUN_150__(__NFUN_145__(__NFUN_638__(TargetPos, CollisionRadius, CollisionHeight, Rotation)), __NFUN_174__(string(BlockingActors), 0)))
					{
						__NFUN_355__("test failed~!~~~~~~~~~~~~~");
						return false;
					}
				}
				FaceHumpControl = dnControl_PregnatorFaceHump(FindAnyActor(class'dnControl_PregnatorFaceHump'));
				// End:0x284
				if(__NFUN_339__(FaceHumpControl, none))
				{
					FaceHumpControl = __NFUN_615__(class'dnControl_PregnatorFaceHump');
				}
				// End:0x2C7
				if(FaceHumpControl.CanBeUsedBy(Duke))
				{
					FaceHumpControl.Pregnator = self;
					FaceHumpControl.__NFUN_607__(1E-05, false, 'TriggerFunc_ForcePlayerAttach');
					return true;
				}
			}
		}
	}
	return false;
	return;
}

event Vector GetJumpAttackTargetPos(Actor TargetActor)
{
	local Pawn pawnTarget;
	local float LeadTime, Dist;
	local Vector TargetPos;

	// End:0x23
	if(TargetActor.bIsPawn)
	{
		pawnTarget = Pawn(TargetActor);
	}
	// End:0xA7
	if(__NFUN_340__(pawnTarget, none))
	{
		Dist = __NFUN_251__(__NFUN_239__(pawnTarget.Location, Location));
		LeadTime = __NFUN_196__(Dist, JumpSpeed);
		TargetPos = pawnTarget.__NFUN_906__();
		// End:0x9E
		if(__NFUN_206__(LeadTime, 0))
		{
			__NFUN_249__(TargetPos, __NFUN_234__(pawnTarget.Velocity, LeadTime));
		}
		return TargetPos;		
	}
	else
	{
		return __NFUN_238__(TargetActor.Location, __NFUN_232__(0, 0, __NFUN_195__(TargetActor.CollisionHeight, 0.66)));
	}
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	local int i;

	super(Pawn).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(class'dnControl_PregnatorFaceHump');
	PrecacheIndex.__NFUN_1279__(class'BiteDamage');
	PrecacheIndex.__NFUN_1279__(class'TentacleDamage');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackClaw');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackJumpGrunt');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackPreSpit');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackShrunk');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackSpit');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackSwallow');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackWhip1');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_AttackWhip2');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Dodge');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_FaceAttach');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Hiss');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Idle');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'Sound_Land');
	PrecacheIndex.__NFUN_1283__('Anim_Idle', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Walk', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_WalkBackwards', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Run', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_RunBackwards', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_RunFast', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_TurnLeft45', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_TurnLeft180', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_TurnRight45', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_TurnRight180', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_SidestepLeft', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_SidestepRight', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_StrafeLeft', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_StrafeRight', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_DodgeLeft', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_DodgeRight', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_ShootProjectile', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Attack', class'acPregnator', Mesh);
	// End:0x393
	if(PrecacheIndex.bPlayerCanBeShrunk)
	{
		PrecacheIndex.__NFUN_1283__('Anim_AttackShrunk', class'acPregnator', Mesh);
	}
	PrecacheIndex.__NFUN_1283__('Anim_JumpAttack', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_JumpAttack0', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_JumpAttack1', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Jump1', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Fall1', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Land1', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Jump0', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Fall0', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Land0', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_HeavyLand0', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_Roar', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainShortFront', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainShortBack', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainShortLeft', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainShortRight', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainBigFront', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainBigBack', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainBigLeft', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1283__('Anim_PainBigRight', class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1282__(class'acPregnator', Mesh);
	PrecacheIndex.__NFUN_1277__(class'VoicePack_Duke', 'Rage_VOC');
	return;
}

simulated event bool CanBreatheNormally()
{
	return true;
	return;
}

event EnumerateUsableAnimationControllers(PrecacheIndex PrecacheIndex, out array<Engine.BaseAI.EAIAnimController> UsableControllers)
{
	UsableControllers[string(UsableControllers)] = 1;
	return;
}

state JumpAttack
{
	event Landed(Vector HitNormal, Actor LandedOnActor)
	{
		// End:0x21
		if(__NFUN_145__(TryFaceHump(LandedOnActor, true)))
		{
			super.Landed(HitNormal, LandedOnActor);
		}
		return;
	}

	event HitWall(Vector WallNormal, Actor WallActor)
	{
		// End:0x20
		if(__NFUN_145__(TryFaceHump(WallActor)))
		{
			super.HitWall(WallNormal, WallActor);
		}
		return;
	}
	stop;
}

defaultproperties
{
	ChanceRoar=1
	JumpSpeed=450
	Nodes(0)=(FSMSucc=22,Root=8.117489E+11)
	Nodes(1)=(SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=InitialRoar,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Dodge,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Guard,Status=0,ReportedInvalid=false,SucCond=76,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(2)=(Ident=GotoGuardAttack,Status=0,ReportedInvalid=false,SucCond=61,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoGuardPos,Status=0,ReportedInvalid=false,SucCond=79,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Search,Status=0,ReportedInvalid=false,SucCond=7,SucFunc=None,FailCond=7,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=AvoidDanger,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(3)=(Ident=Wait,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Melee,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoWeapon,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Projectile,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(4)=(Ident=FaceTargetJumpAttack,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Attack,Status=0,ReportedInvalid=false,SucCond=7,SucFunc=None,FailCond=9,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=AttackJumpAttack,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=AttackWeapon,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(5)=(Ident=AttackMelee,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=AttackActionPoint,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=SearchActionPoint,Status=0,ReportedInvalid=false,SucCond=4,SucFunc=None,FailCond=4,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=AvoidTarget,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=COND_ShouldNotAvoidTarget,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(6)=(Ident=Cower,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Default,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=85,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=FUBAR,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=1,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=Pain,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=96,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(7)=(Ident=idle,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=85,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=FaceTarget,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=145,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=FaceGuardedActor,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=143,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoJumpAttack,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=56,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
	Nodes(8)=(Ident=GotoGoalFacePosOneStep,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=48,OpRef=0,SharedTransitions=(none,(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoMelee,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=61,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoGuardMeleeAttack,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=62,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */),(CurStateIndex=0),(Ident=GotoGoalFullBody,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=53,OpRef=0,SharedTransitions=/* Array type was not detected. */),(StateTable=/* Array type was not detected. */)),CurStateIndex=0)
}