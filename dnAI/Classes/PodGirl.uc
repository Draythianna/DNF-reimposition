/*******************************************************************************
 * PodGirl generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class PodGirl extends PodGirl_Base;

var() noexport int SpawnCount "Number of creatures to spawn from this podgirl";
var() noexport name SpawnActorEvent "Event of the spawned creatures";
var() noexport bool DebugSpawning "Spams detailed spawn information to the log file";
var() noexport deprecated name ForceExplodeTag "Trigger this to force podgirl to explode";
var() class<dnFriendFX_Spawners> ExplodeParticleSystem;
var() noexport Vector SpawnOffset "Offset from origin to spawn octababies at";
var noexport Vector SpawnOffsetVar "Random variabnce from origin + SpawnOff to spawn at.";
var() noexport Vector SpawnedVelocity "Initial, random, velocity to spawn creatures at";
var() noexport float PrimeTime "Time to be in prime state - after opening but before exploding";
var() noexport float ExplosionDamageAmount "Amount to damage when the podgirl explodes/spawns";
var() noexport float ExplosionRadius "Radius of explosion damage";
var() noexport bool bExplode "If false, the pod girl will not explode when the player is within the SensorRadius";
var float SpawnYawVar;
var float SpawnPitchVar;
var float SpawnVelVar;
var name ExpandingBoneName;
var Biology_Generic_AlienSensor Sensor;
var AIActorFactory Factory;
var bool bPrimed;
var bool bSpawned;
var bool bDied;
var MotionPrefab NoMotion;
var MotionPrefab GibMotion;
var class<HUDEffects> BloodScreenSplatterClass;
var Vector BloodSplatterOffset;

function PostVerifySelf()
{
	super(dnDecoration).PostVerifySelf();
	// End:0x1D
	if(__NFUN_200__(__NFUN_222__(), 0.5))
	{
		VoicePack = class'VoicePack_PodGirlB';
	}
	Sensor = Biology_Generic_AlienSensor(FindMountedActor(, class'Biology_Generic_AlienSensor'));
	// End:0x52
	if(__NFUN_340__(Sensor, none))
	{
		Sensor.__NFUN_1124__(SensorRadius);
	}
	// End:0x6D
	if(__NFUN_339__(Factory, none))
	{
		Factory = __NFUN_615__(class'AIActorFactory', self);
	}
	// End:0x96
	if(__NFUN_148__(DebugSpawning, __NFUN_340__(Factory, none)))
	{
		Factory.DebugFactory = true;
	}
	__NFUN_718__('ForceExplode', ForceExplodeTag);
	return;
}

event PostBeginPlay()
{
	super(dnDecoration).PostBeginPlay();
	AnimationController.SetAnimState('idle');
	FindAndPlaySound('idle', 2, true, true);
	return;
}

simulated event bool OnEvalBonesHelper()
{
	local float DesiredHeadScale;

	// End:0x63
	if(__NFUN_342__(ExpandingBoneName, 'None'))
	{
		DesiredHeadScale = Level.HeadScaleModifier;
		// End:0x63
		if(__NFUN_148__(__NFUN_206__(DesiredHeadScale, 1), __NFUN_340__(__NFUN_568__(), none)))
		{
			MeshInstance.__NFUN_539__(ExpandingBoneName, __NFUN_232__(DesiredHeadScale, DesiredHeadScale, DesiredHeadScale));
		}
	}
	return true;
	return;
}

event AnimEndEx(SAnimEndInfo AnimEndInfo)
{
	super(dnDecoration).AnimEndEx(AnimEndInfo);
	// End:0x25
	if(__NFUN_145__(bDied))
	{
		FindAndPlaySound('idle', 2, true, true);
	}
	return;
}

function OnSenseHumanPawn()
{
	// End:0x0F
	if(bExplode)
	{
		BeginSpawn();
	}
	return;
}

function OnUnsenseHumanPawn()
{
	return;
}

function bool CanSpawn()
{
	return __NFUN_145__(bPrimed);
	return;
}

function BeginSpawn()
{
	// End:0x0B
	if(bDied)
	{
		return;
	}
	// End:0x24
	if(__NFUN_340__(Sensor, none))
	{
		Sensor.__NFUN_614__();
	}
	FindAndPlaySound('Open');
	AnimationController.SetAnimState('Explode');
	bNoDamage = false;
	bPrimed = true;
	bEnemy = true;
	return;
}

final simulated function AnimEnd_Exploded()
{
	local HUDEffects ScreenSplatter;

	// End:0x5C
	if(__NFUN_340__(BloodScreenSplatterClass, none))
	{
		ScreenSplatter = HUDEffects(FindStaticActor(BloodScreenSplatterClass));
		// End:0x5C
		if(__NFUN_340__(ScreenSplatter, none))
		{
			ScreenSplatter.__NFUN_645__(__NFUN_238__(Location, SpawnOffset));
			ScreenSplatter.ExecuteEffect(DrawScale);
		}
	}
	SpawnBabies();
	return;
}

function SpawnBabies()
{
	local int i;
	local AIActor A;
	local Vector NewVelocity;
	local Rotator VelRotation;

	bNoDamage = false;
	bPrimed = true;
	FindAndPlaySound('Spawn');
	FindAndPlaySound('Explode');
	DoHurtRadius();
	Factory.m_strEvent = SpawnActorEvent;
	Factory.m_Class = ClassToSpawn;
	Factory.m_bOneSpawnPerFrame = false;
	i = 0;
	J0x6F:

	// End:0x1EB [Loop If]
	if(__NFUN_169__(i, SpawnCount))
	{
		VelRotation = Rotation;
		__NFUN_180__(VelRotation.Yaw, int(__NFUN_195__(__NFUN_199__(__NFUN_222__(), 0.5), SpawnYawVar)));
		__NFUN_180__(VelRotation.Pitch, int(__NFUN_195__(__NFUN_222__(), SpawnPitchVar)));
		NewVelocity = __NFUN_241__(__NFUN_238__(SpawnedVelocity, __NFUN_234__(__NFUN_234__(SpawnedVelocity, __NFUN_222__()), SpawnVelVar)), VelRotation);
		Factory.__NFUN_645__(__NFUN_238__(Location, __NFUN_241__(SpawnOffset, Rotation)));
		// End:0x122
		if(DebugSpawning)
		{
			__NFUN_672__(Location, NewColorBytes(255, 255, 0), 5);
		}
		// End:0x184
		if(__NFUN_145__(Factory.TriggerSpawn(self, none, A)))
		{
			BroadcastLog("Warning - could not spawn AI from Podgirl internal factory!");
			// [Explicit Continue]
			goto J0x1E1;
		}
		A.CanUseState_JumpAttackPresetInstant(NewVelocity);
		A.__NFUN_652__(Rotator(NewVelocity));
		A.ExecuteOp(89);
		A.SetExecutive(2);
		A.SuspendWeaponTargetEvaluation(false);
		J0x1E1:

		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x6F;
	}
	bSpawned = true;
	Event = 'None';
	CriticalDamage();
	return;
}

function DoHurtRadius()
{
	HurtRadius(ExplosionDamageAmount, Location, ExplosionRadius, ExplosionRadius);
	return;
}

simulated function bool CanHurtRadiusOther(Actor Other)
{
	return Other.bIsPlayerPawn;
	return;
}

event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	super(dnDecoration).TakeDamage(Instigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
	// End:0x3A
	if(__NFUN_202__(Damage, 0))
	{
		return;
	}
	// End:0x7A
	if(__NFUN_148__(__NFUN_201__(ThisFrameDamage.Damage, 50), __NFUN_150__(__NFUN_357__(DamageType, class'ExplosionDamage'), __NFUN_357__(DamageType, class'ShotgunDamage'))))
	{
		CriticalDamage();
		return;
	}
	// End:0x123
	if(__NFUN_145__(bDied))
	{
		bEnemy = false;
		bDied = true;
		FindAndPlaySound('Killed');
		// End:0xD8
		if(__NFUN_201__(__NFUN_244__(__NFUN_253__(__NFUN_239__(DamageOrigin, Location)), Vector(Rotation)), 0))
		{
			AnimationController.SetAnimState('DieBack');			
		}
		else
		{
			AnimationController.SetAnimState('DieFront');
		}
		// End:0x123
		if(__NFUN_148__(Instigator.bIsPlayerPawn, __NFUN_200__(__NFUN_222__(), 0.4)))
		{
			Instigator.FindSoundAndSpeak('PodGirlKillLines');
		}
	}
	return;
}

final simulated function AnimEnd_Dead()
{
	// End:0x28
	if(__NFUN_339__(Mesh, default.Mesh))
	{
		AnimationController.SetAnimState('IdleDead');		
	}
	else
	{
		TickStyle = 0;
	}
	return;
}

event CriticalDamage(optional bool bForceRemoval)
{
	local class<BonePartMapper> BonePartMapper;
	local int i;
	local SSpawnActorPrefab Prefab;
	local Actor Gib, BloodyMess;
	local KarmaActor KGib;

	// End:0x0B
	if(bCriticalDamage)
	{
		return;
	}
	super(dnDecoration).CriticalDamage(bForceRemoval);
	// End:0x4E8
	if(bCriticalDamage)
	{
		BonePartMapper = __NFUN_574__(Mesh);
		// End:0x4B6
		if(__NFUN_340__(BonePartMapper, none))
		{
			Prefab.SpawnClass = class'Corpse_Gib';
			i = __NFUN_166__(string(BonePartMapper.default.Gibs), 1);
			J0x63:

			// End:0x4B6 [Loop If]
			if(__NFUN_172__(i, 0))
			{
				// End:0xB9
				if(__NFUN_150__(__NFUN_339__(BonePartMapper.default.Gibs[i].RenderObject, none), __NFUN_341__(BonePartMapper.default.Gibs[i].BoneName, 'None')))
				{
					// [Explicit Continue]
					goto J0x4AC;
				}
				// End:0xDD
				if(__NFUN_201__(__NFUN_222__(), BonePartMapper.default.Gibs[i].GibChance))
				{
					// [Explicit Continue]
					goto J0x4AC;
				}
				// End:0x128
				if(__NFUN_339__(BonePartMapper.default.Gibs[i].GibBloodyMess, none))
				{
					BonePartMapper.default.Gibs[i].GibBloodyMess = BonePartMapper.default.GibBloodyMess;
				}
				Prefab.RenderObject = BonePartMapper.default.Gibs[i].RenderObject;
				Prefab.Offset = BonePartMapper.default.Gibs[i].LocOffset;
				Prefab.Rotation = BonePartMapper.default.Gibs[i].RotOffset;
				Prefab.BoneName = BonePartMapper.default.Gibs[i].BoneName;
				Prefab.SpawnChance = BonePartMapper.default.Gibs[i].GibChance;
				Prefab.DrawScale = BonePartMapper.default.Gibs[i].DrawScale;
				Prefab.DrawScaleVariance = BonePartMapper.default.Gibs[i].DrawScaleVariance;
				Prefab.SpawnClass.default.bNoAutoCleanup = BonePartMapper.default.Gibs[i].bStaticGib;
				// End:0x28D
				if(BonePartMapper.default.Gibs[i].bStaticGib)
				{
					Prefab.MotionInfo = NoMotion;					
				}
				else
				{
					Prefab.MotionInfo = GibMotion;
				}
				Gib = __NFUN_836__(Prefab, ThisFrameDamage);
				Prefab.SpawnClass.default.bNoAutoCleanup = false;
				// End:0x4AC
				if(__NFUN_340__(Gib, none))
				{
					Gib.__NFUN_639__(BonePartMapper.default.Gibs[i].Mass);
					// End:0x3F6
					if(Gib.bIsKarmaActor)
					{
						KGib = KarmaActor(Gib);
						KGib.bIgnorePawnAirCushion = BonePartMapper.default.Gibs[i].bIgnorePawnAirCushion;
						// End:0x3C9
						if(BonePartMapper.default.Gibs[i].bStaticGib)
						{
							KGib.__NFUN_608__('EnableDamage');
							KGib.__NFUN_642__(0);
							KGib.__NFUN_621__(,,, true);
							// End:0x3C6
							if(BonePartMapper.default.Gibs[i].bKDNoPawnInteractions)
							{
								KGib.__NFUN_811__(3);
							}							
						}
						else
						{
							// End:0x3F6
							if(BonePartMapper.default.Gibs[i].bKDNoPawnInteractions)
							{
								KGib.__NFUN_812__(1);
							}
						}
					}
					// End:0x4AC
					if(__NFUN_340__(BonePartMapper.default.Gibs[i].GibBloodyMess, none))
					{
						BloodyMess = __NFUN_615__(BonePartMapper.default.Gibs[i].GibBloodyMess);
						// End:0x4AC
						if(__NFUN_340__(BloodyMess, none))
						{
							// End:0x484
							if(__NFUN_340__(Gib.__NFUN_568__(), none))
							{
								BloodyMess.MountType = 2;
								BloodyMess.MountMeshItem = 'Root';								
							}
							else
							{
								BloodyMess.MountType = 0;
							}
							BloodyMess.__NFUN_635__(Gib, false, false, false, true);
						}
					}
				}
				J0x4AC:

				__NFUN_185__(i);
				// [Loop Continue]
				goto J0x63;
			}
		}
		DoParticleFX();
		FindAndPlaySound('Explode');
		// End:0x4E8
		if(__NFUN_148__(__NFUN_145__(bSpawned), bPrimed))
		{
			FindAndPlaySound('Killed');
		}
	}
	return;
}

event DoParticleFX()
{
	local dnFriendFX_Spawners FriendActor;

	// End:0x5E
	if(__NFUN_340__(ExplodeParticleSystem, none))
	{
		FriendActor = FindFriendSpawner(ExplodeParticleSystem);
		// End:0x5E
		if(__NFUN_340__(FriendActor, none))
		{
			FriendActor.__NFUN_645__(Location);
			FriendActor.RemoteRole = ROLE_None;
			FriendActor.ExecuteEffect(true);
		}
	}
	return;
}

final simulated function TriggerFunc_ForceExplode()
{
	BeginSpawn();
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(ExplodeParticleSystem);
	PrecacheIndex.__NFUN_1266__(BloodScreenSplatterClass);
	PrecacheIndex.__NFUN_1266__(class'Corpse_Gib');
	PrecacheIndex.__NFUN_1283__('idle', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Explode', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('Spawn', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('DieBack', AnimationControllerClass, Mesh);
	PrecacheIndex.__NFUN_1283__('DieFront', AnimationControllerClass, Mesh);
	// End:0xF9
	if(__NFUN_339__(Mesh, default.Mesh))
	{
		PrecacheIndex.__NFUN_1283__('IdleDead', AnimationControllerClass, Mesh);
	}
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlA', 'Explode');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlA', 'idle');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlA', 'Killed');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlA', 'Open');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlA', 'Spawn');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlB', 'Explode');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlB', 'idle');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlB', 'Open');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlB', 'Killed');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_PodGirlB', 'Spawn');
	PrecacheIndex.__NFUN_1277__(class'VoicePack_Duke', 'PodGirlKillLines');
	return;
}

defaultproperties
{
	SpawnCount=4
	ExplodeParticleSystem='p_hit_effects.Blood_BodyExplode.Blood_BodyExplode_Spawner'
	SpawnOffset=(X=1.298303E-41,Y=3.773024E-17,Z=0)
	SpawnOffsetVar=(X=1.298303E-41,Y=3.778709E-17,Z=160)
	SpawnedVelocity=(X=1.298303E-41,Y=3.778706E-17,Z=0)
	PrimeTime=5
	ExplosionDamageAmount=20
	SpawnYawVar=16384
	SpawnPitchVar=3730.66
	SpawnVelVar=1
	ExpandingBoneName=neck
	begin object name=MP_PodGirl_NoMotion class=MotionPrefab
		bNoMotion=true
	object end
	// Reference: MotionPrefab'PodGirl.MP_PodGirl_NoMotion'
	NoMotion=MP_PodGirl_NoMotion
	begin object name=MP_PodGirl_GibMotion class=MotionPrefab
		bUseParentRotationRate=false
		VelocityRelativeType=3
		Velocity=(X=1.298303E-41,Y=3.778723E-17,Z=0)
		VelocityVariance=(X=1.298303E-41,Y=3.778638E-17,Z=50)
		RotationRate=(Pitch=-2147474894,Yaw=574554114,Roll=0)
		RotationRateVariance=(Pitch=8754,Yaw=574554112,Roll=163840)
	object end
	// Reference: MotionPrefab'PodGirl.MP_PodGirl_GibMotion'
	GibMotion=MP_PodGirl_GibMotion
	BloodScreenSplatterClass='dnGame.dnScreenSplatter_Blood'
	BloodSplatterOffset=(X=1.298303E-41,Y=3.773024E-17,Z=0)
	ClassToSpawn='Octababy'
	SensorRadius=100
	HealthPrefab=0
	bUseDecoAnim=false
	ExitWoundInfo(0)=(DamageType=none,MinimumDamage=1,RandomChance=0.5,ExitWoundDecalClass='dnGame.dnExitWound_Human')
	MountOnSpawn(0)=(bSkipVerifySelf=false,SpawnClass='dnDecorations.Biology_Generic_AlienSensor',SpawnChance=0,MountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.298303E-41,Y=3.773024E-17,Z=0),Z=0),MountOriginVariance=(X=1.298303E-41,Y=3.773024E-17,Z=0),Z=0)
	AnimationControllerClass='acPodGirl'
	bBlockKarma=true
	bBlockPath=true
	bStaticAI=true
	bHasEvalBonesHelper=true
	bDumbMesh=false
	bLowerByCollision=true
	bDirectional=true
	CollisionRadius=35
	VisibleCollidingCenterOffset=(X=1.298303E-41,Y=3.773024E-17,Z=0)
	Mesh='c_characters.podgirl_c'
	VoicePack='SoundConfig.NPCs.VoicePack_PodGirlA'
}