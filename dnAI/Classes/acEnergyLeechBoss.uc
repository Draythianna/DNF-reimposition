/*******************************************************************************
 * acEnergyLeechBoss generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class acEnergyLeechBoss extends AIAnimationControllerEx
	dependson(EnergyLeech_Boss);

function bool GetPainAnimName(Engine.Object.EPawnBodyPart Part, class<DamageType> DamageType, int Damage, Vector Dir, out name AnimName, out Engine.BaseAI.EAIAnimController NextAnimCtrl, out Engine.Object.EPawnBodyPart WoundedPart, out Engine.BaseAI.EAIArcSector WoundSector)
{
	local AIActor AIOwner;

	AIOwner = AIActor(RenderOwner);
	switch(WoundSector)
	{
		// End:0x2B
		case 3:
			AnimName = 'EnergyLeech_Pain_Right';
			// End:0x4F
			break;
		// End:0x3E
		case 2:
			AnimName = 'EnergyLeech_Pain_Left';
			// End:0x4F
			break;
		// End:0xFFFF
		default:
			AnimName = 'EnergyLeech_Pain_Center';
			// End:0x4F
			break;
			break;
	}
	return true;
	return;
}

function bool GetDeathAnimName(Engine.Object.EPawnBodyPart Part, int Damage, Vector Dir, out name AnimName, out name FinishMeAnimName, out name FinishMeReviveAnimName, out float FinishMeTimeout, out int UseExactAnimName)
{
	local EnergyLeech_Boss MyBoss;

	MyBoss = EnergyLeech_Boss(RenderOwner);
	AnimName = 'EnergyLeech_Wounded_Loop_Begin';
	FinishMeAnimName = 'EnergyLeech_Wounded_Loop';
	FinishMeReviveAnimName = 'EnergyLeech_Wounded_Loop_End';
	FinishMeTimeout = MyBoss.RecoveryTime;
	UseExactAnimName = 1;
	return true;
	return;
}
