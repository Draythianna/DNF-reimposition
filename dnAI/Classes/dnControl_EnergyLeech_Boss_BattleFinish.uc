/*******************************************************************************
 * dnControl_EnergyLeech_Boss_BattleFinish generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControl_EnergyLeech_Boss_BattleFinish extends dnControl_TapPowered
	collapsecategories;

var EnergyLeech_Boss EnergyLeech;
var name GridName;
var SMountPrefab WallBombPropMountPrefab;
var WallBombPrimed WallBombProp;

simulated function bool VerifySelf()
{
	EnergyLeech = EnergyLeech_Boss(Owner);
	// End:0x1E
	if(__NFUN_339__(EnergyLeech, none))
	{
		return false;
	}
	return super(Actor).VerifySelf();
	return;
}

simulated event Actor GetIKActor(name LimbID)
{
	return EnergyLeech;
	return;
}

simulated function AttachPawnSuccess(Pawn Attachee, optional bool bForced)
{
	local WallBomb WallBomb;

	super(dnControl).AttachPawnSuccess(Attachee, bForced);
	// End:0x37
	if(__NFUN_340__(EnergyLeech, none))
	{
		EnergyLeech.FadeOverlayEffect(0, 1);
	}
	User.bNoDamage = true;
	User.TickBefore = EnergyLeech;
	WallBomb = WallBomb(User.__NFUN_920__(class'WallBomb'));
	// End:0xB9
	if(__NFUN_150__(__NFUN_339__(WallBomb, none), WallBomb.IsCompletelyOutOfAmmo()))
	{
		class'Inventory'.static.AttemptPickup(class'WallBomb', none, User, 4);
	}
	return;
}

simulated function DetachComplete()
{
	User.bNoDamage = false;
	super(dnControl).DetachComplete();
	return;
}

simulated function PlayUserAnim()
{
	super(dnControl).PlayUserAnim();
	// End:0x71
	if(__NFUN_148__(__NFUN_148__(__NFUN_342__(States[CurrentStateIndex].UserAnimName, 'None'), __NFUN_340__(EnergyLeech, none)), __NFUN_340__(EnergyLeech.AnimationController, none)))
	{
		EnergyLeech.AnimationController.SetAnimState(States[CurrentStateIndex].UserAnimName);
	}
	return;
}

simulated function AttachToUser()
{
	local WallBomb WallBomb;

	super(Decoration).AttachToUser();
	WallBomb = WallBomb(User.__NFUN_920__(class'WallBomb'));
	// End:0x58
	if(__NFUN_340__(WallBomb, none))
	{
		WallBomb.ExpendAmmo(WallBomb.WeaponConfig.default.AmmoExpenditure);
	}
	WallBombProp = __NFUN_615__(class'WallBombPrimed');
	// End:0x89
	if(__NFUN_340__(WallBombProp, none))
	{
		WallBombProp.__NFUN_633__(WallBombPropMountPrefab, User);
	}
	return;
}

simulated function InteractUser(Pawn User)
{
	super(InteractiveActor).InteractUser(User);
	// End:0x47
	if(__NFUN_340__(WallBombProp, none))
	{
		__NFUN_615__(class'Catfish_Death',,, WallBombProp.Location,,, true);
		WallBombProp.__NFUN_614__();
		WallBombProp = none;
	}
	return;
}

simulated function FailTimer()
{
	ControlEvent(, 'Fail');
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(class'WallBomb');
	PrecacheIndex.__NFUN_1266__(class'WallBombPrimed');
	PrecacheIndex.__NFUN_1266__(class'Catfish_Death');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'STR_Motion_Generic');
	PrecacheIndex.__NFUN_1281__(GridName);
	return;
}

state() idle
{
	event BeginState()
	{
		__NFUN_607__(EnergyLeech.StrengthTapTimeout, false, 'FailTimer');
		FindAndPlaySound('STR_Motion_Generic');
		FindAndFadeSound('STR_Motion_Generic', 0, 0, 1);
		super(Object).BeginState();
		return;
	}

	event EndState()
	{
		__NFUN_608__('FailTimer');
		FindAndFadeSound('STR_Motion_Generic', 0.5, 0, 1);
		super(Object).EndState();
		return;
	}

	function FullyLifted()
	{
		super(dnControl_TapPowered).FullyLifted();
		ControlEvent(, 'Finish');
		return;
	}

	function UpdateUserLift()
	{
		super(dnControl_TapPowered).UpdateUserLift();
		FindAndFadeSound('STR_Motion_Generic', 0.03, __NFUN_225__(0, __NFUN_195__(0.5, __NFUN_198__(UserLiftVal, 1))), 1);
		User.AnimationController.SetAnimGridState(GridName, UserLiftVal);
		// End:0x9E
		if(__NFUN_148__(__NFUN_340__(EnergyLeech, none), __NFUN_340__(EnergyLeech.AnimationController, none)))
		{
			EnergyLeech.AnimationController.SetAnimGridState(GridName, UserLiftVal);
		}
		return;
	}
	stop;
}

state DetachAnimBase
{
	simulated function AnimCallback_UserAnimEnd()
	{
		global.AnimCallback_UserAnimEnd();
		// End:0x23
		if(__NFUN_340__(User, none))
		{
			User.TickBefore = none;
		}
		DetachPawnSuccess(false);
		AnimCallback_UserDetached();
		return;
	}
	stop;
}

state() Fail extends DetachAnimBase
{
	event BeginState()
	{
		User.bNoDamage = false;
		super(Object).BeginState();
		return;
	}
	stop;
}

state() Finish extends DetachAnimBase
{	stop;
}

defaultproperties
{
	GridName=EnergyLeech_BattleFinish_Grid
	WallBombPropMountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=mount_handright,MountOrigin=(X=1.298303E-41,Y=3.773024E-17,Z=0),Z=0)
	bForceDrop=false
	RateOfGain=0.1
	TapUsePhrase="<?int?dnAI.dnControl_EnergyLeech_Boss_BattleFinish.TapUsePhrase?>"
}