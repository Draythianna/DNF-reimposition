/*******************************************************************************
 * Barrels_Generic_Unstable generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Barrels_Generic_Unstable extends Barrels_Generic
	abstract
	collapsecategories;

var() noexport float DelayedExplosionTime "After the first time we take damage, we'll force destory ourselves if the timer runs out before we take enough damage.";
var() noexport float DelayedExplosionVariance "Variance for the DelayedExplosionTime";
var bool bExplodeOnNextHit;
var float RadiusFireHeight;
var SoftParticleSystem BulletFire;
var class<SoftParticleSystem> BulletFireClass;
var class<dnExplosionLight> ExplosionLightClass;
var name OnFireSoundName;
var MotionPrefab MP_NoMotion;
var bool bDamageDisabled;

replication
{
	// Pos:0x000
	reliable if(__NFUN_173__(int(Role), int(ROLE_Authority)))
		StartRadiusFire;
}

simulated function PostVerifySelf()
{
	local int i;

	// End:0x62
	if(__NFUN_340__(ExplosionLightClass, none))
	{
		i = SpawnOnDestroyed.Add(1);
		SpawnOnDestroyed[i].SpawnClass = ExplosionLightClass;
		SpawnOnDestroyed[i].RotationVariance = __NFUN_265__(65535, 65535, 65535);
		SpawnOnDestroyed[i].MotionInfo = MP_NoMotion;
	}
	super(dnDecoration).PostVerifySelf();
	return;
}

simulated function Destroyed()
{
	__NFUN_608__('Explode');
	StopBulletFire();
	super(dnDecoration).Destroyed();
	return;
}

function DelayDestroy()
{
	__NFUN_607__(1E-05, false, 'DoDelayDestroy');
	return;
}

function DoDelayDestroy()
{
	__NFUN_614__();
	return;
}

simulated function SpawnOnDestroyedActivity()
{
	super(RenderActor).SpawnOnDestroyedActivity();
	// End:0x32
	if(__NFUN_145__(IsMP()))
	{
		class'DecalBomb'.static.StaticDeploy(class'dnExplosionDecalBomb', Location, Rotation, self, self);
	}
	return;
}

simulated function Grabbed(Pawn Grabber)
{
	super(dnDecoration).Grabbed(Grabber);
	bDamageDisabled = true;
	return;
}

simulated function UnGrabbed(Pawn Grabber, bool Thrown)
{
	super(dnDecoration).UnGrabbed(Grabber, Thrown);
	// End:0x41
	if(Thrown)
	{
		bExplodeOnNextHit = true;
		BeingThrown = true;
		// End:0x41
		if(__NFUN_340__(Grabber, none))
		{
			Instigator = Grabber;
		}
	}
	__NFUN_607__(0.1, false, 'ClearDamageDisable');
	return;
}

function Thrown(Vector Vel, Pawn Thrower)
{
	super(InteractiveActor).Thrown(Vel, Thrower);
	bExplodeOnNextHit = true;
	BeingThrown = true;
	// End:0x37
	if(__NFUN_340__(Thrower, none))
	{
		Instigator = Thrower;
	}
	__NFUN_607__(0.1, false, 'ClearDamageDisable');
	return;
}

function ThrowLanded()
{
	CriticalDamage();
	super(InteractiveActor).ThrowLanded();
	return;
}

function TelekineticThrow(Vector Vel, bool bConstrain)
{
	super(InteractiveActor).TelekineticThrow(Vel, bConstrain);
	bExplodeOnNextHit = true;
	BeingThrown = true;
	return;
}

final function ClearDamageDisable()
{
	bDamageDisabled = false;
	return;
}

simulated event Engine.Actor.ETraceFireHitResponse TraceFireHit(Actor SourceActor, class<TraceDamageType> TraceDamageType, Vector SourceTraceOrigin, Vector HitLocation, Vector HitNormal, name HitBoneName, bool bExtentTrace)
{
	local Rotator FireRotation;

	// End:0x0C
	if(MPRoundNotInProgress())
	{
		return 0;
	}
	// End:0x54
	if(__NFUN_148__(__NFUN_148__(__NFUN_340__(SourceActor, none), __NFUN_340__(SourceActor.Owner, none)), SourceActor.Owner.__NFUN_358__('HoloActor')))
	{
		return 0;
	}
	// End:0xFF
	if(__NFUN_145__(bDamageDisabled))
	{
		// End:0x88
		if(__NFUN_148__(__NFUN_340__(TraceDamageType, none), __NFUN_357__(TraceDamageType, class'RailgunDamage')))
		{
			bExplodeOnNextHit = true;			
		}
		else
		{
			// End:0x9A
			if(bExtentTrace)
			{
				StartRadiusFire();				
			}
			else
			{
				FireRotation = Rotator(HitNormal);
				FireRotation.Roll = 0;
				FireRotation.Pitch = 0;
				StartFireAtBulletEntry(HitLocation, FireRotation);
			}
		}
		// End:0xFF
		if(__NFUN_148__(__NFUN_340__(SourceActor, none), SourceActor.bIsPawn))
		{
			Instigator = Pawn(SourceActor);
		}
	}
	return super(KarmaActor).TraceFireHit(SourceActor, TraceDamageType, SourceTraceOrigin, HitLocation, HitNormal, HitBoneName, bExtentTrace);
	return;
}

event TakeDamage(Pawn InstigatorIn, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	// End:0x17
	if(__NFUN_340__(InstigatorIn, none))
	{
		Instigator = InstigatorIn;
	}
	// End:0x3D
	if(__NFUN_150__(__NFUN_150__(bDamageDisabled, bNoDamage), __NFUN_173__(int(HealthPrefab), int(0))))
	{
		return;
	}
	// End:0x48
	if(MPRoundNotInProgress())
	{
		return;
	}
	// End:0x92
	if(__NFUN_145__(bExplodeOnNextHit))
	{
		__NFUN_607__(__NFUN_226__(DelayedExplosionTime, DelayedExplosionVariance), false, 'Explode');
		bExplodeOnNextHit = true;
		DecoActivity(0, 'DelayedExplosionTimerStarted');
		// End:0x8F
		if(__NFUN_339__(BulletFire, none))
		{
			StartRadiusFire();
		}		
	}
	else
	{
		// End:0xAF
		if(__NFUN_150__(BeingThrown, __NFUN_340__(InstigatorIn, none)))
		{
			CriticalDamage();
		}
	}
	return;
}

event bool CausedPhysicsImpactDamage(float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, Pawn Instigator, KarmaActor DamagedActor)
{
	// End:0x26
	if(__NFUN_150__(__NFUN_150__(bDamageDisabled, bNoDamage), __NFUN_173__(int(HealthPrefab), int(0))))
	{
		return false;
	}
	// End:0x37
	if(BeingThrown)
	{
		CriticalDamage();
		return true;
	}
	return false;
	return;
}

event KImpact(name SelfBoneName, KarmaActor Other, name OtherBoneName, Vector Position, Vector ImpactVelocity, Vector ImpactNormal)
{
	// End:0x4A
	if(__NFUN_150__(__NFUN_150__(bDamageDisabled, bNoDamage), __NFUN_173__(int(HealthPrefab), int(0))))
	{
		super(dnDecoration).KImpact(SelfBoneName, Other, OtherBoneName, Position, ImpactVelocity, ImpactNormal);
		return;
	}
	// End:0x59
	if(BeingThrown)
	{
		CriticalDamage();
	}
	super(dnDecoration).KImpact(SelfBoneName, Other, OtherBoneName, Position, ImpactVelocity, ImpactNormal);
	return;
}

noexport simulated delegate StartRadiusFire()
{
	local Vector SpawnLoc;
	local Rotator FireRotation;

	FireRotation.Pitch = 16384;
	FireRotation = __NFUN_269__(FireRotation, Rotation);
	SpawnLoc = __NFUN_238__(Location, __NFUN_241__(__NFUN_232__(0, 0, __NFUN_195__(RadiusFireHeight, CollisionHeight)), Rotation));
	StartFireAtBulletEntry(SpawnLoc, FireRotation);
	return;
}

simulated function StartFireAtBulletEntry(Vector BulletEntry, Rotator FireRotation)
{
	// End:0x63
	if(__NFUN_148__(__NFUN_145__(DecorationIsDead()), __NFUN_339__(BulletFire, none)))
	{
		BulletFire = __NFUN_615__(BulletFireClass,,, BulletEntry, FireRotation);
		BulletFire.MountType = 0;
		BulletFire.__NFUN_635__(self, false, false, true);
		FindAndPlaySound(OnFireSoundName, 1);
	}
	return;
}

simulated function StopBulletFire()
{
	local int i;

	// End:0x2A
	if(__NFUN_340__(BulletFire, none))
	{
		__NFUN_701__(none);
		BulletFire.__NFUN_1054__();
		BulletFire.__NFUN_614__();
	}
	return;
}

final function Explode()
{
	CriticalDamage();
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(ExplosionLightClass);
	PrecacheIndex.__NFUN_1266__(BulletFireClass);
	PrecacheIndex.__NFUN_1266__(class'dnExplosionDecalBomb');
	PrecacheIndex.__NFUN_1277__(VoicePack, OnFireSoundName);
	return;
}

defaultproperties
{
	DelayedExplosionTime=3
	DelayedExplosionVariance=2
	RadiusFireHeight=0.75
	BulletFireClass='p_Decorations.Oil_Fire.OilFire_Main'
	ExplosionLightClass='dnGame.dnExplosionLight_RPG'
	OnFireSoundName=BarrelFire
	begin object name=MP_Barrel_Unstable_NoMotion class=MotionPrefab
		bNoMotion=true
	object end
	// Reference: MotionPrefab'Barrels_Generic_Unstable.MP_Barrel_Unstable_NoMotion'
	MP_NoMotion=MP_Barrel_Unstable_NoMotion
	DecoActivities_Default=/* Array type was not detected. */
	X=/* Unknown default property type! */
	
/* Exception thrown while deserializing Engine
System.ArgumentOutOfRangeException: Length cannot be less than zero.
Parameter name: length
   at System.String.Substring(Int32 startIndex, Int32 length)
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in E:\SteamLibrary\steamapps\common\DukeNukem\Tools\UnrealscriptDecompiler\Core\Classes\UDefaultProperty.cs:line 578 */
}