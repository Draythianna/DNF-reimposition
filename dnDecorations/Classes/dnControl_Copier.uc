/*******************************************************************************
 * dnControl_Copier generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControl_Copier extends dnControl_Chair
	collapsecategories;

const STATE_INDEX_USEABLE = 0;
const STATE_INDEX_LIDOPERATIONMODE = 6;

var() noexport int TimesToOpenBeforeAssCopy "Pretty much what it says." "Number of times the player must open the" "copier before Duke hops up on top of it.";
var bool bLidOpen;
var bool bMakingCopy;
var int NumTimesOpened;
var dnControlHelper_Copier_PrintedPage PrintingPage;
var dnControlHelper_Copier_PrintedPage PrintedPage;
var MaterialEx BrokenMat;
var localized string MakeCopyPhrase;

final simulated function MakeCopy()
{
	local int NumMountedActors;

	NumMountedActors = string(MountedActorList);
	bMakingCopy = true;
	DecoActivity(0, 'MakingCopy');
	// End:0x50
	if(__NFUN_170__(string(MountedActorList), NumMountedActors))
	{
		PrintingPage = dnControlHelper_Copier_PrintedPage(MountedActorList[__NFUN_166__(string(MountedActorList), 1)].MountedActor);
	}
	// End:0x62
	if(__NFUN_340__(PrintingPage, none))
	{
		PrintedPageSpawned();
	}
	// End:0x8A
	if(__NFUN_340__(DukePlayer(User), none))
	{
		DukePlayer(User).GivePermanentEgoCapAward(7);
	}
	return;
}

final function PrintedPageSpawned()
{
	// End:0x0E
	if(__NFUN_339__(PrintingPage, none))
	{
		return;
	}
	// End:0x3E
	if(__NFUN_340__(PrintedPage, none))
	{
		PrintedPage.bGrabbable = false;
		PrintedPage.bNoDamage = true;
	}
	PrintingPage.SlideOutOfCopier();
	return;
}

simulated function FinishMakeCopy()
{
	bMakingCopy = false;
	// End:0x37
	if(__NFUN_340__(PrintedPage, none))
	{
		PrintedPage.bSpawnOnDestroyed = false;
		PrintedPage.CriticalDamage(true);
	}
	PrintedPage = PrintingPage;
	PrintingPage = none;
	// End:0x5D
	if(__NFUN_201__(Health, float(0)))
	{
		bUsable = true;
	}
	DecoActivity(0, 'LidUsed');
	return;
}

function SetLidState()
{
	SetState(6);
	return;
}

final function LidOpened()
{
	bLidOpen = true;
	__NFUN_184__(NumTimesOpened);
	UsePhrase = MakeCopyPhrase;
	// End:0x30
	if(__NFUN_172__(NumTimesOpened, TimesToOpenBeforeAssCopy))
	{
		SetState(0);
	}
	return;
}

final function LidClosed()
{
	UsePhrase = default.UsePhrase;
	bLidOpen = false;
	return;
}

simulated function bool CanBeUsedBy(Pawn User)
{
	// End:0x13
	if(__NFUN_150__(__NFUN_704__(), bMakingCopy))
	{
		return false;
	}
	return super.CanBeUsedBy(User);
	return;
}

simulated event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	// End:0x39
	if(__NFUN_357__(DamageType, class'ExplosionDamage'))
	{
		super(dnControl).TakeDamage(Instigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
	}
	return;
}

simulated event Destroyed()
{
	bUsable = false;
	__NFUN_741__(1, BrokenMat);
	super(dnUsableSomething).Destroyed();
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1269__(BrokenMat);
	return;
}

state() LidOperation
{
	event Used(Actor Other, Pawn EventInstigator)
	{
		DecoActivity(0, 'LidUsed');
		return;
	}
	stop;
}

state() Useable
{
	function BeginState()
	{
		super(Object).BeginState();
		// End:0x1C
		if(__NFUN_173__(NumTimesOpened, 0))
		{
			SetState(6);			
		}
		else
		{
			NumTimesOpened = 0;
		}
		return;
	}

	event Used(Actor Other, Pawn EventInstigator)
	{
		// End:0x1B
		if(__NFUN_145__(bLidOpen))
		{
			DecoActivity(0, 'NormalUsed');			
		}
		else
		{
			// End:0x32
			if(__NFUN_339__(User, none))
			{
				AttachPawn(EventInstigator);
			}
		}
		return;
	}
	stop;
}

state() idle
{
	simulated function InteractUser(Pawn PUser)
	{
		// End:0x16
		if(__NFUN_339__(User, PUser))
		{
			MakeCopy();
		}
		return;
	}

	simulated function AnimCallback_UserAnimEnd()
	{
		super(dnControl).AnimCallback_UserAnimEnd();
		DetachPawnSuccess(false);
		return;
	}

	event Used(Actor Other, Pawn EventInstigator)
	{
		return;
	}
	stop;
}

defaultproperties
{
	TimesToOpenBeforeAssCopy=1
	BrokenMat='mt_skins4.Copier.Copier_HV_BShade_BRKN'
	MakeCopyPhrase="<?int?dnDecorations.dnControl_Copier.MakeCopyPhrase?>"
	States(0)=(StateName=Useable,OutEvents=none,Transitions=((ControlEvent=3,CustomName=None,NewState=AttachUserLERP)),UserAnimName=None,UserSoundName=None,MyAnim=(Flags=(bLoop=false,bNoLoopEnd=false,bFade=false,bNoRemove=false,bLoopMovement=false,bInterrupt=false,bEarlyEnd=false,bAdjustStart=false),Animation=None,Channel=0,Rate=0,TweenTime=0),MySound=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=none,SlotPriority=0,VolumePrefab=0,Slots=none,Volume=0,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=false,bNoFilter=false,bNoOcclude=false,bNoAIHear=false,bNoScale=false,bSpoken=false,bPlayThroughListener=false,bNoDoppler=false,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=0,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0))
	States(1)=(Offset=0,Delay=0,SlotIndex=0,ForcedIndex=0,SoundFadeInfo=(FadeInDuration=0,FadeOutStartTime=0,FadeOutDuration=0,FadeInEndCallback=None,FadeOutEndCallback=None),SoundEndCallback=None,PlayedSounds=none,Filters=none)
	States(2)=(MySoundName=None,SubAnims=none)
	States(3)=(StateName=AttachUserLERP,OutEvents=none,Transitions=((ControlEvent=5,CustomName=None,NewState=AttachUserAnim)),UserAnimName=None,UserSoundName=None,MyAnim=(Flags=(bLoop=false,bNoLoopEnd=false,bFade=false,bNoRemove=false,bLoopMovement=false,bInterrupt=false,bEarlyEnd=false,bAdjustStart=false),Animation=None,Channel=0,Rate=0,TweenTime=0),MySound=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=none,SlotPriority=0,VolumePrefab=0,Slots=none,Volume=0,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=false,bNoFilter=false,bNoOcclude=false,bNoAIHear=false,bNoScale=false,bSpoken=false,bPlayThroughListener=false,bNoDoppler=false,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=0,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0))
	States(4)=(Offset=0,Delay=0,SlotIndex=0,ForcedIndex=0,SoundFadeInfo=(FadeInDuration=0,FadeOutStartTime=0,FadeOutDuration=0,FadeInEndCallback=None,FadeOutEndCallback=None),SoundEndCallback=None,PlayedSounds=none,Filters=none)
	States(5)=(MySoundName=None,SubAnims=none)
	States(6)=(StateName=AttachUserAnim,OutEvents=none,Transitions=((ControlEvent=7,CustomName=None,NewState=idle)),UserAnimName=CopyMachine_MountCopier,UserSoundName=None,MyAnim=(Flags=(bLoop=false,bNoLoopEnd=false,bFade=false,bNoRemove=false,bLoopMovement=false,bInterrupt=false,bEarlyEnd=false,bAdjustStart=false),Animation=None,Channel=0,Rate=0,TweenTime=0),MySound=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=none,SlotPriority=0,VolumePrefab=0,Slots=none,Volume=0,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=false,bNoFilter=false,bNoOcclude=false,bNoAIHear=false,bNoScale=false,bSpoken=false,bPlayThroughListener=false,bNoDoppler=false,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=0,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0))
	InitStateIndex=6
	InterpolationInTime=0.3
	InterpolationOutTime=0.3
	UserMountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=true,bDontScaleByDrawScale=true,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=true,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.291717E-41,Y=2.802835E-17,Z=0),Z=-24)
	ViewingAngleThreshold=-2
	HeadAimMinOffset=(Pitch=-262135291,Yaw=571146239,Roll=-4000)
	HeadAimMaxOffset=(Pitch=-262135291,Yaw=571146239,Roll=2000)
	AnimTriggers(0)=(AnimEvent=None,AnimFunction=LidOpened,AnimActivities=none,TestAnims=(copier_open),TestChannels=none)
	AnimTriggers(1)=(AnimEvent=None,AnimFunction=LidClosed,AnimActivities=none,TestAnims=(copier_close),TestChannels=none)
	DecoActivities_Default(0)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(LidUsed),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=('dnGame.DecoActivityDeclarations.DAR_Anim_NoneAllowed'),ActivityElements=(DecoActivities_Animation'dnControl_Copier.DA_Anim_Copier_Open',DecoActivities_Sound'dnControl_Copier.DA_Sound_Copier_Open'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0)),(ActivityRules=('dnGame.DecoActivityDeclarations.DAR_Anim_NoneAllowed'),ActivityElements=(DecoActivities_Animation'dnControl_Copier.DA_Anim_Copier_Close',DecoActivities_Sound'dnControl_Copier.DA_Sound_Copier_Close'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
	DecoActivities_Default(1)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(MakingCopy),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=none,ActivityElements=(DecoActivities_Sound'dnControl_Copier.DA_Sound_Copier_MakeCopy','dnGame.DecoActivityDeclarations.DA_Interact_bUsable_Disable',DecoActivities_Spawn'dnControl_Copier.DA_Spawn_CreateCopy'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
	bSurviveDeath=true
	HealthPrefab=5
	UsePhrase="<?int?dnDecorations.dnControl_Copier.UsePhrase?>"
	Health=40
	HealthCap=40
	bTraceShootable=true
	bBlockActors=true
	bBlockPlayers=true
	bBlockKarma=true
	bAcceptsProjectors=false
	bAcceptsDecalProjectors=false
	bDirectional=true
	bCollideWorld=true
	CollisionRadius=18
	CollisionHeight=24
	Mass=55
	DrawType=2
	Mesh='c_generic.Copier'
}