/*******************************************************************************
 * dnControl_LiftControl generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControl_LiftControl extends dnControl
	collapsecategories;

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1277__(VoicePack, 'LiftControl_Button');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'LiftControl_Switch');
	return;
}

state() idle
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		SetHUDKeyInfoState(HUD, 0, true, 9);
		SetHUDKeyInfoState(HUD, 1, true, 10);
		SetHUDKeyInfoState(HUD, 2, true, 7);
		SetHUDKeyInfoState(HUD, 3, true, 8);
		return;
	}
	stop;
}

state UpBaseState
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() PressUp extends UpBaseState
{
	k2call simulated function Press()
	{
		FindAndPlaySound('LiftControl_Button', 1);
		return;
	}
	stop;
}

state() HoldUp extends UpBaseState
{	stop;
}

state() SmoothReleaseUp extends UpBaseState
{	stop;
}

state() ReleaseUp extends idle
{	stop;
}

state DownBaseState
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() PressDown extends DownBaseState
{
	k2call simulated function Press()
	{
		FindAndPlaySound('LiftControl_Button', 1);
		return;
	}
	stop;
}

state() HoldDown extends DownBaseState
{	stop;
}

state() SmoothReleaseDown extends DownBaseState
{	stop;
}

state() ReleaseDown extends idle
{	stop;
}

state LeftBaseState
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() PressLeft extends LeftBaseState
{
	k2call simulated function Press()
	{
		FindAndPlaySound('LiftControl_Switch', 1);
		return;
	}
	stop;
}

state() HoldLeft extends LeftBaseState
{	stop;
}

state() SmoothReleaseLeft extends LeftBaseState
{	stop;
}

state() ReleaseLeft extends idle
{	stop;
}

state RightBaseState
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() PressRight extends RightBaseState
{
	k2call simulated function Press()
	{
		FindAndPlaySound('LiftControl_Switch', 1);
		return;
	}
	stop;
}

state() HoldRight extends RightBaseState
{	stop;
}

state() SmoothReleaseRight extends RightBaseState
{	stop;
}

state() ReleaseRight extends idle
{	stop;
}

defaultproperties
{
	States=/* Array type was not detected. */
}