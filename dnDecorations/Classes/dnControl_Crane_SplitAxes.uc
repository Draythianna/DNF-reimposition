/*******************************************************************************
 * dnControl_Crane_SplitAxes generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControl_Crane_SplitAxes extends dnControl_Crane
	collapsecategories;

state() idle
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		super.UsableSomethingQueryInteractKeyInfoState(HUD);
		SetHUDKeyInfoState(HUD, 4, true, 13);
		SetHUDKeyInfoState(HUD, 5, true, 29);
		return;
	}
	stop;
}

state CraneReleaseStateBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		super.UsableSomethingQueryInteractKeyInfoState(HUD);
		SetHUDKeyInfoState(HUD, 4, true, 13);
		SetHUDKeyInfoState(HUD, 5, true, 29);
		return;
	}
	stop;
}

state CraneSmoothReleaseStateBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		super.UsableSomethingQueryInteractKeyInfoState(HUD);
		SetHUDKeyInfoState(HUD, 4, true, 13);
		SetHUDKeyInfoState(HUD, 5, true, 29);
		return;
	}
	stop;
}

state() PressForward extends CranePressStateBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() HoldForward
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() ReleaseForward extends CraneReleaseStateBase
{	stop;
}

state() SmoothReleaseForward extends CraneSmoothReleaseStateBase
{	stop;
}

state() PressBack extends CranePressStateBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() HoldBack
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() ReleaseBack extends CraneReleaseStateBase
{	stop;
}

state() SmoothReleaseBack extends CraneSmoothReleaseStateBase
{	stop;
}

state() PressUp
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() HoldUp
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() PressDown
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() HoldDown
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}
