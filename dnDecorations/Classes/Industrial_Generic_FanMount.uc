/*******************************************************************************
 * Industrial_Generic_FanMount generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Industrial_Generic_FanMount extends Industrial_Generic
	abstract
	collapsecategories;

var() noexport float FanOnSpeed "Unreal units per second to spin (65535 = 1 turn per second)";
var() noexport float FanRampUpTime "Time it takes to ramp up to full speed.";
var() noexport float FanRampDownTime "Time it takes to ramp down to full speed.";
var() noexport Sound FanOnSound "Sound to play when the fan is turned on.";
var() noexport Sound FanOffSound "Sound to play when the fan is turned off.";
var Industrial_Generic_Fan_Mounted MyFan;

function PostVerifySelf()
{
	super(dnDecoration).PostVerifySelf();
	FanRampUpTime = __NFUN_225__(1E-05, FanRampUpTime);
	FanRampDownTime = __NFUN_225__(1E-05, FanRampDownTime);
	// End:0x7C
	foreach __NFUN_747__(class'Industrial_Generic_Fan_Mounted', MyFan,, true)
	{
		// End:0x7B
		if(__NFUN_339__(MyFan.Owner, self))
		{
			MyFan.TurnOn(FanOnSpeed, __NFUN_196__(FanOnSpeed, FanRampUpTime), FanOnSound);
			// End:0x7C
			break;
		}		
	}	
	return;
}

event Trigger(Actor Other, Pawn EventInstigator)
{
	super(dnDecoration).Trigger(Other, EventInstigator);
	// End:0x1D
	if(__NFUN_145__(CanTrigger()))
	{
		return;
	}
	// End:0x8B
	if(__NFUN_340__(MyFan, none))
	{
		// End:0x65
		if(MyFan.bCurrentlyOn)
		{
			MyFan.TurnOff(0, __NFUN_196__(FanOnSpeed, FanRampDownTime), FanOffSound);			
		}
		else
		{
			MyFan.TurnOn(FanOnSpeed, __NFUN_196__(FanOnSpeed, FanRampUpTime), FanOnSound);
		}
	}
	return;
}

function ForcePowerOn()
{
	super(dnDecoration).ForcePowerOn();
	// End:0x4D
	if(__NFUN_340__(MyFan, none))
	{
		// End:0x4D
		if(__NFUN_145__(MyFan.bCurrentlyOn))
		{
			MyFan.TurnOn(FanOnSpeed, __NFUN_196__(FanOnSpeed, FanRampUpTime), FanOnSound);
		}
	}
	return;
}

function ForcePowerOff()
{
	super(dnDecoration).ForcePowerOff();
	// End:0x4B
	if(__NFUN_340__(MyFan, none))
	{
		// End:0x4B
		if(MyFan.bCurrentlyOn)
		{
			MyFan.TurnOff(0, __NFUN_196__(FanOnSpeed, FanRampDownTime), FanOffSound);
		}
	}
	return;
}

function HitByEMP(optional float EMPTime, optional Pawn Instigator)
{
	// End:0x0E
	if(__NFUN_339__(MyFan, none))
	{
		return;
	}
	bPoweredBeforeEMP = MyFan.bCurrentlyOn;
	super(dnDecoration).HitByEMP(EMPTime, Instigator);
	return;
}

function Destroyed()
{
	super(dnDecoration).Destroyed();
	// End:0x38
	if(__NFUN_340__(MyFan, none))
	{
		MyFan.TurnOff(0, __NFUN_196__(FanOnSpeed, FanRampDownTime), FanOffSound);
	}
	return;
}

defaultproperties
{
	FanOnSpeed=131072
	FanRampUpTime=3
	FanRampDownTime=6
	FanOnSound='a_ambient.Fans.BigFan04_StartRun'
	FanOffSound='a_ambient.Fans.BigFan04_Stop'
	bSurviveDeath=true
	FlickerLight=(FlickerLightActor=none,FlickerLightExActor=none,bUseFlickerLight=true,bUseFlickerLightEx=true,bInitialEffect=true,bInitialEffectOnly=false,FlickerLightMounting=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),MountOriginVariance=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	DestroyedActivities=/* Array type was not detected. */
	DeskFan1_brkn_off_diff=192152321
	Z=1.860634E-37
}