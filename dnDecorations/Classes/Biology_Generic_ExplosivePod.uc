/*******************************************************************************
 * Biology_Generic_ExplosivePod generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Biology_Generic_ExplosivePod extends Biology_Generic
	dependson(Biology_Generic_ExplosivePod_Spawner);

var class<dnExplosionLight> ExplosionLightClass;
var Biology_Generic_ExplosivePod_Spawner Spawner;
var bool bSpawned;
var() float SpawnInTime;

simulated function Destroyed()
{
	super(dnDecoration).Destroyed();
	// End:0x23
	if(__NFUN_340__(Spawner, none))
	{
		Spawner.BallGrabbed(self);
	}
	return;
}

simulated function SpawnOnDestroyedActivity()
{
	super(RenderActor).SpawnOnDestroyedActivity();
	class'DecalBomb'.static.StaticDeploy(class'dnExplosionDecalBomb', Location, Rotation, self, self);
	return;
}

simulated event PostVerifySelf()
{
	bSpawned = true;
	__NFUN_591__(0.1);
	bTraceShootable = false;
	TickStyle = 2;
	Spawner = Biology_Generic_ExplosivePod_Spawner(Owner);
	super(dnDecoration).PostVerifySelf();
	return;
}

simulated function Grabbed(Pawn Grabber)
{
	// End:0x1D
	if(__NFUN_340__(Spawner, none))
	{
		Spawner.BallGrabbed(self);
	}
	__NFUN_642__(18);
	super(dnDecoration).Grabbed(Grabber);
	return;
}

simulated function UnGrabbed(Pawn Grabber, bool Thrown)
{
	BeingThrown = Thrown;
	// End:0x24
	if(__NFUN_340__(Grabber, none))
	{
		Instigator = Grabber;
	}
	super(dnDecoration).UnGrabbed(Grabber, Thrown);
	return;
}

function StartTelekinesis(Pawn TKOwner)
{
	// End:0x1D
	if(__NFUN_340__(Spawner, none))
	{
		Spawner.BallGrabbed(self);
	}
	bTraceShootable = false;
	bCanExistOutOfWorld = true;
	__NFUN_642__(18);
	super(InteractiveActor).StartTelekinesis(TKOwner);
	return;
}

function TelekineticThrow(Vector Vel, bool bConstrain)
{
	super(InteractiveActor).TelekineticThrow(Vel, bConstrain);
	__NFUN_607__(0.1, false, 'TKThrowDamageEnable');
	return;
}

final function TKThrowDamageEnable()
{
	BeingThrown = true;
	return;
}

function StopTelekinesis()
{
	super(InteractiveActor).StopTelekinesis();
	bCanExistOutOfWorld = false;
	return;
}

function ThrowLanded()
{
	super(InteractiveActor).ThrowLanded();
	// End:0x22
	if(__NFUN_150__(__NFUN_145__(UnderTelekineticControl), BeingTelekineticThrown))
	{
		CriticalDamage();
	}
	return;
}

simulated event Tick(float DeltaSeconds)
{
	super(Actor).Tick(DeltaSeconds);
	// End:0x45
	if(__NFUN_148__(bSpawned, __NFUN_200__(DrawScale, 1)))
	{
		__NFUN_591__(__NFUN_198__(DrawScale, __NFUN_195__(__NFUN_196__(DeltaSeconds, SpawnInTime), SpawnInTime)));		
	}
	else
	{
		// End:0x86
		if(__NFUN_148__(bSpawned, __NFUN_203__(DrawScale, 1)))
		{
			__NFUN_591__(1);
			bSpawned = false;
			bTraceShootable = true;
			TickStyle = 0;
			SetTelekineticable(true);
		}
	}
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1266__(class'dnExplosionDecalBomb');
	return;
}

defaultproperties
{
	ExplosionLightClass='dnGame.dnExplosionLight_Barrel'
	SpawnInTime=2
	DestroyedActivities=/* Array type was not detected. */
	HealthPrefab=1
	bGrabbable=true
	ThrowPhysics=18
	GrabInfo=(bCanDuckWhileHeld=true,MountItemOverride=mount_handright,MountOrigin=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	SpawnOnDestroyedSimple=/* Array type was not detected. */
	Z=/* Array type was not detected. */
	bAbsoluteRotation=false
	Scale=0
	BoneName=None
	Location=(X=1.291717E-41,Y=2.797242E-17,Z=0)
	Rotation=(Pitch=8709,Yaw=571080704,Roll=0)
	Effect='p_Decorations.BarrelExplosion.Barrel_Explosion_Spawner'
}