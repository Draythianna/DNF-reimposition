/*******************************************************************************
 * Settings_Bathroom_Sinks generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Settings_Bathroom_Sinks extends Settings_Bathroom
	abstract
	collapsecategories;

var() noexport float WaterRateFill "Units per second the water fills at.";
var() noexport float WaterRateDrain "Units per second the water drains at.";
var() noexport float WaterPauseFill "Small amount of time to pause before changing the water level (gives the stream from the faucet the chance to match up visually.";
var() noexport SRange WaterZRange "Height of the water stages. Max = filled, Min = drained.";
var() noexport name WaterBone "Name of the water surface bone to control.";
var float WaterPauseFillTimer;
var Vector WaterPosition;
var bool bFluidFlowing;

event PostBeginPlay()
{
	WaterPosition.Z = WaterZRange.Min;
	__NFUN_397__('TurnedOn');
	super(dnDecoration).PostBeginPlay();
	return;
}

event PreGameInit()
{
	// End:0x1E
	if(__NFUN_341__(__NFUN_399__(), 'TurnedOn'))
	{
		DecoActivity(0, 'TurnOn');		
	}
	else
	{
		DecoActivity(0, 'TurnOff');
	}
	super(dnDecoration).PreGameInit();
	return;
}

function bool VerifySelf()
{
	// End:0x37
	if(__NFUN_339__(__NFUN_568__(), none))
	{
		InvalidAlert(__NFUN_302__(string(self), " does not have a MeshInstance."));
		return false;
	}
	return super(Actor).VerifySelf();
	return;
}

function StartSelfOff()
{
	WaterPosition.Z = WaterZRange.Max;
	__NFUN_397__('TurnedOff');
	return;
}

function DecoEndAnim()
{
	super(dnDecoration).DecoEndAnim();
	AttemptTickDisable();
	return;
}

final function StartFluidFlowing(name Direction)
{
	TickStyle = 3;
	bFluidFlowing = true;
	WaterPauseFillTimer = 0;
	DecoActivity(0, Direction);
	return;
}

event Used(Actor Other, Pawn EventInstigator)
{
	Instigator = EventInstigator;
	// End:0x2C
	if(__NFUN_340__(EventInstigator, none))
	{
		EventInstigator.HandQuickAction('HandQuickAction_Switch_PushButton');
	}
	super(dnDecoration).Used(Other, EventInstigator);
	return;
}

final function StopFluidFlowing()
{
	bFluidFlowing = false;
	AttemptTickDisable();
	return;
}

final function AttemptTickDisable()
{
	// End:0x32
	if(__NFUN_148__(__NFUN_145__(MeshInstance.__NFUN_545__()), __NFUN_145__(bFluidFlowing)))
	{
		bNoNativeTick = true;
		TickStyle = 0;		
	}
	else
	{
		bNoNativeTick = false;
		TickStyle = 3;
	}
	return;
}

function SinkUsed()
{
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1281__('HandQuickAction_Switch_PushButton');
	return;
}

state TurnedOn
{
	function BeginState()
	{
		StartFluidFlowing('TurnOn');
		return;
	}

	function SinkUsed()
	{
		__NFUN_397__('TurnedOff');
		return;
	}

	event Tick(float DeltaSeconds)
	{
		global.Tick(DeltaSeconds);
		// End:0x29
		if(__NFUN_200__(WaterPauseFillTimer, WaterPauseFill))
		{
			__NFUN_209__(WaterPauseFillTimer, DeltaSeconds);			
		}
		else
		{
			WaterPosition.Z = __NFUN_227__(__NFUN_198__(WaterPosition.Z, __NFUN_195__(WaterRateFill, DeltaSeconds)), WaterZRange.Min, WaterZRange.Max);
		}
		MeshInstance.__NFUN_537__(WaterBone, WaterPosition, false);
		// End:0x99
		if(__NFUN_203__(WaterPosition.Z, WaterZRange.Max))
		{
			StopFluidFlowing();
		}
		return;
	}
	stop;
}

state TurnedOff
{
	function BeginState()
	{
		StartFluidFlowing('TurnOff');
		return;
	}

	function SinkUsed()
	{
		__NFUN_397__('TurnedOn');
		return;
	}

	event Tick(float DeltaSeconds)
	{
		global.Tick(DeltaSeconds);
		WaterPosition.Z = __NFUN_227__(__NFUN_199__(WaterPosition.Z, __NFUN_195__(WaterRateDrain, DeltaSeconds)), WaterZRange.Min, WaterZRange.Max);
		MeshInstance.__NFUN_537__(WaterBone, WaterPosition, false);
		// End:0x7B
		if(__NFUN_202__(WaterPosition.Z, WaterZRange.Min))
		{
			StopFluidFlowing();
		}
		return;
	}
	stop;
}

defaultproperties
{
	WaterBone=Water
}