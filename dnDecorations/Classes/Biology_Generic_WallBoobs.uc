/*******************************************************************************
 * Biology_Generic_WallBoobs generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Biology_Generic_WallBoobs extends Biology_Generic
	collapsecategories;

var() float InflateScale1;
var() float InflateScale2;
var() float InflateScale3;
var() SoftParticleSystem Milk1;
var() SoftParticleSystem Milk2;
var() SoftParticleSystem Milk3;
var class<dnScreenSplatters> ScreenSplatterClass;

function PostVerifySelf()
{
	SpawnMountedParticleSystems();
	super(dnDecoration).PostVerifySelf();
	DecoActivity(0, 'idle');
	// End:0x75
	if(__NFUN_145__(IsMP()))
	{
		Milk1 = SoftParticleSystem(FindMountedActor('Milk1', class'SoftParticleSystem'));
		Milk2 = SoftParticleSystem(FindMountedActor('Milk2', class'SoftParticleSystem'));
		Milk3 = SoftParticleSystem(FindMountedActor('Milk3', class'SoftParticleSystem'));
	}
	return;
}

function SpawnMountedParticleSystems()
{
	local int Index, i;

	// End:0x0B
	if(IsMP())
	{
		return;
	}
	Index = MountOnSpawn.Add(1);
	MountOnSpawn[Index].SpawnClass = class'Boobies_Milk_Main';
	MountOnSpawn[Index].MountPrefab.MountType = 2;
	MountOnSpawn[Index].MountPrefab.MountAngles = __NFUN_265__(0, 0, 0);
	MountOnSpawn[Index].MountPrefab.MountMeshItem = 'mount_nipple_1';
	MountOnSpawn[Index].MountPrefab.ForceTag = __NFUN_343__("Milk1");
	Index = MountOnSpawn.Add(1);
	MountOnSpawn[Index].SpawnClass = class'Boobies_Milk_Main';
	MountOnSpawn[Index].MountPrefab.MountType = 2;
	MountOnSpawn[Index].MountPrefab.MountAngles = __NFUN_265__(0, 0, 0);
	MountOnSpawn[Index].MountPrefab.MountMeshItem = 'mount_nipple_2';
	MountOnSpawn[Index].MountPrefab.ForceTag = __NFUN_343__("Milk2");
	Index = MountOnSpawn.Add(1);
	MountOnSpawn[Index].SpawnClass = class'Boobies_Milk_Main';
	MountOnSpawn[Index].MountPrefab.MountType = 2;
	MountOnSpawn[Index].MountPrefab.MountAngles = __NFUN_265__(0, 0, 0);
	MountOnSpawn[Index].MountPrefab.MountMeshItem = 'mount_nipple_3';
	MountOnSpawn[Index].MountPrefab.ForceTag = __NFUN_343__("Milk3");
	return;
}

simulated event bool OnEvalBonesHelper()
{
	MeshInstance.__NFUN_539__('inflate_1', __NFUN_232__(InflateScale1, InflateScale1, InflateScale1), true);
	MeshInstance.__NFUN_539__('inflate_2', __NFUN_232__(InflateScale2, InflateScale2, InflateScale2), true);
	MeshInstance.__NFUN_539__('inflate_3', __NFUN_232__(InflateScale3, InflateScale3, InflateScale3), true);
	return true;
	return;
}

event Used(Actor Other, Pawn EventInstigator)
{
	super(dnDecoration).Used(Other, EventInstigator);
	// End:0x2C
	if(__NFUN_342__(EventInstigator.LastQuickAction, 'None'))
	{
		return;
	}
	// End:0x5F
	if(EventInstigator.bIsPlayerPawn)
	{
		Instigator = EventInstigator;
		EventInstigator.FindSoundAndSpeak('GotWallBoobs');
	}
	// End:0x91
	if(__NFUN_200__(__NFUN_222__(), 0.5))
	{
		EventInstigator.HandQuickAction('HandQuickAction_SlapWallBoobs_Right');
		__NFUN_605__(0.25, false, 'HitRight');		
	}
	else
	{
		EventInstigator.HandQuickAction('HandQuickAction_SlapWallBoobs_Left');
		__NFUN_605__(0.25, false, 'HitLeft');
	}
	__NFUN_605__(0.25, false, 'Slapped');
	return;
}

final function HitCommon()
{
	FindAndPlaySound('WallBoob_Impacts');
	MilkEffects();
	return;
}

final function HitLeft()
{
	DecoActivity(0, 'DamageLeft');
	HitCommon();
	return;
}

final function HitRight()
{
	DecoActivity(0, 'DamageRight');
	HitCommon();
	return;
}

final function MilkEffects()
{
	local dnScreenSplatters ScreenSplatter;

	// End:0x85
	if(__NFUN_145__(IsMP()))
	{
		Milk1.Trigger(self, none);
		Milk2.Trigger(self, none);
		Milk3.Trigger(self, none);
		ScreenSplatter = dnScreenSplatters(FindStaticActor(ScreenSplatterClass));
		// End:0x85
		if(__NFUN_340__(ScreenSplatter, none))
		{
			ScreenSplatter.__NFUN_645__(Location);
			ScreenSplatter.ExecuteEffect();
		}
	}
	return;
}

final function Slapped()
{
	// End:0x28
	if(__NFUN_340__(DukePlayer(Instigator), none))
	{
		DukePlayer(Instigator).GivePermanentEgoCapAward(20);
	}
	return;
}

event TakeDamage(Pawn DamageInstigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	local Vector X, Y, Z;
	local float Dir;

	// End:0x1E
	if(DamageInstigator.bIsPlayerPawn)
	{
		Instigator = DamageInstigator;
	}
	super(dnDecoration).TakeDamage(DamageInstigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
	__NFUN_279__(Rotation, X, Y, Z);
	Dir = __NFUN_244__(Y, DamageDirection);
	// End:0x88
	if(__NFUN_200__(Dir, 0))
	{
		HitLeft();		
	}
	else
	{
		HitRight();
	}
	MilkEffects();
	return;
}

simulated event AnimEndEx(SAnimEndInfo AnimEndInfo)
{
	super(dnDecoration).AnimEndEx(AnimEndInfo);
	// End:0x44
	if(__NFUN_150__(__NFUN_341__(AnimEndInfo.AnimName, 'hit_right'), __NFUN_341__(AnimEndInfo.AnimName, 'hit_left')))
	{
		DecoActivity(0, 'idle');
	}
	return;
}

simulated event bool ShouldPlayDamageSound(class<DamageType> DamageType)
{
	// End:0x12
	if(__NFUN_357__(DamageType, class'MeleeDamage'))
	{
		return false;
	}
	return super(Actor).ShouldPlayDamageSound(DamageType);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
	// End:0x44
	if(__NFUN_145__(PrecacheIndex.bIsMP))
	{
		PrecacheIndex.__NFUN_1266__(class'Boobies_Milk_Main');
		PrecacheIndex.__NFUN_1266__(ScreenSplatterClass);
	}
	// End:0x92
	if(bUsable)
	{
		PrecacheIndex.__NFUN_1277__(class'DukePlayer'.default.VoicePack, 'GotWallBoobs');
		PrecacheIndex.__NFUN_1281__('HandQuickAction_SlapWallBoobs_Right');
		PrecacheIndex.__NFUN_1281__('HandQuickAction_SlapWallBoobs_Left');
	}
	PrecacheIndex.__NFUN_1277__(VoicePack, 'WallBoob_Impacts');
	return;
}

defaultproperties
{
	InflateScale1=1
	InflateScale2=1
	InflateScale3=1
	ScreenSplatterClass='dnScreenSplatter_Pumpkin'
}