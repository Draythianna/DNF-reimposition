/*******************************************************************************
 * Electronics_Generic_CokeMachine_Door generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Electronics_Generic_CokeMachine_Door extends Electronics_Generic
	collapsecategories
	dependson(Electronics_Generic_CokeMachine);

var Electronics_Generic_CokeMachine MachineOwner;
var float TotalDamage;
var float MalfunctionDamage;
var float DislodgeDamage;
var bool bCanOpen;
var bool bCanMalfunction;

function PostVerifySelf()
{
	local int i;
	local Electronics_Generic_CokeMachine_Button Button;

	super(dnDecoration).PostVerifySelf();
	MachineOwner = Electronics_Generic_CokeMachine(Owner);
	i = 0;
	// End:0xA9
	foreach __NFUN_753__(class'Electronics_Generic_CokeMachine_Button', Button)
	{
		// End:0x6E
		if(__NFUN_340__(MachineOwner.ButtonMaterials[i], none))
		{
			Button.CanMaterial = MachineOwner.ButtonMaterials[i];
		}
		// End:0xA1
		if(__NFUN_340__(Button.CanMaterial, none))
		{
			Button.__NFUN_741__(0, Button.CanMaterial);
		}
		__NFUN_184__(i);		
	}	
	return;
}

function KarmaSetConstraintProperties(KConstraint ConstraintActor)
{
	local KAngularJointLimit AngularLimit;

	super(KarmaActor).KarmaSetConstraintProperties(ConstraintActor);
	// End:0x31
	if(__NFUN_340__(Owner, none))
	{
		ConstraintActor.KConstraintActor2 = KarmaActor(Owner);
	}
	AngularLimit = KAngularJointLimit(ConstraintActor);
	// End:0x4F
	if(__NFUN_339__(AngularLimit, none))
	{
		return;
	}
	AngularLimit.__NFUN_1106__(12384);
	AngularLimit.__NFUN_1107__(true, __NFUN_265__(AngularLimit.Rotation.Pitch, __NFUN_165__(AngularLimit.Rotation.Yaw, 12384), AngularLimit.Rotation.Roll));
	return;
}

event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	super(dnDecoration).TakeDamage(Instigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
	// End:0x72
	if(__NFUN_148__(bCanOpen, __NFUN_357__(DamageType, class'ExplosionDamage')))
	{
		bCanOpen = false;
		bCanMalfunction = false;
		__NFUN_642__(18);
		MachineOwner.DisableVend();
		ForceDoor();		
	}
	else
	{
		// End:0xBF
		if(__NFUN_148__(__NFUN_148__(bCanMalfunction, __NFUN_200__(TotalDamage, MalfunctionDamage)), __NFUN_203__(__NFUN_198__(TotalDamage, Damage), MalfunctionDamage)))
		{
			bCanMalfunction = false;
			MachineOwner.StartDestructionSpawn();			
		}
		else
		{
			__NFUN_209__(TotalDamage, Damage);
		}
	}
	return;
}

final function ForceDoor()
{
	DecoActivity(0, 'ImpulseDoor');
	return;
}

event Trigger(Actor Other, Pawn EventInstigator)
{
	super(dnDecoration).Trigger(Other, EventInstigator);
	ForceDoor();
	return;
}

defaultproperties
{
	MalfunctionDamage=50
	DislodgeDamage=75
	bCanOpen=true
	bCanMalfunction=true
	DecoActivities_Default(0)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(ImpulseDoor),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=none,ActivityElements=(DecoActivities_KarmaImpulse'Electronics_Generic_CokeMachine_Door.DA_KImpulse_Coke_Machine'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
	AutoConstraints(0)=(bConstraintDisabledOnDeath=false,bConstraintOnDeath=false,BoneName=None,ConstraintMounting=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.291717E-41,Y=2.813547E-17,Z=26),Z=0),MountOriginVariance=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	AutoConstraints(1)=(MountAngles=(Pitch=1073750533,Yaw=571080704,Roll=0),Roll=0)
	HealthPrefab=0
	MountOnSpawn(0)=(bSkipVerifySelf=false,SpawnClass='Electronics_Generic_CokeMachine_Button',SpawnChance=0,MountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=1.291717E-41,Y=2.802684E-17,Z=-19),Z=5),MountOriginVariance=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	MountOnSpawn(1)=(MountAngles=(Pitch=8709,Yaw=571080704,Roll=0),Roll=0)
	MountOnSpawn(2)=(MountAnglesVariance=(Pitch=8709,Yaw=571080704,Roll=0),Roll=0)
	MountOnSpawn(3)=(MountType=0,DismountPhysics=0)
	MountOnSpawn(4)=(RenderObject=none,DrawScale=0)
	CollisionRadius=5
	CollisionHeight=53
	TickStyle=2
	StaticMesh='sm_class_decorations.VendingMachine.VendingMachineDoor'
}