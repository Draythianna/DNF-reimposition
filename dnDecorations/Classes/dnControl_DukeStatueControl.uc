/*******************************************************************************
 * dnControl_DukeStatueControl generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControl_DukeStatueControl extends dnControl
	collapsecategories;

final k2call function ButtonPressed()
{
	FindAndPlaySound('DukeControl_Button', 1);
	return;
}

final k2call function ButtonReleased()
{
	FindAndPlaySound('DukeControl_Button', 1);
	return;
}

simulated function CREvent_KeyChange(ControlRemapperEx CR, Pawn InputActor, Engine.Actor.EControlRemapperKeyType KeyType, Engine.Actor.EControlRemapperEventType EventType)
{
	// End:0x3F
	if(PlayerUser.__NFUN_994__())
	{
		// End:0x29
		if(__NFUN_173__(int(KeyType), int(8)))
		{
			KeyType = 9;			
		}
		else
		{
			// End:0x3F
			if(__NFUN_173__(int(KeyType), int(9)))
			{
				KeyType = 8;
			}
		}
	}
	super.CREvent_KeyChange(CR, InputActor, KeyType, EventType);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1277__(VoicePack, 'DukeControl_Button');
	return;
}

state() idle
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		SetHUDKeyInfoState(HUD, 2, true, 7);
		SetHUDKeyInfoState(HUD, 3, true, 8);
		SetHUDKeyInfoState(HUD, 0, true, 9);
		SetHUDKeyInfoState(HUD, 1, true, 10);
		// End:0x87
		if(__NFUN_149__(PlayerPawn(User).__NFUN_994__(), Level.__NFUN_1164__()))
		{
			SetHUDKeyInfoState(HUD, 7, true, 26);
			SetHUDKeyInfoState(HUD, 5, true, 27);			
		}
		else
		{
			SetHUDKeyInfoState(HUD, 5, true, 26);
			SetHUDKeyInfoState(HUD, 7, true, 27);
		}
		return;
	}
	stop;
}

state StopBaseState
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		SetHUDKeyInfoState(HUD, 2, true, 7);
		SetHUDKeyInfoState(HUD, 3, true, 8);
		SetHUDKeyInfoState(HUD, 0, true, 9);
		SetHUDKeyInfoState(HUD, 1, true, 10);
		// End:0x87
		if(__NFUN_149__(PlayerPawn(User).__NFUN_994__(), Level.__NFUN_1164__()))
		{
			SetHUDKeyInfoState(HUD, 7, true, 26);
			SetHUDKeyInfoState(HUD, 5, true, 27);			
		}
		else
		{
			SetHUDKeyInfoState(HUD, 5, true, 26);
			SetHUDKeyInfoState(HUD, 7, true, 27);
		}
		return;
	}
	stop;
}

state SpinRightBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state SpinRightStart extends SpinRightBase
{	stop;
}

state() SpinRight extends SpinRightBase
{	stop;
}

state SpinRightEarlyStop extends SpinRightBase
{	stop;
}

state SpinRightStop extends StopBaseState
{	stop;
}

state SpinLeftBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state SpinLeftStart extends SpinLeftBase
{	stop;
}

state() SpinLeft extends SpinLeftBase
{	stop;
}

state SpinLeftEarlyStop extends SpinLeftBase
{	stop;
}

state SpinLeftStop extends StopBaseState
{	stop;
}

state ArmUpBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state ArmUpStart extends ArmUpBase
{	stop;
}

state() ArmUp extends ArmUpBase
{	stop;
}

state ArmUpEarlyStop extends ArmUpBase
{	stop;
}

state ArmUpStop extends StopBaseState
{	stop;
}

state ArmDownBase
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state ArmDownStart extends ArmDownBase
{	stop;
}

state() ArmDown extends ArmDownBase
{	stop;
}

state ArmDownEarlyStop extends ArmDownBase
{	stop;
}

state ArmDownStop extends StopBaseState
{	stop;
}

state() Speak
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

state() AlienAttack
{
	simulated function UsableSomethingQueryInteractKeyInfoState(HUD HUD)
	{
		return;
	}
	stop;
}

defaultproperties
{
	States=/* Array type was not detected. */
}