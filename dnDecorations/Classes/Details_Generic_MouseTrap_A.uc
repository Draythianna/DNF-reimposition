/*******************************************************************************
 * Details_Generic_MouseTrap_A generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Details_Generic_MouseTrap_A extends Details_Generic
	collapsecategories;

var() noexport float TrapDamage "Amount of damage to issue to any Pawn coming into contact with the trap.";
var() noexport float TrapTimer "How long it takes for the trap to spring.";
var Pawn TrapSpringer;
var bool bTrapSprung;
var Details_Generic_MouseTrap_HingeBar_A HingeBar;
var Details_Generic_MouseTrap_Cheese Cheese;

function PostVerifySelf()
{
	super(dnDecoration).PostVerifySelf();
	HingeBar = Details_Generic_MouseTrap_HingeBar_A(FindMountedActor('HingeBar'));
	Cheese = Details_Generic_MouseTrap_Cheese(FindMountedActor('Cheese'));
	return;
}

event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
	super(dnDecoration).TakeDamage(Instigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
	SpringTrap();
	return;
}

event Bump(Actor Other)
{
	super(dnDecoration).Bump(Other);
	SpringTrap(Pawn(Other));
	return;
}

event KImpact(name SelfBoneName, KarmaActor Other, name OtherBoneName, Vector Position, Vector ImpactVelocity, Vector ImpactNormal)
{
	super(dnDecoration).KImpact(SelfBoneName, Other, OtherBoneName, Position, ImpactVelocity, ImpactNormal);
	SpringTrap(Pawn(Other));
	return;
}

event Used(Actor Other, Pawn EventInstigator)
{
	super(dnDecoration).Used(Other, EventInstigator);
	SpringTrap(EventInstigator);
	return;
}

final function SpringTrap(optional Pawn NewTrapSpringer)
{
	// End:0x0B
	if(bTrapSprung)
	{
		return;
	}
	bTrapSprung = true;
	TrapSpringer = NewTrapSpringer;
	DecoActivity(0, 'SpringTrap');
	// End:0x4C
	if(__NFUN_340__(HingeBar, none))
	{
		HingeBar.Snap(TrapTimer);
	}
	__NFUN_605__(TrapTimer, false, 'Snapped');
	Cheese.__NFUN_631__();
	return;
}

final function Snapped()
{
	local Pawn HitPawn;

	DecoActivity(0, 'Snapped');
	TrapHitPawn(TrapSpringer);
	// End:0x5F
	foreach __NFUN_751__(class'Pawn', HitPawn, __NFUN_195__(__NFUN_225__(CollisionRadius, CollisionHeight), 2), Location)
	{
		// End:0x5B
		if(__NFUN_340__(HitPawn, TrapSpringer))
		{
			TrapHitPawn(HitPawn);
		}
		// End:0x5F
		break;		
	}	
	return;
}

final function TrapHitPawn(Pawn TrapSpringer)
{
	// End:0x0E
	if(__NFUN_339__(TrapSpringer, none))
	{
		return;
	}
	TrapSpringer.TakeDamage(none, TrapDamage, Location, __NFUN_239__(TrapSpringer.Location, Location), class'MeleeDamage',, Location);
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1279__(class'MeleeDamage');
	return;
}

defaultproperties
{
	TrapDamage=20
	TrapTimer=0.15
	DecoActivities_Default=/* Array type was not detected. */
}