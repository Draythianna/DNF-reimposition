/*******************************************************************************
 * Settings_Bathroom_VendingMachine generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Settings_Bathroom_VendingMachine extends Settings_Bathroom
	abstract
	collapsecategories;

const NAME_RIGHT_KNOB = 'NAME_RIGHT_KNOB';
const NAME_LEFT_KNOB = 'NAME_LEFT_KNOB';
const VEND_ITEM_RIGHT = 'VEND_ITEM_RIGHT';
const VEND_ITEM_LEFT = 'VEND_ITEM_LEFT';

var InteractiveActor RightPendingVendedItem;
var InteractiveActor LeftPendingVendedItem;
var Settings_Bathroom_VendingMachine_Knob LeftKnob;
var Settings_Bathroom_VendingMachine_Knob RightKnob;

function bool CanVendItem(Settings_Bathroom_VendingMachine_Knob Knob)
{
	// End:0x2D
	if(__NFUN_148__(__NFUN_341__(Knob.Tag, 'NAME_RIGHT_KNOB'), __NFUN_339__(RightPendingVendedItem, none)))
	{
		return true;		
	}
	else
	{
		// End:0x5A
		if(__NFUN_148__(__NFUN_341__(Knob.Tag, 'NAME_LEFT_KNOB'), __NFUN_339__(LeftPendingVendedItem, none)))
		{
			return true;			
		}
		else
		{
			return false;
		}
	}
	return;
}

function VendItem(Settings_Bathroom_VendingMachine_Knob Knob)
{
	// End:0x8C
	if(__NFUN_148__(__NFUN_339__(Knob.Owner, self), CanVendItem(Knob)))
	{
		DecoActivity(0, 'VendItem');
		// End:0x61
		if(__NFUN_341__(Knob.Tag, 'NAME_RIGHT_KNOB'))
		{
			RightKnob = Knob;
			VendItemRight();			
		}
		else
		{
			// End:0x8C
			if(__NFUN_341__(Knob.Tag, 'NAME_LEFT_KNOB'))
			{
				LeftKnob = Knob;
				VendItemLeft();
			}
		}
	}
	return;
}

function VendItemRight()
{
	DecoActivity(0, 'VendItemRight');
	RightPendingVendedItem = InteractiveActor(FindMountedActor('VEND_ITEM_RIGHT'));
	// End:0x6E
	if(__NFUN_340__(RightPendingVendedItem, none))
	{
		RightPendingVendedItem.VendOwner = self;
		RightPendingVendedItem.ExecuteVerifySelf();
		// End:0x6E
		if(__NFUN_340__(RightKnob, none))
		{
			RightKnob.bUsable = false;
		}
	}
	return;
}

function VendItemLeft()
{
	DecoActivity(0, 'VendItemLeft');
	LeftPendingVendedItem = InteractiveActor(FindMountedActor('VEND_ITEM_LEFT'));
	// End:0x6E
	if(__NFUN_340__(LeftPendingVendedItem, none))
	{
		LeftPendingVendedItem.VendOwner = self;
		LeftPendingVendedItem.ExecuteVerifySelf();
		// End:0x6E
		if(__NFUN_340__(LeftKnob, none))
		{
			LeftKnob.bUsable = false;
		}
	}
	return;
}

function NotifyPickup(Actor Other, Pawn EventInstigator)
{
	super(RenderActor).NotifyPickup(Other, EventInstigator);
	// End:0x48
	if(__NFUN_339__(RightPendingVendedItem, Other))
	{
		RightPendingVendedItem = none;
		// End:0x45
		if(__NFUN_340__(RightKnob, none))
		{
			RightKnob.bUsable = true;
		}		
	}
	else
	{
		// End:0x7D
		if(__NFUN_339__(LeftPendingVendedItem, Other))
		{
			LeftPendingVendedItem = none;
			// End:0x7D
			if(__NFUN_340__(LeftKnob, none))
			{
				LeftKnob.bUsable = true;
			}
		}
	}
	return;
}

defaultproperties
{
	DecoActivities_Default=/* Array type was not detected. */
	X=/* Unknown default property type! */
	
/* Exception thrown while deserializing Engine
System.ArgumentOutOfRangeException: Length cannot be less than zero.
Parameter name: length
   at System.String.Substring(Int32 startIndex, Int32 length)
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in E:\SteamLibrary\steamapps\common\DukeNukem\Tools\UnrealscriptDecompiler\Core\Classes\UDefaultProperty.cs:line 578 */
}