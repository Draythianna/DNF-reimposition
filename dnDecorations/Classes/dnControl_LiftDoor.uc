/*******************************************************************************
 * dnControl_LiftDoor generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControl_LiftDoor extends dnControl_TapPowered_DoorBase
	collapsecategories;

var() deprecated InteractiveActor LiftDoor;

simulated function bool ShouldFlipForUser(Vector AttacheeCameraLoc)
{
	return __NFUN_145__(super.ShouldFlipForUser(AttacheeCameraLoc));
	return;
}

function TakeControl(bool bFlipDoors)
{
	// End:0x1C
	if(__NFUN_340__(LiftDoor, none))
	{
		TakeConrolOfDoor(LiftDoor, 'bone_right');
	}
	return;
}

function ReleaseControl()
{
	// End:0x17
	if(__NFUN_340__(LiftDoor, none))
	{
		ReleaseControlOfDoor(LiftDoor);
	}
	return;
}

k2call function Attach_Sound(optional EventInfo AnimEventInfo)
{
	FindAndPlaySound('LiftGate_Activate', 1);
	return;
}

k2call function Open_Sound(optional EventInfo AnimEventInfo)
{
	FindAndPlaySound('LiftGate_Finish', 1);
	return;
}

function DoorPortalsOn()
{
	// End:0x1D
	if(__NFUN_340__(LiftDoor, none))
	{
		UpdateDoorPortal(DoorMoverEx(LiftDoor), true);
	}
	return;
}

function DoorPortalsOff()
{
	// End:0x1D
	if(__NFUN_340__(LiftDoor, none))
	{
		UpdateDoorPortal(DoorMoverEx(LiftDoor), false);
	}
	return;
}

function UpdateAnimGrids()
{
	local Vector2D GridPt;

	User.AnimationController.SetAnimGridState(UserGridAnim, 0, UserLiftVal);
	__NFUN_703__(MyGridAnim);
	// End:0x5E
	if(__NFUN_340__(__NFUN_568__(), none))
	{
		GridPt.Y = UserLiftVal;
		MeshInstance.__NFUN_548__(0, GridPt);
	}
	return;
}

simulated event AnimEndEx(SAnimEndInfo AnimEndInfo)
{
	super(dnDecoration).AnimEndEx(AnimEndInfo);
	// End:0x3D
	if(__NFUN_150__(__NFUN_341__(AnimEndInfo.AnimName, 'scr_a_door_lift_deactivate'), __NFUN_341__(AnimEndInfo.AnimName, 'scr_a_door_lift_end')))
	{
		DoorPortalsOff();
	}
	return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
	super.RegisterPrecacheComponents(PrecacheIndex);
	PrecacheIndex.__NFUN_1277__(VoicePack, 'LiftGate_Activate');
	PrecacheIndex.__NFUN_1277__(VoicePack, 'LiftGate_Finish');
	return;
}

defaultproperties
{
	bStartInControl=true
	UserGridAnim=LiftDoor_OpenGrid
	MyGridAnim=scr_a_door_lift_idle_grid3d
	PryLoopSoundName=LiftGate_PryLoop
	RateOfGain=0.2
}