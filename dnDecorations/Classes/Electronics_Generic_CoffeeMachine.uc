/*******************************************************************************
 * Electronics_Generic_CoffeeMachine generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Electronics_Generic_CoffeeMachine extends Electronics_Generic
	collapsecategories;

var() noexport float PotFullPercent "At startup, if we have a pot initially, the percentage of them that start full.";
var Containers_CoffeeMachine_Pot CurrentPot;
var bool bDispensing;

event PostVerifySelf()
{
	super(dnDecoration).PostVerifySelf();
	GetCoffeePot();
	return;
}

final function GetCoffeePot()
{
	CurrentPot = Containers_CoffeeMachine_Pot(FindMountedActor('CurrentPot'));
	// End:0x3F
	if(__NFUN_340__(CurrentPot, none))
	{
		AttachPotToSelf(CurrentPot);
		// End:0x3F
		if(__NFUN_200__(__NFUN_222__(), PotFullPercent))
		{
			FillCurrentPot();
		}
	}
	return;
}

simulated function bool CanGrabUseCombine(InteractiveActor Combinee)
{
	return __NFUN_148__(__NFUN_148__(__NFUN_339__(CurrentPot, none), __NFUN_340__(Combinee, none)), __NFUN_340__(Containers_CoffeeMachine_Pot(Combinee), none));
	return;
}

event Used(Actor Other, Pawn EventInstigator)
{
	super(dnDecoration).Used(Other, EventInstigator);
	// End:0x44
	if(__NFUN_148__(__NFUN_148__(__NFUN_340__(CurrentPot, none), CurrentPot.NeedRefill()), MachineFunctional()))
	{
		FillCurrentPot();
		return;
	}
	// End:0x63
	if(__NFUN_145__(PlacePlayerHeldItem(EventInstigator)))
	{
		DecoActivity(0, 'EmptySwitch');
		return;
	}
	return;
}

final function bool MachineFunctional()
{
	return __NFUN_145__(DecorationIsDead());
	return;
}

final function FillCurrentPot()
{
	bDispensing = true;
	CurrentPot.FillPot();
	return;
}

final function PotNowFull()
{
	bDispensing = false;
	DecoActivity(0, 'TurnOff');
	return;
}

final function bool PlacePlayerHeldItem(Pawn Drinker)
{
	// End:0x0E
	if(__NFUN_340__(CurrentPot, none))
	{
		return false;
	}
	CurrentPot = Containers_CoffeeMachine_Pot(Drinker.CarriedActor);
	// End:0x54
	if(__NFUN_340__(CurrentPot, none))
	{
		Drinker.DropCarriedActor(, true,,, true);
		AttachPotToSelf(CurrentPot);
	}
	return __NFUN_340__(CurrentPot, none);
	return;
}

final function AttachPotToSelf(Containers_CoffeeMachine_Pot AttachPot)
{
	// End:0x0E
	if(__NFUN_339__(AttachPot, none))
	{
		return;
	}
	AttachPot.SetMachine(self);
	AttachPot.StoreCollision();
	AttachPot.__NFUN_621__(, false, false, false, false);
	AttachPot.MountType = 2;
	AttachPot.MountMeshItem = 'PotBone';
	AttachPot.MountOrigin = __NFUN_232__(0, 0, AttachPot.CollisionHeight);
	AttachPot.MountAngles = __NFUN_265__(0, 0, 0);
	AttachPot.__NFUN_635__(self);
	return;
}

final function PotGoneMIA()
{
	CurrentPot = none;
	bDispensing = false;
	return;
}

function Destroyed()
{
	__NFUN_695__(3);
	// End:0x21
	if(__NFUN_340__(CurrentPot, none))
	{
		CurrentPot.CriticalDamage();
	}
	super(dnDecoration).Destroyed();
	return;
}

defaultproperties
{
	PotFullPercent=0.4
	DecoActivities_Default=/* Array type was not detected. */
	X=/* Unknown default property type! */
	
/* Exception thrown while deserializing Engine
System.ArgumentOutOfRangeException: Length cannot be less than zero.
Parameter name: length
   at System.String.Substring(Int32 startIndex, Int32 length)
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) in E:\SteamLibrary\steamapps\common\DukeNukem\Tools\UnrealscriptDecompiler\Core\Classes\UDefaultProperty.cs:line 578 */
}