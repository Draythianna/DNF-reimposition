/*******************************************************************************
 * UWindowTabControlTabArea generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UWindowTabControlTabArea extends UWindowWindow
	config
	dependson(UWindowTabControlLeftButton)
	dependson(UWindowTabControlRightButton);

var int TabOffset;
var bool bShowSelected;
var UWindowTabControlItem FirstShown;
var bool bDragging;
var UWindowTabControlItem DragTab;
var int TabRows;
var globalconfig bool bArrangeRowsLikeTimHates;
var float UnFlashTime;
var bool bFlashShown;

function Created()
{
	TabOffset = 0;
	super.Created();
	return;
}

function SizeTabsSingleLine(Canvas C)
{
	local UWindowTabControlItem i, Selected, LastHidden;
	local int Count, TabCount;
	local float ItemX, W, h;
	local bool bHaveMore;

	ItemX = LookAndFeel.Size_TabXOffset;
	TabCount = 0;
	i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
	J0x45:

	// End:0xFE [Loop If]
	if(__NFUN_340__(i, none))
	{
		LookAndFeel.Tab_GetTabSize(self, C, RemoveAmpersand(i.Caption), W, h);
		i.TabWidth = W;
		i.TabHeight = __NFUN_198__(h, float(1));
		i.TabTop = 0;
		i.RowNumber = 0;
		__NFUN_184__(TabCount);
		i = UWindowTabControlItem(i.Next);
		// [Loop Continue]
		goto J0x45;
	}
	Selected = UWindowTabControl(ParentWindow).SelectedTab;
	J0x118:

	// End:0x312 [Loop If]
	if(true)
	{
		ItemX = LookAndFeel.Size_TabXOffset;
		Count = 0;
		LastHidden = none;
		FirstShown = none;
		i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
		J0x16F:

		// End:0x24A [Loop If]
		if(__NFUN_340__(i, none))
		{
			// End:0x1AD
			if(__NFUN_169__(Count, TabOffset))
			{
				i.TabLeft = -1;
				LastHidden = i;				
			}
			else
			{
				// End:0x1C4
				if(__NFUN_339__(FirstShown, none))
				{
					FirstShown = i;
				}
				i.TabLeft = ItemX;
				// End:0x210
				if(__NFUN_203__(__NFUN_198__(i.TabLeft, i.TabWidth), __NFUN_198__(WinWidth, float(5))))
				{
					bHaveMore = true;
				}
				__NFUN_209__(ItemX, i.TabWidth);
			}
			__NFUN_184__(Count);
			i = UWindowTabControlItem(i.Next);
			// [Loop Continue]
			goto J0x16F;
		}
		// End:0x294
		if(__NFUN_148__(__NFUN_148__(__NFUN_170__(TabOffset, 0), __NFUN_340__(LastHidden, none)), __NFUN_200__(__NFUN_198__(LastHidden.TabWidth, float(5)), __NFUN_199__(WinWidth, ItemX))))
		{
			__NFUN_185__(TabOffset);			
		}
		else
		{
			// End:0x30C
			if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(bShowSelected, __NFUN_169__(TabOffset, __NFUN_166__(TabCount, 1))), __NFUN_340__(Selected, none)), __NFUN_340__(Selected, FirstShown)), __NFUN_201__(__NFUN_198__(Selected.TabLeft, Selected.TabWidth), __NFUN_199__(WinWidth, float(5)))))
			{
				__NFUN_184__(TabOffset);				
			}
			else
			{
				// [Explicit Break]
				goto J0x312;
			}
		}
		// [Loop Continue]
		goto J0x118;
	}
	J0x312:

	bShowSelected = false;
	UWindowTabControl(ParentWindow).LeftButton.bDisabled = __NFUN_171__(TabOffset, 0);
	UWindowTabControl(ParentWindow).RightButton.bDisabled = __NFUN_145__(bHaveMore);
	TabRows = 1;
	return;
}

function SizeTabsMultiLine(Canvas C)
{
	local UWindowTabControlItem i, Selected;
	local float W, h;
	local int MinRow;
	local float RowWidths[5];
	local int TabCounts[5], j;
	local bool bTryAnotherRow;

	TabOffset = 0;
	FirstShown = none;
	TabRows = 1;
	bTryAnotherRow = true;
	J0x1D:

	// End:0x1E0 [Loop If]
	if(__NFUN_148__(bTryAnotherRow, __NFUN_171__(TabRows, 5)))
	{
		bTryAnotherRow = false;
		j = 0;
		J0x43:

		// End:0x7A [Loop If]
		if(__NFUN_169__(j, TabRows))
		{
			RowWidths[j] = 0;
			TabCounts[j] = 0;
			__NFUN_184__(j);
			// [Loop Continue]
			goto J0x43;
		}
		i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
		J0xA3:

		// End:0x1DD [Loop If]
		if(__NFUN_340__(i, none))
		{
			LookAndFeel.Tab_GetTabSize(self, C, RemoveAmpersand(i.Caption), W, h);
			i.TabWidth = W;
			i.TabHeight = h;
			MinRow = 0;
			j = 1;
			J0x11C:

			// End:0x15B [Loop If]
			if(__NFUN_169__(j, TabRows))
			{
				// End:0x151
				if(__NFUN_200__(RowWidths[j], RowWidths[MinRow]))
				{
					MinRow = j;
				}
				__NFUN_184__(j);
				// [Loop Continue]
				goto J0x11C;
			}
			// End:0x18C
			if(__NFUN_201__(__NFUN_198__(RowWidths[MinRow], W), WinWidth))
			{
				__NFUN_184__(TabRows);
				bTryAnotherRow = true;
				// [Explicit Break]
				goto J0x1DD;				
			}
			else
			{
				__NFUN_209__(RowWidths[MinRow], W);
				__NFUN_184__(TabCounts[MinRow]);
				i.RowNumber = MinRow;
			}
			i = UWindowTabControlItem(i.Next);
			// [Loop Continue]
			goto J0xA3;
		}
		J0x1DD:

		// [Loop Continue]
		goto J0x1D;
	}
	Selected = UWindowTabControl(ParentWindow).SelectedTab;
	// End:0x29C
	if(__NFUN_170__(TabRows, 1))
	{
		i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
		J0x22E:

		// End:0x29C [Loop If]
		if(__NFUN_340__(i, none))
		{
			__NFUN_209__(i.TabWidth, __NFUN_196__(__NFUN_199__(WinWidth, RowWidths[i.RowNumber]), float(TabCounts[i.RowNumber])));
			i = UWindowTabControlItem(i.Next);
			// [Loop Continue]
			goto J0x22E;
		}
	}
	j = 0;
	J0x2A3:

	// End:0x2CD [Loop If]
	if(__NFUN_169__(j, TabRows))
	{
		RowWidths[j] = 0;
		__NFUN_184__(j);
		// [Loop Continue]
		goto J0x2A3;
	}
	i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
	J0x2F6:

	// End:0x3FB [Loop If]
	if(__NFUN_340__(i, none))
	{
		i.TabLeft = RowWidths[i.RowNumber];
		// End:0x387
		if(bArrangeRowsLikeTimHates)
		{
			i.TabTop = __NFUN_195__(__NFUN_197__(float(__NFUN_165__(i.RowNumber, __NFUN_166__(__NFUN_166__(TabRows, 1), Selected.RowNumber))), float(TabRows)), i.TabHeight);			
		}
		else
		{
			i.TabTop = __NFUN_195__(float(i.RowNumber), i.TabHeight);
		}
		__NFUN_209__(RowWidths[i.RowNumber], i.TabWidth);
		i = UWindowTabControlItem(i.Next);
		// [Loop Continue]
		goto J0x2F6;
	}
	return;
}

function LayoutTabs(Canvas C)
{
	// End:0x26
	if(UWindowTabControl(ParentWindow).bMultiLine)
	{
		SizeTabsMultiLine(C);		
	}
	else
	{
		SizeTabsSingleLine(C);
	}
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local UWindowTabControlItem i;
	local int Count, Row;
	local float t;

	t = GetLevel().TimeSeconds;
	// End:0x64
	if(__NFUN_200__(UnFlashTime, t))
	{
		bFlashShown = __NFUN_145__(bFlashShown);
		// End:0x52
		if(bFlashShown)
		{
			UnFlashTime = __NFUN_198__(t, 0.5);			
		}
		else
		{
			UnFlashTime = __NFUN_198__(t, 0.3);
		}
	}
	Row = 0;
	J0x6B:

	// End:0x178 [Loop If]
	if(__NFUN_169__(Row, TabRows))
	{
		Count = 0;
		i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
		J0xAA:

		// End:0x16E [Loop If]
		if(__NFUN_340__(i, none))
		{
			// End:0xCF
			if(__NFUN_169__(Count, TabOffset))
			{
				__NFUN_184__(Count);				
			}
			else
			{
				// End:0x151
				if(__NFUN_173__(i.RowNumber, Row))
				{
					DrawItem(C, i, i.TabLeft, i.TabTop, i.TabWidth, i.TabHeight, __NFUN_150__(__NFUN_145__(i.bFlash), bFlashShown));
				}
			}
			i = UWindowTabControlItem(i.Next);
			// [Loop Continue]
			goto J0xAA;
		}
		__NFUN_184__(Row);
		// [Loop Continue]
		goto J0x6B;
	}
	return;
}

function LMouseDown(float X, float Y)
{
	local UWindowTabControlItem i;
	local int Count;

	super.LMouseDown(X, Y);
	Count = 0;
	i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
	J0x40:

	// End:0x173 [Loop If]
	if(__NFUN_340__(i, none))
	{
		// End:0x65
		if(__NFUN_169__(Count, TabOffset))
		{
			__NFUN_184__(Count);			
		}
		else
		{
			// End:0x156
			if(__NFUN_148__(__NFUN_148__(__NFUN_203__(X, i.TabLeft), __NFUN_202__(X, __NFUN_198__(i.TabLeft, i.TabWidth))), __NFUN_150__(__NFUN_173__(TabRows, 1), __NFUN_148__(__NFUN_203__(Y, i.TabTop), __NFUN_202__(Y, __NFUN_198__(i.TabTop, i.TabHeight))))))
			{
				// End:0x13B
				if(__NFUN_145__(UWindowTabControl(ParentWindow).bMultiLine))
				{
					bDragging = true;
					DragTab = i;
					Root.CaptureMouse();
				}
				UWindowTabControl(ParentWindow).GotoTab(i, true);
			}
		}
		i = UWindowTabControlItem(i.Next);
		// [Loop Continue]
		goto J0x40;
	}
	return;
}

function MouseMove(float X, float Y)
{
	// End:0x75
	if(__NFUN_148__(bDragging, bMouseDown))
	{
		// End:0x34
		if(__NFUN_200__(X, DragTab.TabLeft))
		{
			__NFUN_184__(TabOffset);
		}
		// End:0x72
		if(__NFUN_148__(__NFUN_201__(X, __NFUN_198__(DragTab.TabLeft, DragTab.TabWidth)), __NFUN_170__(TabOffset, 0)))
		{
			__NFUN_185__(TabOffset);
		}		
	}
	else
	{
		bDragging = false;
	}
	return;
}

function RMouseDown(float X, float Y)
{
	local UWindowTabControlItem i;
	local int Count;

	LMouseDown(X, Y);
	Count = 0;
	i = UWindowTabControlItem(UWindowTabControl(ParentWindow).Items.Next);
	J0x40:

	// End:0xD7 [Loop If]
	if(__NFUN_340__(i, none))
	{
		// End:0x65
		if(__NFUN_169__(Count, TabOffset))
		{
			__NFUN_184__(Count);			
		}
		else
		{
			// End:0xBA
			if(__NFUN_148__(__NFUN_203__(X, i.TabLeft), __NFUN_202__(X, __NFUN_198__(i.TabLeft, i.TabWidth))))
			{
				i.RightClickTab();
			}
		}
		i = UWindowTabControlItem(i.Next);
		// [Loop Continue]
		goto J0x40;
	}
	return;
}

function DrawItem(Canvas C, UWindowList Item, float X, float Y, float W, float h, bool bShowText)
{
	// End:0x74
	if(__NFUN_339__(Item, UWindowTabControl(ParentWindow).SelectedTab))
	{
		LookAndFeel.Tab_DrawTab(self, C, true, __NFUN_339__(FirstShown, Item), X, Y, W, h, UWindowTabControlItem(Item).Caption, bShowText);		
	}
	else
	{
		LookAndFeel.Tab_DrawTab(self, C, false, __NFUN_339__(FirstShown, Item), X, Y, W, h, UWindowTabControlItem(Item).Caption, bShowText);
	}
	return;
}

function bool CheckMousePassThrough(float X, float Y)
{
	return __NFUN_203__(Y, __NFUN_195__(LookAndFeel.Size_TabAreaHeight, float(TabRows)));
	return;
}
