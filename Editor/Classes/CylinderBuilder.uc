/*******************************************************************************
 * CylinderBuilder generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class CylinderBuilder extends BrushBuilder;

var() float Height;
var() float OuterRadius;
var() float InnerRadius;
var() int Sides;
var() name GroupName;
var() bool AlignToSide;
var() bool Hollow;

function BuildCylinder(int Direction, bool AlignToSide, int Sides, float Height, float Radius)
{
	local int n, i, j, q, Ofs;

	n = GetVertexCount();
	// End:0x32
	if(AlignToSide)
	{
		__NFUN_208__(Radius, __NFUN_213__(__NFUN_196__(3.141593, float(Sides))));
		Ofs = 1;
	}
	i = 0;
	J0x39:

	// End:0xE7 [Loop If]
	if(__NFUN_169__(i, Sides))
	{
		j = -1;
		J0x53:

		// End:0xDD [Loop If]
		if(__NFUN_169__(j, 2))
		{
			Vertex3f(__NFUN_195__(Radius, __NFUN_212__(__NFUN_196__(__NFUN_195__(__NFUN_198__(__NFUN_195__(2, float(i)), float(Ofs)), 3.141593), float(Sides)))), __NFUN_195__(Radius, __NFUN_213__(__NFUN_196__(__NFUN_195__(__NFUN_198__(__NFUN_195__(2, float(i)), float(Ofs)), 3.141593), float(Sides)))), __NFUN_196__(__NFUN_195__(float(j), Height), float(2)));
			__NFUN_180__(j, 2);
			// [Loop Continue]
			goto J0x53;
		}
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x39;
	}
	i = 0;
	J0xEE:

	// End:0x178 [Loop If]
	if(__NFUN_169__(i, Sides))
	{
		Poly4i(Direction, __NFUN_165__(n, __NFUN_162__(i, 2)), __NFUN_165__(__NFUN_165__(n, __NFUN_162__(i, 2)), 1), __NFUN_165__(n, __NFUN_164__(__NFUN_165__(__NFUN_162__(i, 2), 3), __NFUN_162__(2, Sides))), __NFUN_165__(n, __NFUN_164__(__NFUN_165__(__NFUN_162__(i, 2), 2), __NFUN_162__(2, Sides))), 'Wall');
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0xEE;
	}
	return;
}

function bool Build()
{
	local int i, j, K;

	// End:0x13
	if(__NFUN_169__(Sides, 3))
	{
		return BadParameters();
	}
	// End:0x34
	if(__NFUN_150__(__NFUN_202__(Height, float(0)), __NFUN_202__(OuterRadius, float(0))))
	{
		return BadParameters();
	}
	// End:0x63
	if(__NFUN_148__(Hollow, __NFUN_150__(__NFUN_202__(InnerRadius, float(0)), __NFUN_203__(InnerRadius, OuterRadius))))
	{
		return BadParameters();
	}
	BeginBrush(false, GroupName);
	BuildCylinder(1, AlignToSide, Sides, Height, OuterRadius);
	// End:0x190
	if(Hollow)
	{
		BuildCylinder(-1, AlignToSide, Sides, Height, InnerRadius);
		j = -1;
		J0xBF:

		// End:0x18D [Loop If]
		if(__NFUN_169__(j, 2))
		{
			i = 0;
			J0xD2:

			// End:0x181 [Loop If]
			if(__NFUN_169__(i, Sides))
			{
				Poly4i(j, __NFUN_165__(__NFUN_162__(i, 2), __NFUN_163__(__NFUN_166__(1, j), 2)), __NFUN_165__(__NFUN_162__(__NFUN_164__(__NFUN_165__(i, 1), Sides), 2), __NFUN_163__(__NFUN_166__(1, j), 2)), __NFUN_165__(__NFUN_165__(__NFUN_162__(__NFUN_164__(__NFUN_165__(i, 1), Sides), 2), __NFUN_163__(__NFUN_166__(1, j), 2)), __NFUN_162__(Sides, 2)), __NFUN_165__(__NFUN_165__(__NFUN_162__(i, 2), __NFUN_163__(__NFUN_166__(1, j), 2)), __NFUN_162__(Sides, 2)), 'Cap');
				__NFUN_184__(i);
				// [Loop Continue]
				goto J0xD2;
			}
			__NFUN_180__(j, 2);
			// [Loop Continue]
			goto J0xBF;
		}		
	}
	else
	{
		j = -1;
		J0x19B:

		// End:0x206 [Loop If]
		if(__NFUN_169__(j, 2))
		{
			PolyBegin(j, 'Cap');
			i = 0;
			J0x1BE:

			// End:0x1F4 [Loop If]
			if(__NFUN_169__(i, Sides))
			{
				Polyi(__NFUN_165__(__NFUN_162__(i, 2), __NFUN_163__(__NFUN_166__(1, j), 2)));
				__NFUN_184__(i);
				// [Loop Continue]
				goto J0x1BE;
			}
			PolyEnd();
			__NFUN_180__(j, 2);
			// [Loop Continue]
			goto J0x19B;
		}
	}
	return EndBrush();
	return;
}

defaultproperties
{
	Height=256
	OuterRadius=512
	InnerRadius=384
	Sides=8
	GroupName=Cylinder
	AlignToSide=true
	BitmapFilename="BBCylinder"
	ToolTip="Cylinder"
}