/*******************************************************************************
 * ConeBuilder generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ConeBuilder extends BrushBuilder;

var() float Height;
var() float CapHeight;
var() float OuterRadius;
var() float InnerRadius;
var() int Sides;
var() name GroupName;
var() bool AlignToSide;
var() bool Hollow;

function BuildCone(int Direction, bool AlignToSide, int Sides, float Height, float Radius, name Item)
{
	local int n, i, j, q, Ofs;

	n = GetVertexCount();
	// End:0x32
	if(AlignToSide)
	{
		__NFUN_208__(Radius, __NFUN_213__(__NFUN_196__(3.141593, float(Sides))));
		Ofs = 1;
	}
	i = 0;
	J0x39:

	// End:0xB7 [Loop If]
	if(__NFUN_169__(i, Sides))
	{
		Vertex3f(__NFUN_195__(Radius, __NFUN_212__(__NFUN_196__(__NFUN_195__(__NFUN_198__(__NFUN_195__(2, float(i)), float(Ofs)), 3.141593), float(Sides)))), __NFUN_195__(Radius, __NFUN_213__(__NFUN_196__(__NFUN_195__(__NFUN_198__(__NFUN_195__(2, float(i)), float(Ofs)), 3.141593), float(Sides)))), 0);
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x39;
	}
	Vertex3f(0, 0, Height);
	i = 0;
	J0xD3:

	// End:0x12A [Loop If]
	if(__NFUN_169__(i, Sides))
	{
		Poly3i(Direction, __NFUN_165__(n, i), __NFUN_165__(n, Sides), __NFUN_165__(n, __NFUN_164__(__NFUN_165__(i, 1), Sides)), Item);
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0xD3;
	}
	return;
}

function bool Build()
{
	local int i;

	// End:0x13
	if(__NFUN_169__(Sides, 3))
	{
		return BadParameters();
	}
	// End:0x34
	if(__NFUN_150__(__NFUN_202__(Height, float(0)), __NFUN_202__(OuterRadius, float(0))))
	{
		return BadParameters();
	}
	// End:0x63
	if(__NFUN_148__(Hollow, __NFUN_150__(__NFUN_202__(InnerRadius, float(0)), __NFUN_203__(InnerRadius, OuterRadius))))
	{
		return BadParameters();
	}
	// End:0x84
	if(__NFUN_148__(Hollow, __NFUN_201__(CapHeight, Height)))
	{
		return BadParameters();
	}
	// End:0xB6
	if(__NFUN_148__(Hollow, __NFUN_148__(__NFUN_204__(CapHeight, Height), __NFUN_204__(InnerRadius, OuterRadius))))
	{
		return BadParameters();
	}
	BeginBrush(false, GroupName);
	BuildCone(1, AlignToSide, Sides, Height, OuterRadius, 'Top');
	// End:0x18B
	if(Hollow)
	{
		BuildCone(-1, AlignToSide, Sides, CapHeight, InnerRadius, 'Cap');
		// End:0x188
		if(__NFUN_206__(OuterRadius, InnerRadius))
		{
			i = 0;
			J0x127:

			// End:0x188 [Loop If]
			if(__NFUN_169__(i, Sides))
			{
				Poly4i(1, i, __NFUN_164__(__NFUN_165__(i, 1), Sides), __NFUN_165__(__NFUN_165__(Sides, 1), __NFUN_164__(__NFUN_165__(i, 1), Sides)), __NFUN_165__(__NFUN_165__(Sides, 1), i), 'Bottom');
				__NFUN_184__(i);
				// [Loop Continue]
				goto J0x127;
			}
		}		
	}
	else
	{
		PolyBegin(1, 'Bottom');
		i = 0;
		J0x19E:

		// End:0x1C2 [Loop If]
		if(__NFUN_169__(i, Sides))
		{
			Polyi(i);
			__NFUN_184__(i);
			// [Loop Continue]
			goto J0x19E;
		}
		PolyEnd();
	}
	return EndBrush();
	return;
}

defaultproperties
{
	Height=256
	CapHeight=256
	OuterRadius=512
	InnerRadius=384
	Sides=8
	GroupName=Cone
	AlignToSide=true
	BitmapFilename="BBCone"
	ToolTip="Cone"
}