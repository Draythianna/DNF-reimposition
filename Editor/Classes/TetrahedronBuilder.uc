/*******************************************************************************
 * TetrahedronBuilder generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class TetrahedronBuilder extends BrushBuilder;

var() float Radius;
var() int SphereExtrapolation;
var() name GroupName;

function Extrapolate(int A, int B, int C, int Count, float Radius)
{
	local int ab, bc, ca;

	// End:0x11D
	if(__NFUN_170__(Count, 1))
	{
		ab = Vertexv(__NFUN_235__(Radius, __NFUN_253__(__NFUN_238__(GetVertex(A), GetVertex(B)))));
		bc = Vertexv(__NFUN_235__(Radius, __NFUN_253__(__NFUN_238__(GetVertex(B), GetVertex(C)))));
		ca = Vertexv(__NFUN_235__(Radius, __NFUN_253__(__NFUN_238__(GetVertex(C), GetVertex(A)))));
		Extrapolate(A, ab, ca, __NFUN_166__(Count, 1), Radius);
		Extrapolate(B, bc, ab, __NFUN_166__(Count, 1), Radius);
		Extrapolate(C, ca, bc, __NFUN_166__(Count, 1), Radius);
		Extrapolate(ab, bc, ca, __NFUN_166__(Count, 1), Radius);		
	}
	else
	{
		Poly3i(1, A, B, C);
	}
	return;
}

function BuildTetrahedron(float R, int SphereExtrapolation)
{
	Vertex3f(R, 0, 0);
	Vertex3f(__NFUN_194__(R), 0, 0);
	Vertex3f(0, R, 0);
	Vertex3f(0, __NFUN_194__(R), 0);
	Vertex3f(0, 0, R);
	Vertex3f(0, 0, __NFUN_194__(R));
	Extrapolate(2, 1, 4, SphereExtrapolation, Radius);
	Extrapolate(1, 3, 4, SphereExtrapolation, Radius);
	Extrapolate(3, 0, 4, SphereExtrapolation, Radius);
	Extrapolate(0, 2, 4, SphereExtrapolation, Radius);
	Extrapolate(1, 2, 5, SphereExtrapolation, Radius);
	Extrapolate(3, 1, 5, SphereExtrapolation, Radius);
	Extrapolate(0, 3, 5, SphereExtrapolation, Radius);
	Extrapolate(2, 0, 5, SphereExtrapolation, Radius);
	return;
}

event bool Build()
{
	// End:0x20
	if(__NFUN_150__(__NFUN_202__(Radius, float(0)), __NFUN_171__(SphereExtrapolation, 0)))
	{
		return BadParameters();
	}
	BeginBrush(false, GroupName);
	BuildTetrahedron(Radius, SphereExtrapolation);
	return EndBrush();
	return;
}

defaultproperties
{
	Radius=256
	SphereExtrapolation=1
	GroupName=Tetrahedron
	BitmapFilename="BBSphere"
	ToolTip="Tetrahedron (Sphere)"
}