/*******************************************************************************
 * UDukeDigsDisplayWindow generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeDigsDisplayWindow extends UWindowWindow
	config;

var int ChallengeIdx;
var string Title;
var string Description;
var string HelpText;
var string CurrLvlPrefix;
var localized string PressToClose;
var Texture image;
var Texture HorizBar;
var string LockedImages[4];
var config float ImageSize;
var config float BarWidthPct;
var config float TitleYPct;
var config float UpperHorizYPct;
var config float ImageYPct;
var config float LowerHorizYPct;
var config float DescYPct;
var config float DescXPadding;
var config float TitleScale;
var config float DescScale;
var config float LineXEdgeOffset;
var bool IsLocked;
var int LockImageIdx;
var Region FillRegion;
var Texture FillTexture;
var Texture BorderTexture;
var Texture CapTexture;
var Region LineRegion;
var Texture BackdropTexture;
var bool bUseBabeRendering;
var bool bDrawLevelTxt;

function OnNavForward()
{
	local DukeMultiPlayer dmp;
	local PlayerProgression PlayerStats;

	dmp = DukeMultiPlayer(GetPlayerOwner());
	PlayerStats = dmp.PlayerProgress;
	CurrLvlPrefix = __NFUN_303__(__NFUN_356__("UDukeDigsDisplayWindow", "CurrLvlPrefix", "dnwindow"), string(PlayerStats.GetLevel()));
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local float TitleXL, TitleYL, TTFontScale, ClampedImageSize;
	local string DescHelpText;
	local float Lines, XL, YL, ImageYPos, FontScale, FontScaleX,
		DescAndHelpTextHeight, UpperBarY, LowerBarY, BarHeight, TargetHelpWidth;

	DrawBackground(C);
	TTFontScale = class'UWindowScene'.default.TTFontScale;
	C.Font = C.TallFont;
	C.DrawColor = class'UWindowScene'.default.OrangeColor;
	TextSize(C, Title, TitleXL, TitleYL, __NFUN_195__(TTFontScale, TitleScale), __NFUN_195__(TTFontScale, TitleScale));
	ClipText(C, __NFUN_196__(__NFUN_199__(WinWidth, TitleXL), 2), __NFUN_195__(WinHeight, TitleYPct), Title,, __NFUN_195__(TTFontScale, TitleScale), __NFUN_195__(TTFontScale, TitleScale), 1, 2);
	C.DrawColor = class'UWindowScene'.default.GreyColor;
	FontScale = __NFUN_195__(TTFontScale, DescScale);
	C.__NFUN_1260__(FontScale);
	TextSize(C, Description, XL, YL, FontScale, FontScale);
	Lines = float(WrapClipText(C, DescXPadding, 0, Description,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))), true, false, FontScale, FontScale, 1, 2));
	// End:0x1A6
	if(bDrawLevelTxt)
	{
		__NFUN_209__(Lines, float(2));
	}
	DescAndHelpTextHeight = __NFUN_198__(__NFUN_195__(Lines, YL), __NFUN_195__(WinHeight, TitleYPct));
	Lines = float(WrapClipText(C, DescXPadding, __NFUN_199__(WinHeight, DescAndHelpTextHeight), Description,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))),, false, FontScale, FontScale, 1, 2));
	// End:0x3DC
	if(bDrawLevelTxt)
	{
		C.DrawColor = class'UWindowScene'.default.OrangeColor;
		TextSize(C, CurrLvlPrefix, XL, YL, FontScale, FontScale);
		TargetHelpWidth = __NFUN_195__(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, 2.5)), 0.5);
		FontScaleX = FontScale;
		// End:0x2B0
		if(__NFUN_201__(XL, TargetHelpWidth))
		{
			__NFUN_207__(FontScaleX, __NFUN_196__(TargetHelpWidth, XL));
		}
		WrapClipText(C, DescXPadding, __NFUN_198__(__NFUN_199__(WinHeight, DescAndHelpTextHeight), __NFUN_195__(__NFUN_198__(Lines, float(1)), YL)), CurrLvlPrefix,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))),, false, FontScaleX, FontScale, 1, 2);
		TextSize(C, HelpText, XL, YL, FontScale, FontScale);
		FontScaleX = FontScale;
		// End:0x368
		if(__NFUN_201__(XL, TargetHelpWidth))
		{
			__NFUN_207__(FontScaleX, __NFUN_196__(TargetHelpWidth, XL));
			XL = TargetHelpWidth;
		}
		WrapClipText(C, __NFUN_199__(__NFUN_199__(WinWidth, DescXPadding), XL), __NFUN_198__(__NFUN_199__(WinHeight, DescAndHelpTextHeight), __NFUN_195__(__NFUN_198__(Lines, float(1)), YL)), HelpText,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))),, false, FontScaleX, FontScale, 1, 2);
		__NFUN_209__(Lines, float(2));
	}
	BarHeight = __NFUN_195__(float(LineRegion.h), class'UWindowScene'.default.WinScaleY);
	UpperBarY = __NFUN_195__(UpperHorizYPct, WinHeight);
	LowerBarY = __NFUN_199__(__NFUN_199__(WinHeight, DescAndHelpTextHeight), BarHeight);
	C.DrawColor = WhiteColor;
	DrawStretchedTextureSegment(C, __NFUN_195__(LineXEdgeOffset, WinWidth), UpperBarY, __NFUN_199__(WinWidth, __NFUN_195__(__NFUN_195__(LineXEdgeOffset, WinWidth), float(2))), BarHeight, float(LineRegion.X), float(LineRegion.Y), float(LineRegion.W), float(LineRegion.h), BackdropTexture, 1);
	DrawStretchedTextureSegment(C, __NFUN_195__(LineXEdgeOffset, WinWidth), LowerBarY, __NFUN_199__(WinWidth, __NFUN_195__(__NFUN_195__(LineXEdgeOffset, WinWidth), float(2))), BarHeight, float(LineRegion.X), float(LineRegion.Y), float(LineRegion.W), float(LineRegion.h), BackdropTexture, 1);
	ClampedImageSize = __NFUN_224__(__NFUN_199__(LowerBarY, __NFUN_198__(UpperBarY, BarHeight)), ImageSize);
	// End:0x61F
	if(__NFUN_340__(image, none))
	{
		ImageYPos = __NFUN_198__(__NFUN_198__(UpperBarY, BarHeight), __NFUN_195__(__NFUN_199__(LowerBarY, __NFUN_198__(UpperBarY, BarHeight)), 0.5));
		__NFUN_210__(ImageYPos, __NFUN_195__(ClampedImageSize, 0.5));
		// End:0x5E5
		if(bUseBabeRendering)
		{
			DrawStretchedTextureSegment(C, __NFUN_196__(__NFUN_199__(WinWidth, ClampedImageSize), 2), ImageYPos, ClampedImageSize, ClampedImageSize, 0, 0, 256, 256, image, 1,,,,, true);			
		}
		else
		{
			DrawStretchedTexture(C, __NFUN_196__(__NFUN_199__(WinWidth, ClampedImageSize), 2), ImageYPos, ClampedImageSize, ClampedImageSize, image, 1,,, true);
		}
	}
	return;
}

function SetChallId(int id)
{
	local int Idx;

	Idx = class'ChallengeInfo'.static.__NFUN_1169__(id);
	Title = __NFUN_356__("ChallengeNames", class'ChallengeInfo'.default.ChallengesArray[Idx].Name, "dnWindow");
	Description = __NFUN_356__("ChallengeNames", class'ChallengeInfo'.default.ChallengesArray[Idx].Description, "dnWindow");
	IsLocked = __NFUN_173__(int(DukeMultiPlayer(GetPlayerOwner()).PlayerProgress.GetChallengeStatus(id)), int(0));
	bDrawLevelTxt = IsLocked;
	// End:0x145
	if(IsLocked)
	{
		HelpText = __NFUN_303__(__NFUN_356__("UDukeSceneDigs", "unlockPrefix", "dnWindow"), __NFUN_356__("ChallengeNames", class'ChallengeInfo'.default.ChallengesArray[Idx].HelpText, "dnWindow"));
	}
	LockImageIdx = class'ChallengeInfo'.default.ChallengesArray[Idx].LockedImageIdx;
	image = none;
	bUseBabeRendering = false;
	// End:0x19E
	if(IsLocked)
	{
		image = Texture(__NFUN_366__(LockedImages[LockImageIdx], class'Texture'));		
	}
	else
	{
		// End:0x223
		if(__NFUN_309__(class'ChallengeInfo'.default.ChallengesArray[Idx].image, ""))
		{
			image = Texture(__NFUN_366__(class'ChallengeInfo'.default.ChallengesArray[Idx].image, class'Texture'));
			// End:0x223
			if(__NFUN_172__(__NFUN_315__(string(class'ChallengeInfo'.default.ChallengesArray[Idx].SearchTag), "prestige"), 0))
			{
				bUseBabeRendering = true;
			}
		}
	}
	return;
}

function DrawBorderCorner(Canvas C, float X, float Y, float Rotation)
{
	C.__NFUN_1250__(X, Y);
	C.__NFUN_1234__(CapTexture, float(CapTexture.__NFUN_1191__()), float(CapTexture.__NFUN_1192__()), 0, 0, float(CapTexture.__NFUN_1191__()), float(CapTexture.__NFUN_1192__()), Rotation);
	return;
}

function DrawBackground(Canvas C)
{
	local float BorderThickness, DoubleBorderThickness, borderwidth, BorderHeight;

	BorderThickness = 8;
	DoubleBorderThickness = __NFUN_195__(BorderThickness, float(2));
	borderwidth = __NFUN_199__(WinWidth, DoubleBorderThickness);
	BorderHeight = __NFUN_199__(WinHeight, DoubleBorderThickness);
	C.DrawColor = GetPlayerOwner().NewColorBytes(255, 255, 255);
	DrawStretchedTextureSegment(C, BorderThickness, BorderThickness, __NFUN_199__(WinWidth, __NFUN_195__(float(2), BorderThickness)), __NFUN_199__(WinHeight, __NFUN_195__(float(2), BorderThickness)), float(FillRegion.X), float(FillRegion.Y), float(FillRegion.W), float(FillRegion.h), FillTexture, 1);
	C.__NFUN_1250__(BorderThickness, 0);
	C.__NFUN_1234__(BorderTexture, borderwidth, BorderThickness, 0, 0, borderwidth, BorderThickness);
	C.__NFUN_1250__(BorderThickness, __NFUN_199__(WinHeight, BorderThickness));
	C.__NFUN_1234__(BorderTexture, borderwidth, BorderThickness, 0, 0, borderwidth, BorderThickness, 3.141593);
	C.__NFUN_1250__(__NFUN_195__(0.5, __NFUN_199__(BorderThickness, BorderHeight)), __NFUN_195__(0.5, __NFUN_199__(WinHeight, BorderThickness)));
	C.__NFUN_1234__(BorderTexture, __NFUN_199__(WinHeight, DoubleBorderThickness), BorderThickness, 0, 0, BorderHeight, BorderThickness, __NFUN_196__(3.141593, float(2)));
	C.__NFUN_1250__(__NFUN_199__(WinWidth, __NFUN_195__(0.5, __NFUN_198__(BorderHeight, BorderThickness))), __NFUN_195__(0.5, __NFUN_199__(WinHeight, BorderThickness)));
	C.__NFUN_1234__(BorderTexture, __NFUN_199__(WinHeight, DoubleBorderThickness), BorderThickness, 0, 0, BorderHeight, BorderThickness, __NFUN_196__(__NFUN_195__(3, 3.141593), float(2)));
	DrawBorderCorner(C, 0, 0, 0);
	DrawBorderCorner(C, __NFUN_199__(WinWidth, BorderThickness), 0, __NFUN_196__(3.141593, float(2)));
	DrawBorderCorner(C, __NFUN_199__(WinWidth, BorderThickness), __NFUN_199__(WinHeight, BorderThickness), 3.141593);
	DrawBorderCorner(C, 0, __NFUN_199__(WinHeight, BorderThickness), __NFUN_196__(__NFUN_195__(3, 3.141593), float(2)));
	return;
}

defaultproperties
{
	CurrLvlPrefix="Current Level"
	PressToClose="<?int?dnWindow.UDukeDigsDisplayWindow.PressToClose?>"
	LockedImages[0]="dt_mydigs.Menu.Wrap_BoxLarge"
	LockedImages[1]="dt_mydigs.Menu.Wrap_BoxMedium"
	LockedImages[2]="dt_mydigs.Menu.Wrap_Picture"
	LockedImages[3]="dt_MyDigs.Menu.Statue_Pigrugwrap"
	ImageSize=256
	TitleYPct=0.025
	UpperHorizYPct=0.0925
	ImageYPct=0.125
	LowerHorizYPct=0.685
	DescYPct=0.725
	DescXPadding=25
	TitleScale=1.1
	DescScale=0.75
	LineXEdgeOffset=0.15
	FillRegion=(X=360,Y=88,W=2,h=2)
	FillTexture='Menu.Menu.Backdrop'
	BorderTexture='Menu.Menu.Border_Straight'
	CapTexture='Menu.Menu.Border_Cap'
	LineRegion=(X=17,Y=0,W=980,h=16)
	BackdropTexture='Menu.Menu.Backdrop'
	bDrawLevelTxt=true
}