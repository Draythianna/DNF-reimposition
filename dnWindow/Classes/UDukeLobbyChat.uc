/*******************************************************************************
 * UDukeLobbyChat generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeLobbyChat extends UWindowDialogControl;

enum MoveDirs
{
	MD_None,
	MD_Left,
	MD_Right
};

struct LobbyMessageStruct
{
	var string msg;
	var string id;
};

var string TypedStr;
var int SelectionPos;
var array<LobbyMessageStruct> Messages;
var localized string SayStr;
var float cursorBlinkTime;
var float curBlinkTime;
var bool bDrawCursor;
var bool bTyping;
var int maxDisplayLines;
var int maxBuffer;
var int maxStringLength;
var int showPos;
var int showEndPos;
var float sideBuffer;
var UDukeLobbyChat.MoveDirs moveDir;
var Color StringColour;
var float fTextScale;
var float LineSpacingY;
var bool bCtrldown;

function Paint(Canvas C, float X, float Y)
{
	C.Font = C.TallFont;
	fTextScale = __NFUN_195__(0.7, class'UWindowScene'.default.TTFontScale);
	// End:0x57
	if(true)
	{
		DrawBottomPlacement(C, X, Y);		
	}
	else
	{
		DrawSidePlacement(C, X, Y);
	}
	super(UWindowWindow).Paint(C, X, Y);
	return;
}

function DrawBottomPlacement(Canvas C, float X, float Y)
{
	local int i, j, K;
	local string tempstr;
	local array<string> strBuffer;
	local float XL, YL, saystrLen, WrapXL;
	local int startLine, endLine;
	local float fChatTextScale;
	local array<string> Parts;

	fChatTextScale = fTextScale;
	// End:0x2E
	if(__NFUN_145__(bTyping))
	{
		C.DrawColor = StringColour;		
	}
	else
	{
		C.DrawColor = WhiteColor;
	}
	UWindowScene(ParentWindow).DrawBackgroundBox(C, 0, 0, WinWidth, WinHeight);
	UWindowScene(ParentWindow).DrawBackgroundBox(C, 0, __NFUN_195__(WinHeight, 0.9), WinWidth, __NFUN_195__(WinHeight, 0.1));
	showPos = FindShowPosition(C);
	tempstr = __NFUN_316__(TypedStr, showPos, __NFUN_166__(showEndPos, showPos));
	TextSize(C, SayStr, saystrLen, YL, fChatTextScale, fChatTextScale);
	TextSize(C, __NFUN_317__(tempstr, __NFUN_166__(SelectionPos, showPos)), XL, YL, fChatTextScale, fChatTextScale);
	// End:0x18D
	if(__NFUN_148__(bDrawCursor, bTyping))
	{
		ClipText(C, __NFUN_198__(__NFUN_198__(__NFUN_195__(WinWidth, 0.02), XL), saystrLen), __NFUN_195__(WinHeight, 0.9), "|",, fChatTextScale, fChatTextScale,, 2);
	}
	ClipText(C, __NFUN_195__(WinWidth, 0.02), __NFUN_195__(WinHeight, 0.9), SayStr,, fChatTextScale, fChatTextScale,, 2);
	C.DrawColor = StringColour;
	ClipText(C, __NFUN_198__(__NFUN_195__(WinWidth, 0.02), saystrLen), __NFUN_195__(WinHeight, 0.9), tempstr,, fChatTextScale, fChatTextScale,, 2);
	// End:0x23E
	if(__NFUN_145__(bTyping))
	{
		C.DrawColor = StringColour;		
	}
	else
	{
		C.DrawColor = WhiteColor;
	}
	startLine = __NFUN_189__(__NFUN_166__(string(Messages), maxDisplayLines), 0);
	endLine = __NFUN_188__(string(Messages), __NFUN_165__(maxDisplayLines, startLine));
	WrapXL = __NFUN_199__(WinWidth, __NFUN_195__(sideBuffer, WinWidth));
	i = startLine;
	J0x2A7:

	// End:0x50B [Loop If]
	if(__NFUN_169__(i, endLine))
	{
		tempstr = __NFUN_302__(__NFUN_302__(Messages[i].id, ": "), Messages[i].msg);
		TextSize(C, tempstr, XL, YL, fChatTextScale, fChatTextScale);
		// End:0x4EE
		if(__NFUN_201__(XL, WrapXL))
		{
			__NFUN_325__(tempstr, " ", Parts);
			strBuffer[strBuffer.Add(1)] = Parts[0];
			j = 1;
			J0x345:

			// End:0x4EB [Loop If]
			if(__NFUN_169__(j, string(Parts)))
			{
				tempstr = __NFUN_303__(strBuffer[__NFUN_166__(string(strBuffer), 1)], Parts[j]);
				TextSize(C, tempstr, XL, YL, fChatTextScale, fChatTextScale);
				// End:0x4CC
				if(__NFUN_201__(XL, WrapXL))
				{
					TextSize(C, Parts[j], XL, YL, fChatTextScale, fChatTextScale);
					// End:0x4B0
					if(__NFUN_201__(XL, WrapXL))
					{
						K = __NFUN_166__(__NFUN_314__(Parts[j]), 1);
						J0x3FB:

						// End:0x45A [Loop If]
						if(__NFUN_170__(K, 0))
						{
							TextSize(C, __NFUN_302__(__NFUN_317__(Parts[j], K), "-"), XL, YL, fChatTextScale, fChatTextScale);
							// End:0x450
							if(__NFUN_202__(XL, WrapXL))
							{
								// [Explicit Break]
								goto J0x45A;
							}
							__NFUN_185__(K);
							// [Loop Continue]
							goto J0x3FB;
						}
						J0x45A:

						Parts.Insert(__NFUN_165__(j, 1), 1);
						Parts[__NFUN_165__(j, 1)] = __NFUN_316__(Parts[j], K);
						Parts[j] = __NFUN_302__(__NFUN_317__(Parts[j], K), "-");
					}
					strBuffer[strBuffer.Add(1)] = Parts[j];
					// [Explicit Continue]
					goto J0x4E1;
				}
				strBuffer[__NFUN_166__(string(strBuffer), 1)] = tempstr;
				J0x4E1:

				__NFUN_184__(j);
				// [Loop Continue]
				goto J0x345;
			}
			// [Explicit Continue]
			goto J0x501;
		}
		strBuffer[strBuffer.Add(1)] = tempstr;
		J0x501:

		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x2A7;
	}
	i = 0;
	J0x512:

	// End:0x593 [Loop If]
	if(__NFUN_169__(i, __NFUN_188__(string(strBuffer), maxDisplayLines)))
	{
		ClipText(C, __NFUN_195__(WinWidth, 0.02), __NFUN_195__(WinHeight, __NFUN_198__(0.01, __NFUN_195__(float(i), LineSpacingY))), strBuffer[__NFUN_165__(__NFUN_189__(__NFUN_166__(string(strBuffer), maxDisplayLines), 0), i)],, fChatTextScale, fChatTextScale,, 2);
		__NFUN_182__(i);
		// [Loop Continue]
		goto J0x512;
	}
	return;
}

function DrawSidePlacement(Canvas C, float X, float Y)
{
	return;
}

function int FindShowPosition(Canvas C)
{
	local string tempstr;
	local float XL, YL;
	local int iTemp, newShowPos;
	local float saystrWidth;
	local bool bMiddleMoving;

	// End:0x14
	if(__NFUN_173__(int(moveDir), int(0)))
	{
		return showPos;
	}
	tempstr = __NFUN_302__(SayStr, TypedStr);
	TextSize(C, __NFUN_317__(tempstr, __NFUN_165__(SelectionPos, __NFUN_314__(SayStr))), XL, YL, fTextScale, fTextScale);
	// End:0x92
	if(__NFUN_200__(XL, __NFUN_199__(WinWidth, __NFUN_195__(sideBuffer, WinWidth))))
	{
		moveDir = 0;
		showEndPos = __NFUN_314__(TypedStr);
		return 0;
	}
	TextSize(C, SayStr, XL, YL, fTextScale, fTextScale);
	saystrWidth = XL;
	// End:0x1D1
	if(__NFUN_173__(int(moveDir), int(2)))
	{
		XL = 1E+08;
		iTemp = 0;
		J0xE1:

		// End:0x1CE [Loop If]
		if(__NFUN_201__(__NFUN_198__(XL, saystrWidth), __NFUN_199__(WinWidth, __NFUN_195__(sideBuffer, WinWidth))))
		{
			// End:0x181
			if(__NFUN_172__(SelectionPos, showEndPos))
			{
				TextSize(C, __NFUN_316__(TypedStr, __NFUN_165__(showPos, iTemp), __NFUN_166__(SelectionPos, __NFUN_165__(showPos, iTemp))), XL, YL, fTextScale, fTextScale);
				newShowPos = __NFUN_165__(showPos, iTemp);
				showEndPos = SelectionPos;
				__NFUN_184__(iTemp);				
			}
			else
			{
				TextSize(C, __NFUN_316__(TypedStr, showPos, __NFUN_166__(showEndPos, showPos)), XL, YL, fTextScale, fTextScale);
				__NFUN_185__(showEndPos);
				newShowPos = showPos;
			}
			// [Loop Continue]
			goto J0xE1;
		}		
	}
	else
	{
		// End:0x28D
		if(__NFUN_172__(showEndPos, __NFUN_314__(TypedStr)))
		{
			XL = -1E+08;
			iTemp = 0;
			newShowPos = showPos;
			J0x200:

			// End:0x283 [Loop If]
			if(__NFUN_202__(__NFUN_198__(XL, saystrWidth), __NFUN_199__(WinWidth, __NFUN_195__(sideBuffer, WinWidth))))
			{
				TextSize(C, __NFUN_316__(TypedStr, newShowPos, showEndPos), XL, YL, fTextScale, fTextScale);
				// End:0x280
				if(__NFUN_202__(__NFUN_198__(XL, saystrWidth), __NFUN_199__(WinWidth, __NFUN_195__(sideBuffer, WinWidth))))
				{
					__NFUN_185__(newShowPos);
				}
				// [Loop Continue]
				goto J0x200;
			}
			__NFUN_184__(newShowPos);			
		}
		else
		{
			XL = 1E+08;
			iTemp = 0;
			J0x29F:

			// End:0x336 [Loop If]
			if(__NFUN_201__(__NFUN_198__(XL, saystrWidth), __NFUN_199__(WinWidth, __NFUN_195__(sideBuffer, WinWidth))))
			{
				// End:0x330
				if(__NFUN_148__(__NFUN_169__(SelectionPos, showPos), __NFUN_170__(showEndPos, SelectionPos)))
				{
					TextSize(C, __NFUN_316__(TypedStr, SelectionPos, __NFUN_166__(showEndPos, SelectionPos)), XL, YL, fTextScale, fTextScale);
					newShowPos = SelectionPos;
					__NFUN_185__(showEndPos);					
				}
				else
				{
					// [Explicit Break]
					goto J0x336;
				}
				// [Loop Continue]
				goto J0x29F;
			}
		}
	}
	J0x336:

	moveDir = 0;
	return newShowPos;
	return;
}

function KeyType(int Key, float X, float Y)
{
	// End:0x0D
	if(__NFUN_145__(bTyping))
	{
		return;
	}
	// End:0x26
	if(__NFUN_150__(__NFUN_173__(Key, 9), bCtrldown))
	{
		return;
	}
	curBlinkTime = 0;
	bDrawCursor = true;
	// End:0x91
	if(__NFUN_173__(Key, 8))
	{
		// End:0x8F
		if(__NFUN_174__(SelectionPos, 0))
		{
			TypedStr = __NFUN_302__(__NFUN_317__(TypedStr, __NFUN_166__(SelectionPos, 1)), __NFUN_316__(TypedStr, SelectionPos));
			SelectionPos = __NFUN_189__(0, __NFUN_166__(SelectionPos, 1));
			moveDir = 1;
		}
		return;
	}
	// End:0xA5
	if(__NFUN_172__(__NFUN_314__(TypedStr), maxStringLength))
	{
		return;
	}
	TypedStr = __NFUN_302__(__NFUN_302__(__NFUN_317__(TypedStr, SelectionPos), __NFUN_321__(Key)), __NFUN_316__(TypedStr, SelectionPos));
	__NFUN_180__(SelectionPos, 1);
	moveDir = 2;
	return;
}

function bool KeyEvent(int Key)
{
	local string temp;

	// End:0x0D
	if(__NFUN_145__(bTyping))
	{
		return false;
	}
	// End:0x24
	if(__NFUN_173__(Key, 27))
	{
		TypedStr = "";		
	}
	else
	{
		// End:0x60
		if(__NFUN_173__(Key, 13))
		{
			// End:0x5D
			if(__NFUN_309__(TypedStr, ""))
			{
				UWindowScene(ParentWindow).SendMSG(TypedStr);
				ClearTypedStr();
			}			
		}
		else
		{
			// End:0x76
			if(__NFUN_173__(Key, 36))
			{
				SelectionPos = 0;				
			}
			else
			{
				// End:0x93
				if(__NFUN_173__(Key, 35))
				{
					SelectionPos = __NFUN_314__(TypedStr);					
				}
				else
				{
					// End:0xC8
					if(__NFUN_173__(Key, 46))
					{
						TypedStr = __NFUN_302__(__NFUN_317__(TypedStr, SelectionPos), __NFUN_316__(TypedStr, __NFUN_165__(SelectionPos, 1)));						
					}
					else
					{
						// End:0xF0
						if(__NFUN_173__(Key, 37))
						{
							SelectionPos = __NFUN_189__(0, __NFUN_166__(SelectionPos, 1));
							moveDir = 1;							
						}
						else
						{
							// End:0x11C
							if(__NFUN_173__(Key, 39))
							{
								SelectionPos = __NFUN_188__(__NFUN_314__(TypedStr), __NFUN_165__(SelectionPos, 1));
								moveDir = 2;
							}
						}
					}
				}
			}
		}
	}
	return true;
	return;
}

function KeyUp(int Key, float X, float Y)
{
	super.KeyUp(Key, X, Y);
	// End:0x29
	if(__NFUN_173__(Key, 17))
	{
		bCtrldown = false;
	}
	return;
}

function KeyDown(int Key, float X, float Y)
{
	super.KeyDown(Key, X, Y);
	// End:0x29
	if(__NFUN_173__(Key, 17))
	{
		bCtrldown = true;
	}
	return;
}

function AddMessage(string msg, string senderName)
{
	local LobbyMessageStruct temp;

	temp.id = senderName;
	temp.msg = msg;
	// End:0x38
	if(__NFUN_172__(string(Messages), maxBuffer))
	{
		Messages.Remove(0, 1);
	}
	Messages[Messages.Add(1)] = temp;
	return;
}

function ClearMsgs()
{
	Messages.Empty();
	ClearTypedStr();
	return;
}

function Reset()
{
	ClearMsgs();
	bTyping = false;
	return;
}

function ClearTypedStr()
{
	SelectionPos = 0;
	showPos = 0;
	showEndPos = 0;
	TypedStr = "";
	moveDir = 0;
	return;
}

function Tick(float Delta)
{
	__NFUN_209__(curBlinkTime, Delta);
	// End:0x35
	if(__NFUN_203__(curBlinkTime, cursorBlinkTime))
	{
		curBlinkTime = 0;
		bDrawCursor = __NFUN_145__(bDrawCursor);
	}
	super(UWindowWindow).Tick(Delta);
	return;
}

defaultproperties
{
	SayStr="<?int?dnWindow.UDukeLobbyChat.SayStr?>"
	cursorBlinkTime=1
	maxDisplayLines=9
	maxBuffer=64
	maxStringLength=128
	sideBuffer=0.1
	StringColour=(B=36,G=1,R=170,A=37)
	fTextScale=0.7
	LineSpacingY=0.098
}