/*******************************************************************************
 * UDukeScoreboardCW generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeScoreboardCW extends UDukePageWindow;

var UWindowWindow OffsetWindow;
var float ParentXOffset;
var float ParentYOffset;
var localized string FragGoal;
var localized string TeamGoal;
var localized string TimeLimit;
var localized string RoundTimeLimit;
var localized string TimeRemaining;
var localized string LastKilledByString;
var localized string RespawnString;
var localized string KillsHeader;
var localized string PingHeader;
var localized string TimeHeader;
var localized string DeathsHeader;
var UDukeScoreboardPlate ScoreboardPlates[32];
var int OrderedPRIIndex[32];
var float PlateOffset;
var float PlateSpacing;
var float PlateWidth;
var float PlateHeight;
var float PlateWinLeft;
var int ScorePage;
var int NumTilesToDisplay;
var int StartPlate;
var int PlatesPerPage;
var int Rank;
var Color WhiteColor;
var Color RedColor;
var Color LightGreenColor;
var Color DarkGreenColor;
var Color GreenColor;
var Color CyanColor;
var Color BlueColor;
var Color GoldColor;
var Color PurpleColor;
var Color TurqColor;
var Color GrayColor;
var Color LightBlueColor;
var Color DarkBlueColor;
var Color BlackColor;
var Color OrangeColor;

function Created()
{
	local int i;
	local PlayerReplicationInfo PRI;

	super.Created();
	i = 0;
	J0x0D:

	// End:0x98 [Loop If]
	if(__NFUN_169__(i, 32))
	{
		ScoreboardPlates[i] = UDukeScoreboardPlate(CreateWindow(class'UDukeScoreboardPlate', 0, float(__NFUN_162__(i, 48)), __NFUN_195__(__NFUN_196__(WinWidth, float(3)), float(2)), 48, self));
		ScoreboardPlates[i].Number = __NFUN_165__(i, 1);
		ScoreboardPlates[i].myParent = self;
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x0D;
	}
	UpdatePlayerList();
	PageChange(0);
	ResizePlates();
	return;
}

function CalcPlatesPerPage()
{
	local int oldPPP;

	oldPPP = PlatesPerPage;
	// End:0x21
	if(__NFUN_174__(oldPPP, PlatesPerPage))
	{
		PageChange(0);
	}
	return;
}

function ResizePlates()
{
	local int i, Count, RightCol, LeftCol, W, h;

	CalcPlatesPerPage();
	LeftCol = __NFUN_166__(int(__NFUN_196__(WinWidth, float(2))), 15);
	RightCol = __NFUN_165__(int(__NFUN_196__(WinWidth, float(2))), 15);
	Count = 0;
	PlateWidth = __NFUN_196__(__NFUN_195__(WinWidth, float(4)), float(5));
	i = 0;
	J0x53:

	// End:0x183 [Loop If]
	if(__NFUN_169__(i, 32))
	{
		// End:0x143
		if(__NFUN_145__(ScoreboardPlates[i].bHidden))
		{
			ScoreboardPlates[i].SetSize(PlateWidth, PlateHeight);
			W = int(ScoreboardPlates[i].WinWidth);
			h = int(ScoreboardPlates[i].WinHeight);
			PlateWinLeft = __NFUN_196__(__NFUN_199__(WinWidth, float(W)), 2);
			ScoreboardPlates[i].WinLeft = PlateWinLeft;
			ScoreboardPlates[i].WinTop = __NFUN_198__(PlateOffset, __NFUN_195__(float(Count), __NFUN_198__(float(h), PlateSpacing)));
			__NFUN_184__(Count);
			// [Explicit Continue]
			goto J0x179;
		}
		ScoreboardPlates[i].WinLeft = WinWidth;
		ScoreboardPlates[i].WinTop = WinHeight;
		J0x179:

		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x53;
	}
	return;
}

function Resized()
{
	super(UWindowWindow).Resized();
	ResizePlates();
	return;
}

function WindowShown()
{
	super(UWindowWindow).WindowShown();
	SetSize(ParentWindow.WinWidth, ParentWindow.WinHeight);
	UpdatePlayerList();
	PageChange(0);
	ResizePlates();
	return;
}

function PageUp()
{
	local int NewPage;

	NewPage = __NFUN_166__(ScorePage, 1);
	// End:0x24
	if(__NFUN_172__(NewPage, 0))
	{
		PageChange(NewPage);
	}
	return;
}

function PageDown()
{
	local int NewPage;
	local PlayerPawn P;

	P = GetPlayerOwner();
	NewPage = __NFUN_165__(ScorePage, 1);
	// End:0x52
	if(__NFUN_170__(P.GameReplicationInfo.NumPlayers, __NFUN_162__(__NFUN_165__(ScorePage, 1), PlatesPerPage)))
	{
		PageChange(NewPage);
	}
	return;
}

function PageChange(int NewPage)
{
	local int i;

	ScorePage = NewPage;
	StartPlate = __NFUN_162__(ScorePage, PlatesPerPage);
	i = 0;
	J0x24:

	// End:0x94 [Loop If]
	if(__NFUN_169__(i, 32))
	{
		// End:0x72
		if(__NFUN_148__(__NFUN_172__(i, StartPlate), __NFUN_169__(i, __NFUN_165__(StartPlate, PlatesPerPage))))
		{
			ScoreboardPlates[i].bHidden = false;
			// [Explicit Continue]
			goto J0x8A;
		}
		ScoreboardPlates[i].bHidden = true;
		J0x8A:

		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x24;
	}
	ResizePlates();
	return;
}

function Paint(Canvas C, float MouseX, float MouseY)
{
	local Font OldFont;
	local float XL, YL, W, h;
	local string MyTime;
	local DukePlayer P;
	local Texture Texture;
	local float xOffset, YOffset;
	local string S;
	local float Padding;
	local dnDeathmatchGameReplicationInfo GRI;
	local int Accuracy;

	GRI = dnDeathmatchGameReplicationInfo(GetPlayerOwner().GameReplicationInfo);
	// End:0x29
	if(__NFUN_339__(GRI, none))
	{
		return;
	}
	P = DukePlayer(GetPlayerOwner());
	// End:0x48
	if(__NFUN_339__(P, none))
	{
		return;
	}
	UpdatePlayerList();
	OldFont = C.Font;
	C.Font = C.BlockFontSmall;
	C.DrawColor = WhiteColor;
	Padding = 0;
	TextSize(C, "TEST", XL, YL);
	YOffset = 5;
	C.Font = C.BlockFont;
	S = "";
	// End:0x113
	if(__NFUN_340__(GRI, none))
	{
		S = __NFUN_319__(GRI.GameName);
	}
	// End:0x142
	if(__NFUN_308__(S, ""))
	{
		S = P.Level.Title;		
	}
	else
	{
		S = __NFUN_303__(__NFUN_303__(S, "/"), P.Level.Title);
	}
	TextSize(C, S, XL, YL);
	xOffset = __NFUN_196__(__NFUN_199__(WinWidth, XL), float(2));
	ClipText(C, xOffset, YOffset, S);
	__NFUN_209__(YOffset, __NFUN_198__(YL, Padding));
	S = "";
	// End:0x20B
	if(__NFUN_170__(GRI.GoalTeamScore, 0))
	{
		S = __NFUN_303__(TeamGoal, string(GRI.GoalTeamScore));		
	}
	else
	{
		// End:0x23E
		if(__NFUN_170__(GRI.FragLimit, 0))
		{
			S = __NFUN_303__(FragGoal, string(GRI.FragLimit));
		}
	}
	// End:0x2B2
	if(__NFUN_170__(GRI.RoundTimeLimit, 0))
	{
		MyTime = GetTime(GRI.RoundTimeLimit);
		// End:0x291
		if(__NFUN_308__(S, ""))
		{
			S = __NFUN_303__(RoundTimeLimit, MyTime);			
		}
		else
		{
			S = __NFUN_303__(__NFUN_303__(__NFUN_303__(S, "/"), RoundTimeLimit), MyTime);
		}
	}
	// End:0x331
	if(__NFUN_170__(GRI.TimeLimit, 0))
	{
		// End:0x2FD
		if(__NFUN_308__(S, ""))
		{
			S = __NFUN_302__(__NFUN_303__(TimeLimit, string(GRI.TimeLimit)), ":00");			
		}
		else
		{
			S = __NFUN_302__(__NFUN_303__(__NFUN_303__(__NFUN_303__(S, "/"), TimeLimit), string(GRI.TimeLimit)), ":00");
		}
	}
	// End:0x39C
	if(__NFUN_309__(S, ""))
	{
		TextSize(C, S, XL, YL);
		xOffset = __NFUN_196__(__NFUN_199__(WinWidth, XL), float(2));
		ClipText(C, xOffset, YOffset, S);
		__NFUN_209__(YOffset, __NFUN_198__(YL, Padding));
	}
	class'dnDeathmatchGameHUD'.static.GetPlaceString(dnDeathmatchGameHUD(P.MyHUD).Rank, dnDeathmatchGameHUD(P.MyHUD).bTiedScore, true, GetPlayerOwner().PlayerReplicationInfo.Score, S);
	// End:0x461
	if(__NFUN_309__(S, ""))
	{
		TextSize(C, S, XL, YL);
		xOffset = __NFUN_196__(__NFUN_199__(WinWidth, XL), float(2));
		ClipText(C, xOffset, YOffset, S);
	}
	S = "";
	__NFUN_209__(YOffset, YL);
	// End:0x4B1
	if(__NFUN_309__(P.LastKilledByPlayerName, ""))
	{
		S = __NFUN_303__(P.LastKilledByPlayerName, "fragged you");
	}
	// End:0x509
	if(__NFUN_309__(S, ""))
	{
		TextSize(C, S, XL, YL);
		xOffset = __NFUN_196__(__NFUN_199__(WinWidth, XL), float(2));
		ClipText(C, xOffset, YOffset, S);
	}
	C.DrawColor = GoldColor;
	C.Style = 1;
	xOffset = __NFUN_198__(__NFUN_198__(PlateWinLeft, float(class'UDukeScoreboardPlate'.default.ScoreboardTabs[0])), float(class'UDukeScoreboardPlate'.default.ScoreboardTabs[1]));
	__NFUN_209__(YOffset, __NFUN_195__(float(2), YL));
	S = KillsHeader;
	ClipText(C, xOffset, YOffset, S);
	__NFUN_209__(xOffset, float(class'UDukeScoreboardPlate'.default.ScoreboardTabs[2]));
	S = DeathsHeader;
	ClipText(C, xOffset, YOffset, S);
	__NFUN_209__(xOffset, float(class'UDukeScoreboardPlate'.default.ScoreboardTabs[3]));
	S = PingHeader;
	ClipText(C, xOffset, YOffset, S);
	__NFUN_209__(xOffset, float(class'UDukeScoreboardPlate'.default.ScoreboardTabs[4]));
	S = TimeHeader;
	ClipText(C, xOffset, YOffset, S);
	C.DrawColor = WhiteColor;
	// End:0x68A
	if(__NFUN_173__(P.AccuracyShots, 0))
	{
		Accuracy = 0;		
	}
	else
	{
		Accuracy = int(__NFUN_195__(__NFUN_196__(float(P.AccuracyHits), float(P.AccuracyShots)), 100));
	}
	S = __NFUN_302__(__NFUN_303__(__NFUN_303__(__NFUN_303__(__NFUN_303__(__NFUN_303__("Shots:", string(P.AccuracyShots)), "Hits:"), string(P.AccuracyHits)), "Accuracy:"), string(Accuracy)), "%");
	TextSize(C, S, XL, YL);
	xOffset = __NFUN_196__(__NFUN_199__(WinWidth, XL), float(2));
	YOffset = __NFUN_199__(WinHeight, YL);
	ClipText(C, xOffset, YOffset, S);
	super.Paint(C, MouseX, MouseY);
	return;
}

function string TwoDigitString(int Num)
{
	// End:0x1C
	if(__NFUN_169__(Num, 10))
	{
		return __NFUN_302__("0", string(Num));		
	}
	else
	{
		return string(Num);
	}
	return;
}

simulated function string GetTime(int ElapsedTime)
{
	local string S;
	local int seconds, Minutes, Hours;

	seconds = ElapsedTime;
	Minutes = __NFUN_163__(seconds, 60);
	Hours = __NFUN_163__(Minutes, 60);
	seconds = __NFUN_166__(seconds, __NFUN_162__(Minutes, 60));
	Minutes = __NFUN_166__(Minutes, __NFUN_162__(Hours, 60));
	// End:0x9C
	if(__NFUN_170__(Hours, 0))
	{
		S = __NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(TwoDigitString(Hours), ":"), TwoDigitString(Minutes)), ":"), TwoDigitString(seconds));		
	}
	else
	{
		S = __NFUN_302__(__NFUN_302__(TwoDigitString(Minutes), ":"), TwoDigitString(seconds));
	}
	return S;
	return;
}

function SortScores()
{
	local int i, j, Max, TempInt;
	local array<PlayerReplicationInfo> PRIArray;
	local PlayerPawn P;

	P = GetPlayerOwner();
	// End:0x32
	if(__NFUN_150__(__NFUN_339__(P, none), __NFUN_339__(P.GameReplicationInfo, none)))
	{
		return;
	}
	PRIArray = P.GameReplicationInfo.PRIArray;
	i = 0;
	J0x58:

	// End:0x18B [Loop If]
	if(__NFUN_169__(i, __NFUN_166__(string(PRIArray), 1)))
	{
		j = __NFUN_165__(i, 1);
		J0x79:

		// End:0x181 [Loop If]
		if(__NFUN_169__(j, string(PRIArray)))
		{
			// End:0x177
			if(__NFUN_150__(__NFUN_170__(PRIArray[OrderedPRIIndex[j]].Score, PRIArray[OrderedPRIIndex[i]].Score), __NFUN_148__(__NFUN_173__(PRIArray[OrderedPRIIndex[j]].Score, PRIArray[OrderedPRIIndex[i]].Score), __NFUN_169__(PRIArray[OrderedPRIIndex[i]].Deaths, PRIArray[OrderedPRIIndex[i]].Deaths))))
			{
				TempInt = OrderedPRIIndex[j];
				OrderedPRIIndex[j] = OrderedPRIIndex[i];
				OrderedPRIIndex[i] = TempInt;
			}
			__NFUN_184__(j);
			// [Loop Continue]
			goto J0x79;
		}
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x58;
	}
	return;
}

function UpdatePlayerList()
{
	local int i;
	local PlayerPawn P;

	P = GetPlayerOwner();
	// End:0x32
	if(__NFUN_150__(__NFUN_339__(P, none), __NFUN_339__(P.GameReplicationInfo, none)))
	{
		return;
	}
	i = 0;
	J0x39:

	// End:0x60 [Loop If]
	if(__NFUN_169__(i, 32))
	{
		OrderedPRIIndex[i] = i;
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x39;
	}
	SortScores();
	i = 0;
	J0x6D:

	// End:0x9E [Loop If]
	if(__NFUN_169__(i, 32))
	{
		ScoreboardPlates[i].PRIindex = -1;
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x6D;
	}
	i = 0;
	J0xA5:

	// End:0xF4 [Loop If]
	if(__NFUN_169__(i, string(P.GameReplicationInfo.PRIArray)))
	{
		ScoreboardPlates[i].PRIindex = OrderedPRIIndex[i];
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0xA5;
	}
	PageChange(ScorePage);
	return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
	local int i;

	switch(E)
	{
		// End:0x2A
		case 2:
			switch(C)
			{
				// End:0xFFFF
				default:
					super.NotifyFromControl(C, E);
					return;
					break;
			}
		// End:0xFFFF
		default:
			super.NotifyFromControl(C, E);
			return;
			break;
	}
	return;
}

defaultproperties
{
	FragGoal="<?int?dnWindow.UDukeScoreboardCW.FragGoal?>"
	TeamGoal="<?int?dnWindow.UDukeScoreboardCW.TeamGoal?>"
	TimeLimit="<?int?dnWindow.UDukeScoreboardCW.TimeLimit?>"
	RoundTimeLimit="<?int?dnWindow.UDukeScoreboardCW.RoundTimeLimit?>"
	TimeRemaining="<?int?dnWindow.UDukeScoreboardCW.TimeRemaining?>"
	LastKilledByString="<?int?dnWindow.UDukeScoreboardCW.LastKilledByString?>"
	RespawnString="<?int?dnWindow.UDukeScoreboardCW.RespawnString?>"
	KillsHeader="<?int?dnWindow.UDukeScoreboardCW.KillsHeader?>"
	PingHeader="<?int?dnWindow.UDukeScoreboardCW.PingHeader?>"
	TimeHeader="<?int?dnWindow.UDukeScoreboardCW.TimeHeader?>"
	DeathsHeader="<?int?dnWindow.UDukeScoreboardCW.DeathsHeader?>"
	PlateOffset=100
	PlateSpacing=3
	PlateHeight=20
	PlatesPerPage=25
	WhiteColor=(B=36,G=1,R=255,A=37)
	RedColor=(B=36,G=1,R=255,A=37)
	LightGreenColor=(B=36,G=1,R=0,A=37)
	DarkGreenColor=(B=36,G=1,R=32,A=37)
	GreenColor=(B=36,G=1,R=0,A=37)
	CyanColor=(B=36,G=1,R=0,A=37)
	BlueColor=(B=36,G=1,R=0,A=37)
	GoldColor=(B=36,G=1,R=255,A=37)
	PurpleColor=(B=36,G=1,R=255,A=37)
	TurqColor=(B=36,G=1,R=0,A=37)
	GrayColor=(B=36,G=1,R=200,A=37)
	LightBlueColor=(B=36,G=1,R=0,A=37)
	DarkBlueColor=(B=36,G=1,R=0,A=37)
	OrangeColor=(B=36,G=1,R=255,A=37)
	ClientAreaAlpha=0.2
}