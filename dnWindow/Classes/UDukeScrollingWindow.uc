/*******************************************************************************
 * UDukeScrollingWindow generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeScrollingWindow extends UWindowWindow;

var UWindowWindow ClientArea;
var UWindowVScrollbar VertSB;
var bool bLeftScrollbar;
var float DesiredClientHeight;
var float DesiredScrollAmount;

function Created()
{
	super.Created();
	VertSB = UWindowVScrollbar(CreateWindow(class'UWindowVScrollbar', 1, 1, 1, 1));
	VertSB.bFramedWindow = true;
	ClientArea = CreateWindow(class'UWindowWindow', 1, 1, 1, 1);
	return;
}

function UWindowWindow CreateSubWindow(class<UWindowWindow> WndClass, optional float X, optional float Y, optional float W, optional float h, optional UWindowWindow OwnerW, optional bool bUnique, optional name ObjectName)
{
	return ClientArea.CreateWindow(WndClass, X, Y, W, h, OwnerW, bUnique, ObjectName);
	return;
}

function BeforePaint(Canvas C, float X, float Y)
{
	// End:0x21
	if(bLeftScrollbar)
	{
		VertSB.WinLeft = 0;		
	}
	else
	{
		VertSB.WinLeft = __NFUN_199__(WinWidth, float(__NFUN_165__(LookAndFeel.SBPosIndicator.W, 1)));
	}
	VertSB.WinTop = 0;
	VertSB.WinWidth = float(LookAndFeel.SBPosIndicator.W);
	VertSB.WinHeight = WinHeight;
	VertSB.SetRange(0, DesiredClientHeight, VertSB.WinHeight, DesiredScrollAmount);
	// End:0xF8
	if(bLeftScrollbar)
	{
		ClientArea.WinLeft = VertSB.WinWidth;		
	}
	else
	{
		ClientArea.WinLeft = 0;
	}
	ClientArea.WinTop = __NFUN_194__(VertSB.pos);
	ClientArea.WinWidth = __NFUN_199__(WinWidth, VertSB.WinWidth);
	ClientArea.WinHeight = DesiredClientHeight;
	super.BeforePaint(C, X, Y);
	return;
}

function WindowEvent(UWindow.UWindowWindow.WinMessage msg, Canvas C, float X, float Y, int Key)
{
	// End:0x93
	if(__NFUN_173__(int(msg), int(7)))
	{
		switch(Key)
		{
			// End:0x54
			case int(Root.Console.236):
				VertSB.Scroll(__NFUN_194__(VertSB.ScrollAmount));
				// End:0x93
				break;
			// End:0x90
			case int(Root.Console.237):
				VertSB.Scroll(VertSB.ScrollAmount);
				// End:0x93
				break;
			// End:0xFFFF
			default:
				break;
		}
	}
	else
	{
		super.WindowEvent(msg, C, X, Y, Key);
		return;
	}
}

function ScrollTo(float X, float Y)
{
	// End:0x31
	if(__NFUN_200__(Y, VertSB.pos))
	{
		VertSB.pos = Y;		
	}
	else
	{
		// End:0x6D
		if(__NFUN_201__(Y, __NFUN_198__(VertSB.pos, WinHeight)))
		{
			VertSB.pos = __NFUN_199__(Y, WinHeight);
		}
	}
	return;
}

defaultproperties
{
	DesiredScrollAmount=20
}