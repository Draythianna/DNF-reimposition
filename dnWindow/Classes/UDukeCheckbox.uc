/*******************************************************************************
 * UDukeCheckbox generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeCheckbox extends UWindowDialogControl;

var float CheckX;
var float CheckY;
var float CheckWidth;
var Region OverRegion;
var Region CheckRegion;
var Region OpenCheckRegion;
var Region OverCheckRegion;
var bool bChecked;
var SSoundInfo SoundCheckboxInfo;
var float SelectedTime;
var float TextScaleX;
var float TextScaleY;
var float TextScaleXMod;
var float TextScaleYMod;
var Color DrawColor;
var float Alpha;
var bool bGreyedOut;
var Color DarkGreyColor;

simulated function Created()
{
	super.Created();
	Tick(0.5);
	return;
}

function Tick(float Delta)
{
	local float Alpha;

	super(UWindowWindow).Tick(Delta);
	// End:0x30
	if(__NFUN_339__(ParentWindow.ChildInFocus, self))
	{
		__NFUN_209__(SelectedTime, Delta);		
	}
	else
	{
		__NFUN_210__(SelectedTime, __NFUN_195__(2, Delta));
	}
	SelectedTime = __NFUN_227__(SelectedTime, 0, class'UWindowScene'.default.SelectionTransitionTime);
	Alpha = __NFUN_196__(SelectedTime, class'UWindowScene'.default.SelectionTransitionTime);
	TextScaleX = __NFUN_228__(Alpha, class'UWindowScene'.default.TTFontScale, __NFUN_195__(class'UWindowScene'.default.SelectedXScale, class'UWindowScene'.default.TTFontScale));
	TextScaleY = __NFUN_228__(Alpha, class'UWindowScene'.default.TTFontScale, __NFUN_195__(class'UWindowScene'.default.SelectedYScale, class'UWindowScene'.default.TTFontScale));
	DrawColor = __NFUN_338__(Alpha, class'UWindowScene'.default.GreyColor, class'UWindowScene'.default.OrangeColor);
	return;
}

simulated function Click(float X, float Y)
{
	// End:0x0B
	if(bGreyedOut)
	{
		return;
	}
	Notify(2);
	bChecked = __NFUN_145__(bChecked);
	GetPlayerOwner().PlaySoundInfo(0, SoundCheckboxInfo);
	Notify(1);
	return;
}

function KeyDown(int Key, float X, float Y)
{
	local PlayerPawn P;

	P = Root.GetPlayerOwner();
	switch(Key)
	{
		// End:0x2E
		case int(P.13):
		// End:0x3E
		case int(P.210):
		// End:0x61
		case int(P.204):
			Click(X, Y);
			// End:0x64
			break;
		// End:0xFFFF
		default:
			break;
	}
	super.KeyDown(Key, X, Y);
	return;
}

function BeforePaint(Canvas C, float X, float Y)
{
	local float XL, YL;

	super.BeforePaint(C, X, Y);
	C.Font = C.TallFont;
	TextSize(C, Text, XL, YL, TextScaleX, TextScaleY);
	TextX = __NFUN_195__(30, class'UWindowScene'.default.WinScaleY);
	TextY = __NFUN_196__(__NFUN_199__(WinHeight, YL), float(2));
	CheckWidth = __NFUN_199__(WinHeight, __NFUN_195__(float(10), class'UWindowScene'.default.WinScaleY));
	CheckY = __NFUN_196__(__NFUN_199__(WinHeight, CheckWidth), float(2));
	CheckX = __NFUN_199__(__NFUN_199__(WinWidth, CheckWidth), __NFUN_195__(float(40), class'UWindowScene'.default.WinScaleY));
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local float TextXL, TextYL;

	// End:0x23
	if(__NFUN_145__(bGreyedOut))
	{
		C.DrawColor = DrawColor;		
	}
	else
	{
		C.DrawColor = DarkGreyColor;
	}
	C.Font = C.TallFont;
	TextSize(C, Text, TextXL, TextYL, __NFUN_195__(TextScaleX, TextScaleXMod), __NFUN_195__(TextScaleY, TextScaleYMod));
	ClipText(C, TextX, TextY, Text,, __NFUN_195__(TextScaleX, TextScaleXMod), __NFUN_195__(TextScaleY, TextScaleYMod), Alpha, 2);
	// End:0x158
	if(bChecked)
	{
		// End:0xF9
		if(__NFUN_145__(bGreyedOut))
		{
			C.DrawColor = class'UWindowScene'.default.WhiteColor;
		}
		DrawStretchedTextureSegment(C, CheckX, CheckY, CheckWidth, __NFUN_195__(0.89, CheckWidth), float(CheckRegion.X), float(CheckRegion.Y), float(CheckRegion.W), float(CheckRegion.h), class'Backdrop', Alpha);		
	}
	else
	{
		DrawStretchedTextureSegment(C, CheckX, CheckY, CheckWidth, __NFUN_195__(0.89, CheckWidth), float(OpenCheckRegion.X), float(OpenCheckRegion.Y), float(OpenCheckRegion.W), float(OpenCheckRegion.h), class'Backdrop', Alpha);
	}
	// End:0x21C
	if(__NFUN_339__(ParentWindow.ChildInFocus, self))
	{
		class'UWindowScene'.static.DrawSelectionIcon(C, __NFUN_195__(-8, C.FixedScale), __NFUN_198__(TextY, __NFUN_195__(0.5, TextYL)), C.FixedScale, Alpha);
	}
	return;
}

function setTextScaleMod(float X, float Y)
{
	TextScaleXMod = X;
	TextScaleYMod = Y;
	return;
}

function GreyOut()
{
	bGreyedOut = true;
	return;
}

function Ungrey()
{
	bGreyedOut = false;
	return;
}

defaultproperties
{
	OverRegion=(X=0,Y=16,W=486,h=40)
	CheckRegion=(X=72,Y=66,W=53,h=50)
	OpenCheckRegion=(X=13,Y=66,W=53,h=50)
	OverCheckRegion=(X=132,Y=66,W=53,h=50)
	SoundCheckboxInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=/* Array type was not detected. */,Y[97]=/* Unknown default property type! */,Y=0,VolumePrefab=0,Slots=/* Array type was not detected. */,Y=/* Unknown default property type! */,Volume=0.5,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	TextScaleXMod=1
	TextScaleYMod=1
	Alpha=1
	DarkGreyColor=(B=36,G=1,R=103,A=37)
}