/*******************************************************************************
 * dnMapListWindow generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnMapListWindow extends UWindowFramedWindow;

var UWindowSmallCloseButton CloseButton;

function Created()
{
	bStatusBar = false;
	bSizable = true;
	super.Created();
	WinWidth = float(__NFUN_188__(400, int(__NFUN_199__(Root.WinWidth, float(50)))));
	WinHeight = float(__NFUN_188__(210, int(__NFUN_199__(Root.WinHeight, float(50)))));
	WinLeft = __NFUN_199__(__NFUN_196__(Root.WinWidth, float(2)), __NFUN_196__(WinWidth, float(2)));
	WinTop = __NFUN_199__(__NFUN_196__(Root.WinHeight, float(2)), __NFUN_196__(WinHeight, float(2)));
	CloseButton = UWindowSmallCloseButton(CreateWindow(class'UWindowSmallCloseButton', __NFUN_199__(WinWidth, float(56)), __NFUN_199__(WinHeight, float(24)), 48, 16));
	MinWinWidth = 200;
	return;
}

function Resized()
{
	super.Resized();
	ClientArea.SetSize(ClientArea.WinWidth, __NFUN_199__(ClientArea.WinHeight, float(24)));
	CloseButton.WinLeft = __NFUN_199__(__NFUN_198__(ClientArea.WinLeft, ClientArea.WinWidth), float(52));
	CloseButton.WinTop = __NFUN_198__(__NFUN_198__(ClientArea.WinTop, ClientArea.WinHeight), float(4));
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local Texture t;

	t = GetLookAndFeelTexture();
	DrawUpBevel(C, ClientArea.WinLeft, __NFUN_198__(ClientArea.WinTop, ClientArea.WinHeight), ClientArea.WinWidth, 24, t);
	super.Paint(C, X, Y);
	return;
}

defaultproperties
{
	ClientClass='dnMapListCW'
	WindowTitle="<?int?dnWindow.dnMapListWindow.WindowTitle?>"
}