/*******************************************************************************
 * UDukeCreateMultiWindow generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeCreateMultiWindow extends UDukeFramedWindow;

var UDukeEmbeddedClient ScrollClient;

function BeforePaint(Canvas C, float X, float Y)
{
	local float ClientHeight;
	local Region ClientAreaRegion;

	// End:0x1A7
	if(__NFUN_340__(ScrollClient, none))
	{
		ClientAreaRegion = LookAndFeel.FW_GetClientArea(self);
		ClientHeight = ScrollClient.ClientArea.DesiredHeight;
		bShowVertSB = __NFUN_201__(ClientHeight, ScrollClient.WinHeight);
		// End:0x157
		if(__NFUN_148__(bShowVertSB, __NFUN_145__(bPlayingSmack)))
		{
			// End:0x9A
			if(__NFUN_145__(VertSB.bWindowVisible))
			{
				VertSB.ShowWindow();
			}
			VertSB.WinTop = float(ClientAreaRegion.Y);
			VertSB.WinLeft = __NFUN_199__(__NFUN_199__(WinWidth, float(LookAndFeel.SBPosIndicator.W)), float(25));
			VertSB.WinWidth = float(LookAndFeel.SBPosIndicator.W);
			VertSB.WinHeight = float(ClientAreaRegion.h);
			VertSB.SetRange(0, ClientHeight, VertSB.WinHeight, 10);			
		}
		else
		{
			VertSB.HideWindow();
			VertSB.pos = 0;
		}
		ScrollClient.ClientArea.WinTop = __NFUN_194__(VertSB.pos);
	}
	super(UWindowFramedWindow).BeforePaint(C, X, Y);
	return;
}

defaultproperties
{
	ClientClass='UDukeCreateMultiSC'
	WindowTitle="<?int?dnWindow.UDukeCreateMultiWindow.WindowTitle?>"
	bStatusBar=true
}