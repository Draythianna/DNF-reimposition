/*******************************************************************************
 * UDukeLobbyPlayerStateList generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeLobbyPlayerStateList extends UWindowDialogControl
	dependson(UDukeKickMessageBox)
	dependson(UDukeLobbyMenuButton)
	dependson(UDukeSceneMultiPlayerMenuLobby)
	dependson(UDukeKickButton);

const PLAYER_LIST_BUTTONS_WIDTH = 375;
const PLAYER_LIST_BUTTONS_HEIGHT = 36;
const CHECK_BOXES_W_H = 32;
const VOIP_BOX_W = 75;
const kMAXPLAYERS = 8;

var array<SAgentPlayer> PlayerList;
var array<UDukeLobbyMenuButton> PlayerListButtons;
var SAgentPlayer CurrentPlayer;
var float PlayerListButtonTextWidth;
var array<UDukeReadyCheckBox> ReadyCheckBoxes;
var array<UDukeVoIPCheckbox> VoIPCheckBoxes;
var array<UDukeKickButton> KickButtons;
var bool bKillChildInFocus;
var int iSelectedPlayer;
var float EntrySpacing;
var float EntryPadding;
var float borderwidth;
var bool bRenderTeamStyle;
var string PlayerNameLabel;
var string PingLabel;
var string ReadyLabel;
var string VoiceLabel;
var string LevelLabel;
var string KickLabel;
var string TeamDuke;
var string TeamEDF;
var Color TeamColor[2];
var Texture HGridLine;
var Texture VGridLine;
var float VoiceColumnPct;
var float LevelColumnPct;
var float NameColumnPct;
var float PingColumnPct;
var float ReadyColumnPct;
var float KickColumnPct;
var float TeamVoiceColumnPct;
var float TeamLevelColumnPct;
var float TeamNameColumnPct;
var float TeamPingColumnPct;
var float TeamReadyColumnPct;
var float TeamKickColumnPct;
var Texture HighLightIcon;
var UDukeKickButton SelectedKickButton;
var float TeamHeaderOffsetYPct;
var float TeamNameFontScale;
var float TeamNameLabelXPct;
var float Team0NameLabelYPct;
var float Team1NameLabelYPct;
var float TeamHeaderFontScale;
var float FirstTeamEntryYOffset;
var float TeamFontModPct;
var float HoriLineOffset;
var float VertLineBottomPct;
var float HoriLeftPct;
var float HostHoriRightPct;
var float ClientHoriRightPct;
var float TeamHoriLineOffset;
var float Team0VertLineBottomPct;
var float Team1VertLineBottomPct;
var float TeamHoriLeftPct;
var float TeamHostHoriRightPct;
var float TeamClientHoriRightPct;
var float Team1HoriLeftPct;
var float Team1HoriRightPct;
var float SoloSelectionIconXOffset;
var float TeamSelectionIconXOffset;
var float PCSoloSelectionIconXOffset;
var float PCTeamSelectionIconXOffset;
var bool bUsePCIconLocations;
var SSoundInfo KickSoundInfo;
var localized string muteString;
var localized string unmuteString;
var delegate<ToggleReadyButton> __ToggleReadyButton__Delegate;
var delegate<ToggleKickPlayerButton> __ToggleKickPlayerButton__Delegate;

function Created()
{
	local int i;

	super.Created();
	string(VoIPCheckBoxes) = 8;
	string(KickButtons) = 8;
	string(ReadyCheckBoxes) = 8;
	string(PlayerListButtons) = 8;
	EntryPadding = __NFUN_195__(2, class'UWindowScene'.default.WinScaleY);
	i = 0;
	J0x4D:

	// End:0x1DB [Loop If]
	if(__NFUN_169__(i, 8))
	{
		VoIPCheckBoxes[i] = UDukeVoIPCheckbox(CreateWindow(class'UDukeVoIPCheckbox', 1, 1, 1, 1, self));
		VoIPCheckBoxes[i].Register(self);
		VoIPCheckBoxes[i].HideWindow();
		KickButtons[i] = UDukeKickButton(CreateWindow(class'UDukeKickButton', 1, 1, 1, 1, self));
		KickButtons[i].Register(self);
		KickButtons[i].CancelAcceptsFocus();
		KickButtons[i].HideWindow();
		ReadyCheckBoxes[i] = UDukeReadyCheckBox(CreateWindow(class'UDukeReadyCheckBox', 1, 1, 1, 1, self));
		ReadyCheckBoxes[i].Register(self);
		ReadyCheckBoxes[i].HideWindow();
		PlayerListButtons[i] = UDukeLobbyMenuButton(CreateWindow(class'UDukeLobbyMenuButton', 1, 1, 1, 1, self));
		PlayerListButtons[i].Register(self);
		__NFUN_182__(i);
		// [Loop Continue]
		goto J0x4D;
	}
	PlayerNameLabel = __NFUN_356__("UDukeSceneMultiPlayerScoreboardBase", "PlayerName", "dnWindow");
	PingLabel = __NFUN_356__("UDukeSceneMultiPlayerScoreboardBase", "Ping", "dnWindow");
	ReadyLabel = __NFUN_356__("UDukeSceneMultiPlayerMenuLobby", "ReadyButtonText", "dnWindow");
	VoiceLabel = __NFUN_356__("UDukeSceneMultiPlayerMenuLobby", "VoiceLabel", "dnWindow");
	LevelLabel = __NFUN_356__("UDukeSceneMultiPlayerMenuLobby", "LevelLabel", "dnWindow");
	KickLabel = __NFUN_356__("UDukeSceneMultiPlayerMenuLobby", "KickLabel", "dnWindow");
	TeamDuke = __NFUN_356__("TeamNames", "Duke", "dnWindow");
	TeamEDF = __NFUN_356__("TeamNames", "EDF", "dnWindow");
	muteString = __NFUN_356__("UDukeSceneMultiPlayerMenuLobby", "MuteString", "dnWindow");
	unmuteString = __NFUN_356__("UDukeSceneMultiPlayerMenuLobby", "UnMuteString", "dnWindow");
	return;
}

function Tick(float Delta)
{
	local SAgentPlayer temp;
	local int i, j, focusIndex;

	UDukeRootWindow(Root).AgentOnline.GetAgentPlayers(PlayerList);
	UDukeRootWindow(Root).AgentOnline.GetLocalAgentPlayer(CurrentPlayer);
	// End:0xFB
	if(bRenderTeamStyle)
	{
		i = 0;
		J0x58:

		// End:0xFB [Loop If]
		if(__NFUN_169__(i, __NFUN_166__(string(PlayerList), 1)))
		{
			j = __NFUN_165__(i, 1);
			J0x79:

			// End:0xF1 [Loop If]
			if(__NFUN_169__(j, string(PlayerList)))
			{
				// End:0xE7
				if(__NFUN_170__(PlayerList[i].Team, PlayerList[j].Team))
				{
					temp = PlayerList[j];
					PlayerList[j] = PlayerList[i];
					PlayerList[i] = temp;
				}
				__NFUN_184__(j);
				// [Loop Continue]
				goto J0x79;
			}
			__NFUN_184__(i);
			// [Loop Continue]
			goto J0x58;
		}
	}
	focusIndex = -1;
	i = 0;
	J0x10D:

	// End:0x14B [Loop If]
	if(__NFUN_169__(i, string(PlayerListButtons)))
	{
		// End:0x141
		if(__NFUN_339__(PlayerListButtons[i], ChildInFocus))
		{
			focusIndex = i;
			// [Explicit Break]
			goto J0x14B;
		}
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x10D;
	}
	J0x14B:

	// End:0x183
	if(__NFUN_174__(focusIndex, -1))
	{
		// End:0x183
		if(__NFUN_172__(focusIndex, string(PlayerList)))
		{
			ParentWindow.NavUp(self);
			bKillChildInFocus = true;
		}
	}
	super(UWindowWindow).Tick(Delta);
	return;
}

function BeforePaint(Canvas C, float X, float Y)
{
	local int i;

	super.BeforePaint(C, X, Y);
	i = 0;
	J0x1C:

	// End:0xC0 [Loop If]
	if(__NFUN_169__(i, 8))
	{
		VoIPCheckBoxes[i].HideWindow();
		KickButtons[i].HideWindow();
		ReadyCheckBoxes[i].HideWindow();
		PlayerListButtons[i].HideWindow();
		VoIPCheckBoxes[i].ButtonIdx = -1;
		ReadyCheckBoxes[i].CheckBoxIndex = -1;
		__NFUN_182__(i);
		// [Loop Continue]
		goto J0x1C;
	}
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local int i;
	local bool IsCurrentlyMuted;

	super(UWindowWindow).Paint(C, X, Y);
	UWindowScene(ParentWindow).DrawBackgroundBox(C, 0, 0, WinWidth, __NFUN_199__(WinHeight, float(3)));
	C.DrawColor = class'UWindowScene'.default.GreyColor;
	// End:0x9E
	if(bRenderTeamStyle)
	{
		PlayerListButtonTextWidth = __NFUN_199__(__NFUN_195__(WinWidth, TeamPingColumnPct), __NFUN_195__(WinWidth, TeamNameColumnPct));
		PaintTeamBased(C);		
	}
	else
	{
		PlayerListButtonTextWidth = __NFUN_199__(__NFUN_195__(WinWidth, __NFUN_199__(PingColumnPct, 0.03)), __NFUN_195__(WinWidth, NameColumnPct));
		PaintSoloBased(C);
	}
	// End:0x1A0
	if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_339__(ParentWindow.ChildInFocus, self), __NFUN_174__(CurrentPlayer.PlayerRef, PlayerList[iSelectedPlayer].PlayerRef)), __NFUN_174__(int(PlayerList[iSelectedPlayer].VoipState), int(0))), __NFUN_145__(UWindowScene(ParentWindow).bIsHidingKeyButtons)))
	{
		IsCurrentlyMuted = __NFUN_173__(int(PlayerList[iSelectedPlayer].VoipState), int(1));
		// End:0x182
		if(IsCurrentlyMuted)
		{
			UDukeSceneMultiPlayerMenuLobby(ParentWindow).updateMuteCallout(unmuteString, true);			
		}
		else
		{
			UDukeSceneMultiPlayerMenuLobby(ParentWindow).updateMuteCallout(muteString, true);
		}		
	}
	else
	{
		UDukeSceneMultiPlayerMenuLobby(ParentWindow).updateMuteCallout(" ", false);
	}
	return;
}

function AfterPaint(Canvas C, float X, float Y)
{
	super(UWindowWindow).AfterPaint(C, X, Y);
	return;
}

function string getMaxString(string PlayerName)
{
	local int strLength;

	strLength = __NFUN_314__(PlayerName);
	// End:0x3E
	if(__NFUN_170__(strLength, 16))
	{
		PlayerName = __NFUN_317__(PlayerName, 16);
		PlayerName = __NFUN_302__(PlayerName, "... ");
	}
	return PlayerName;
	return;
}

function PaintSoloBased(Canvas C)
{
	local int i;
	local PlayerPawn P;
	local float YOffset, textOffset, ReadyOffset, XL, YL, VoIPXL,
		VoIPYL, LvlXL, LvlYL, NameXL, NameYL,
		PingXL, PingYL, ReadyXL, ReadyYL;

	local string HostPing;
	local float textscale, NameTextScaleX, NameTextScaleY;
	local int Level;
	local string PlayerName;

	C.Font = C.TallFont;
	textscale = __NFUN_195__(class'UWindowScene'.default.TTFontScale, 0.75);
	P = GetPlayerOwner();
	textOffset = __NFUN_195__(5, class'UWindowScene'.default.WinScaleY);
	YOffset = 10;
	TextSize(C, VoiceLabel, VoIPXL, VoIPYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, VoiceColumnPct), YOffset, VoiceLabel,, textscale, textscale,, 2);
	TextSize(C, LevelLabel, LvlXL, LvlYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, LevelColumnPct), YOffset, LevelLabel,, textscale, textscale,, 2);
	TextSize(C, PlayerNameLabel, NameXL, NameYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, NameColumnPct), YOffset, PlayerNameLabel,, textscale, textscale,, 2);
	TextSize(C, PingLabel, PingXL, PingYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, PingColumnPct), YOffset, PingLabel,, textscale, textscale,, 2);
	TextSize(C, ReadyLabel, ReadyXL, ReadyYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, ReadyColumnPct), YOffset, ReadyLabel,, textscale, textscale,, 2);
	// End:0x2A9
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		TextSize(C, KickLabel, ReadyXL, ReadyYL, textscale, textscale);
		ClipText(C, __NFUN_195__(WinWidth, KickColumnPct), YOffset, KickLabel,, textscale, textscale,, 2);
	}
	C.DrawColor = class'UWindowScene'.default.WhiteColor;
	// End:0x34A
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		DrawStretchedTexture(C, __NFUN_195__(WinWidth, HoriLeftPct), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), __NFUN_195__(WinWidth, HostHoriRightPct), 8, HGridLine, 1,,, true);		
	}
	else
	{
		DrawStretchedTexture(C, __NFUN_195__(WinWidth, HoriLeftPct), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), __NFUN_195__(WinWidth, ClientHoriRightPct), 8, HGridLine, 1,,, true);
	}
	__NFUN_209__(YOffset, __NFUN_198__(NameYL, float(10)));
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, LevelColumnPct), HoriLineOffset), YOffset, 8, __NFUN_195__(WinHeight, VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, NameColumnPct), HoriLineOffset), YOffset, 8, __NFUN_195__(WinHeight, VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, PingColumnPct), HoriLineOffset), YOffset, 8, __NFUN_195__(WinHeight, VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, ReadyColumnPct), HoriLineOffset), YOffset, 8, __NFUN_195__(WinHeight, VertLineBottomPct), VGridLine, 1,,, true);
	// End:0x51F
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, KickColumnPct), HoriLineOffset), YOffset, 8, __NFUN_195__(WinHeight, VertLineBottomPct), VGridLine, 1,,, true);
	}
	textscale = DetermineFontScale(C, YOffset, EntrySpacing);
	// End:0xD0D
	if(__NFUN_170__(string(PlayerList), 0))
	{
		i = 0;
		J0x54D:

		// End:0xD0D [Loop If]
		if(__NFUN_169__(i, string(PlayerList)))
		{
			// End:0x59E
			if(__NFUN_173__(PlayerList[i].PlayerRef, CurrentPlayer.PlayerRef))
			{
				C.DrawColor = class'UWindowScene'.default.WhiteColor;				
			}
			else
			{
				C.DrawColor = class'UWindowScene'.default.GreyColor;
			}
			VoIPCheckBoxes[i].CurrentVoipState = PlayerList[i].VoipState;
			VoIPCheckBoxes[i].WinTop = YOffset;
			ReadyCheckBoxes[i].WinTop = YOffset;
			KickButtons[i].WinTop = YOffset;
			VoIPCheckBoxes[i].WinLeft = __NFUN_195__(WinWidth, VoiceColumnPct);
			VoIPCheckBoxes[i].WinWidth = __NFUN_195__(75, class'UWindowScene'.default.WinScaleX);
			VoIPCheckBoxes[i].WinHeight = __NFUN_195__(32, class'UWindowScene'.default.WinScaleY);
			ReadyCheckBoxes[i].WinLeft = __NFUN_195__(WinWidth, ReadyColumnPct);
			ReadyCheckBoxes[i].WinWidth = __NFUN_195__(32, class'UWindowScene'.default.WinScaleX);
			ReadyCheckBoxes[i].WinHeight = __NFUN_195__(32, class'UWindowScene'.default.WinScaleY);
			KickButtons[i].WinLeft = __NFUN_195__(WinWidth, KickColumnPct);
			KickButtons[i].WinWidth = __NFUN_195__(__NFUN_195__(float(KickButtons[i].UpTexture.__NFUN_1191__()), class'UWindowScene'.default.WinScaleX), 0.5);
			KickButtons[i].WinHeight = __NFUN_195__(__NFUN_195__(float(KickButtons[i].UpTexture.__NFUN_1192__()), class'UWindowScene'.default.WinScaleY), 0.5);
			KickButtons[i].ButtonIdx = i;
			// End:0x869
			if(__NFUN_174__(PlayerList[i].PlayerRef, CurrentPlayer.PlayerRef))
			{
				// End:0x869
				if(__NFUN_148__(UDukeRootWindow(Root).AgentOnline.IsHost(), __NFUN_145__(GetPlayerOwner().__NFUN_994__())))
				{
					KickButtons[i].ShowWindow();
				}
			}
			VoIPCheckBoxes[i].ButtonIdx = i;
			VoIPCheckBoxes[i].ShowWindow();
			ReadyCheckBoxes[i].CheckBoxIndex = i;
			ReadyCheckBoxes[i].bChecked = PlayerList[i].IsReady;
			ReadyCheckBoxes[i].ShowWindow();
			// End:0x91A
			if(bUsePCIconLocations)
			{
				PlayerListButtons[i].selectionIconOffset = PCSoloSelectionIconXOffset;				
			}
			else
			{
				PlayerListButtons[i].selectionIconOffset = SoloSelectionIconXOffset;
			}
			// End:0x973
			if(__NFUN_145__(__NFUN_414__()))
			{
				PlayerListButtons[i].TextScaleXMod = 1;
				PlayerListButtons[i].TextScaleYMod = 1;
			}
			PlayerListButtons[i].getTextScale(NameTextScaleX, NameTextScaleY);
			TextSize(C, PlayerList[i].PlayerName, XL, YL, NameTextScaleX, NameTextScaleY);
			PlayerName = PlayerList[i].PlayerName;
			// End:0x9F8
			if(__NFUN_201__(XL, PlayerListButtonTextWidth))
			{
				PlayerName = getMaxString(PlayerName);
			}
			PlayerListButtons[i].SetText(PlayerName);
			PlayerListButtons[i].NavRight = PlayerListButtons[i];
			// End:0xA6E
			if(__NFUN_169__(__NFUN_165__(i, 1), string(PlayerList)))
			{
				PlayerListButtons[i].NavDown = PlayerListButtons[__NFUN_165__(i, 1)];				
			}
			else
			{
				PlayerListButtons[i].NavDown = PlayerListButtons[0];
			}
			// End:0xAC0
			if(__NFUN_172__(__NFUN_166__(i, 1), 0))
			{
				PlayerListButtons[i].NavUp = PlayerListButtons[__NFUN_166__(i, 1)];				
			}
			else
			{
				PlayerListButtons[i].NavUp = none;
			}
			PlayerListButtons[i].ButtonIdx = i;
			PlayerListButtons[i].WinLeft = __NFUN_195__(WinWidth, NameColumnPct);
			PlayerListButtons[i].WinTop = YOffset;
			PlayerListButtons[i].WinWidth = __NFUN_195__(375, class'UWindowScene'.default.WinScaleX);
			PlayerListButtons[i].WinHeight = __NFUN_195__(36, class'UWindowScene'.default.WinScaleY);
			PlayerListButtons[i].ShowWindow();
			textOffset = __NFUN_199__(__NFUN_198__(YOffset, __NFUN_196__(EntrySpacing, 2)), __NFUN_196__(YL, 2));
			// End:0xC48
			if(__NFUN_172__(PlayerList[i].HostPing, 0))
			{
				TextSize(C, string(PlayerList[i].HostPing), XL, YL, textscale, textscale);
				ClipText(C, __NFUN_195__(WinWidth, PingColumnPct), textOffset, string(PlayerList[i].HostPing), false, textscale, textscale,, 2);
			}
			UDukeRootWindow(Root).AgentOnline.GetLevel(PlayerList[i].PlayerRef, Level);
			// End:0xCDF
			if(__NFUN_170__(Level, 0))
			{
				TextSize(C, string(Level), XL, YL, textscale, textscale);
				ClipText(C, __NFUN_195__(WinWidth, LevelColumnPct), textOffset, string(Level), false, textscale, textscale,, 2);
			}
			__NFUN_209__(YOffset, __NFUN_198__(EntrySpacing, __NFUN_195__(EntryPadding, class'UWindowScene'.default.WinScaleY)));
			__NFUN_182__(i);
			// [Loop Continue]
			goto J0x54D;
		}
	}
	return;
}

function PaintTeamBased(Canvas C)
{
	local int i;
	local PlayerPawn P;
	local float YOffset, textOffset, ReadyOffset, Team1HeaderOffset, Team2HeaderOffset, YOffsetDuke,
		YOffsetEDF, XL, YL, VoIPXL, VoIPYL,
		LvlXL, LvlYL, NameXL, NameYL, PingXL,
		PingYL, ReadyXL, ReadyYL, TeamXL, TeamYL;

	local Font OldFont;
	local string HostPing;
	local int Level;
	local float textscale, NameTextScaleX, NameTextScaleY;
	local string PlayerName;

	P = GetPlayerOwner();
	textscale = __NFUN_195__(class'UWindowScene'.default.TTFontScale, TeamNameFontScale);
	C.DrawColor = TeamColor[0];
	TextSize(C, TeamDuke, TeamXL, TeamYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamNameLabelXPct), __NFUN_195__(WinHeight, Team0NameLabelYPct), TeamDuke,, textscale, textscale,, 2);
	C.DrawColor = TeamColor[1];
	TextSize(C, TeamEDF, TeamXL, TeamYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamNameLabelXPct), __NFUN_195__(WinHeight, Team1NameLabelYPct), TeamEDF,, textscale, textscale,, 2);
	C.DrawColor = WhiteColor;
	textscale = __NFUN_195__(class'UWindowScene'.default.TTFontScale, TeamHeaderFontScale);
	YOffset = __NFUN_195__(WinHeight, TeamHeaderOffsetYPct);
	TextSize(C, VoiceLabel, VoIPXL, VoIPYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamVoiceColumnPct), YOffset, VoiceLabel,, textscale, textscale,, 2);
	TextSize(C, LevelLabel, LvlXL, LvlYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamLevelColumnPct), YOffset, LevelLabel,, textscale, textscale,, 2);
	TextSize(C, PlayerNameLabel, NameXL, NameYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamNameColumnPct), YOffset, PlayerNameLabel,, textscale, textscale,, 2);
	TextSize(C, PingLabel, PingXL, PingYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamPingColumnPct), YOffset, PingLabel,, textscale, textscale,, 2);
	TextSize(C, ReadyLabel, ReadyXL, ReadyYL, textscale, textscale);
	ClipText(C, __NFUN_195__(WinWidth, TeamReadyColumnPct), YOffset, ReadyLabel,, textscale, textscale,, 2);
	// End:0x38E
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		TextSize(C, KickLabel, ReadyXL, ReadyYL, textscale, textscale);
		ClipText(C, __NFUN_195__(WinWidth, TeamKickColumnPct), YOffset, KickLabel,, textscale, textscale,, 2);
	}
	C.DrawColor = class'UWindowScene'.default.WhiteColor;
	// End:0x42F
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		DrawStretchedTexture(C, __NFUN_195__(WinWidth, TeamHoriLeftPct), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), __NFUN_195__(WinWidth, TeamHostHoriRightPct), 8, HGridLine, 1,,, true);		
	}
	else
	{
		DrawStretchedTexture(C, __NFUN_195__(WinWidth, TeamHoriLeftPct), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), __NFUN_195__(WinWidth, TeamClientHoriRightPct), 8, HGridLine, 1,,, true);
	}
	DrawStretchedTexture(C, __NFUN_195__(WinWidth, Team1HoriLeftPct), __NFUN_198__(__NFUN_195__(WinHeight, Team1NameLabelYPct), TeamYL), __NFUN_195__(WinWidth, Team1HoriRightPct), 8, HGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamLevelColumnPct), TeamHoriLineOffset), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), 8, __NFUN_195__(WinHeight, Team0VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamNameColumnPct), TeamHoriLineOffset), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), 8, __NFUN_195__(WinHeight, Team0VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamPingColumnPct), TeamHoriLineOffset), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), 8, __NFUN_195__(WinHeight, Team0VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamReadyColumnPct), TeamHoriLineOffset), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), 8, __NFUN_195__(WinHeight, Team0VertLineBottomPct), VGridLine, 1,,, true);
	// End:0x681
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamKickColumnPct), TeamHoriLineOffset), __NFUN_198__(__NFUN_198__(YOffset, NameYL), 1.5), 8, __NFUN_195__(WinHeight, Team0VertLineBottomPct), VGridLine, 1,,, true);
	}
	__NFUN_209__(YOffset, __NFUN_198__(NameYL, FirstTeamEntryYOffset));
	Team1HeaderOffset = YOffset;
	Team2HeaderOffset = __NFUN_198__(__NFUN_198__(__NFUN_195__(WinHeight, Team1NameLabelYPct), TeamYL), FirstTeamEntryYOffset);
	YOffsetDuke = YOffset;
	YOffsetEDF = Team2HeaderOffset;
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamLevelColumnPct), TeamHoriLineOffset), Team2HeaderOffset, 8, __NFUN_195__(WinHeight, Team1VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamNameColumnPct), TeamHoriLineOffset), Team2HeaderOffset, 8, __NFUN_195__(WinHeight, Team1VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamPingColumnPct), TeamHoriLineOffset), Team2HeaderOffset, 8, __NFUN_195__(WinHeight, Team1VertLineBottomPct), VGridLine, 1,,, true);
	DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamReadyColumnPct), TeamHoriLineOffset), Team2HeaderOffset, 8, __NFUN_195__(WinHeight, Team1VertLineBottomPct), VGridLine, 1,,, true);
	// End:0x851
	if(__NFUN_148__(__NFUN_145__(GetPlayerOwner().__NFUN_994__()), UDukeRootWindow(Root).AgentOnline.IsHost()))
	{
		DrawStretchedTexture(C, __NFUN_199__(__NFUN_195__(WinWidth, TeamKickColumnPct), TeamHoriLineOffset), Team2HeaderOffset, 8, __NFUN_195__(WinHeight, Team1VertLineBottomPct), VGridLine, 1,,, true);
	}
	C.Font = C.MedFont;
	textscale = DetermineFontScaleTeam(C, YOffsetDuke, EntrySpacing, __NFUN_195__(WinHeight, Team1NameLabelYPct));
	// End:0x1791
	if(__NFUN_170__(string(PlayerList), 0))
	{
		i = 0;
		J0x8AA:

		// End:0x1791 [Loop If]
		if(__NFUN_148__(__NFUN_169__(i, 8), __NFUN_169__(i, string(PlayerList))))
		{
			// End:0x1029
			if(__NFUN_173__(PlayerList[i].Team, 0))
			{
				VoIPCheckBoxes[i].CurrentVoipState = PlayerList[i].VoipState;
				VoIPCheckBoxes[i].WinTop = YOffsetDuke;
				ReadyCheckBoxes[i].WinTop = YOffsetDuke;
				KickButtons[i].WinTop = YOffsetDuke;
				VoIPCheckBoxes[i].WinLeft = __NFUN_195__(WinWidth, TeamVoiceColumnPct);
				VoIPCheckBoxes[i].WinWidth = __NFUN_195__(75, class'UWindowScene'.default.WinScaleX);
				VoIPCheckBoxes[i].WinHeight = __NFUN_195__(32, class'UWindowScene'.default.WinScaleY);
				ReadyCheckBoxes[i].WinLeft = __NFUN_195__(WinWidth, TeamReadyColumnPct);
				ReadyCheckBoxes[i].WinWidth = __NFUN_195__(32, class'UWindowScene'.default.WinScaleX);
				ReadyCheckBoxes[i].WinHeight = __NFUN_195__(32, class'UWindowScene'.default.WinScaleY);
				KickButtons[i].WinLeft = __NFUN_195__(WinWidth, TeamKickColumnPct);
				KickButtons[i].WinWidth = __NFUN_195__(__NFUN_195__(float(KickButtons[i].UpTexture.__NFUN_1191__()), class'UWindowScene'.default.WinScaleX), 0.5);
				KickButtons[i].WinHeight = __NFUN_195__(__NFUN_195__(float(KickButtons[i].UpTexture.__NFUN_1192__()), class'UWindowScene'.default.WinScaleY), 0.5);
				KickButtons[i].ButtonIdx = i;
				// End:0xB8C
				if(__NFUN_148__(__NFUN_148__(__NFUN_174__(PlayerList[i].PlayerRef, CurrentPlayer.PlayerRef), UDukeRootWindow(Root).AgentOnline.IsHost()), __NFUN_145__(GetPlayerOwner().__NFUN_994__())))
				{
					KickButtons[i].ShowWindow();
				}
				VoIPCheckBoxes[i].ButtonIdx = i;
				VoIPCheckBoxes[i].ShowWindow();
				ReadyCheckBoxes[i].CheckBoxIndex = i;
				ReadyCheckBoxes[i].bChecked = PlayerList[i].IsReady;
				ReadyCheckBoxes[i].ShowWindow();
				// End:0xC3D
				if(bUsePCIconLocations)
				{
					PlayerListButtons[i].selectionIconOffset = PCTeamSelectionIconXOffset;					
				}
				else
				{
					PlayerListButtons[i].selectionIconOffset = TeamSelectionIconXOffset;
				}
				// End:0xC96
				if(__NFUN_145__(__NFUN_414__()))
				{
					PlayerListButtons[i].TextScaleXMod = 0.65;
					PlayerListButtons[i].TextScaleYMod = 0.65;
				}
				PlayerListButtons[i].getTextScale(NameTextScaleX, NameTextScaleY);
				TextSize(C, PlayerList[i].PlayerName, XL, YL, NameTextScaleX, NameTextScaleY);
				PlayerName = PlayerList[i].PlayerName;
				// End:0xD1B
				if(__NFUN_201__(XL, PlayerListButtonTextWidth))
				{
					PlayerName = getMaxString(PlayerName);
				}
				PlayerListButtons[i].SetText(PlayerName);
				PlayerListButtons[i].NavRight = PlayerListButtons[i];
				// End:0xD91
				if(__NFUN_169__(__NFUN_165__(i, 1), string(PlayerList)))
				{
					PlayerListButtons[i].NavDown = PlayerListButtons[__NFUN_165__(i, 1)];					
				}
				else
				{
					PlayerListButtons[i].NavDown = PlayerListButtons[0];
				}
				// End:0xDE3
				if(__NFUN_172__(__NFUN_166__(i, 1), 0))
				{
					PlayerListButtons[i].NavUp = PlayerListButtons[__NFUN_166__(i, 1)];					
				}
				else
				{
					PlayerListButtons[i].NavUp = none;
				}
				PlayerListButtons[i].ButtonIdx = i;
				PlayerListButtons[i].WinLeft = __NFUN_195__(WinWidth, TeamNameColumnPct);
				PlayerListButtons[i].WinTop = YOffsetDuke;
				PlayerListButtons[i].WinWidth = __NFUN_195__(375, class'UWindowScene'.default.WinScaleX);
				PlayerListButtons[i].WinHeight = __NFUN_195__(36, class'UWindowScene'.default.WinScaleY);
				PlayerListButtons[i].ShowWindow();
				textOffset = __NFUN_199__(__NFUN_198__(YOffsetDuke, __NFUN_196__(EntrySpacing, 2)), __NFUN_196__(YL, 2));
				// End:0xF6B
				if(__NFUN_172__(PlayerList[i].HostPing, 0))
				{
					TextSize(C, string(PlayerList[i].HostPing), XL, YL, textscale, textscale);
					ClipText(C, __NFUN_195__(WinWidth, TeamPingColumnPct), textOffset, string(PlayerList[i].HostPing), false, textscale, textscale,, 2);
				}
				UDukeRootWindow(Root).AgentOnline.GetLevel(PlayerList[i].PlayerRef, Level);
				// End:0x1002
				if(__NFUN_170__(Level, 0))
				{
					TextSize(C, string(Level), XL, YL, textscale, textscale);
					ClipText(C, __NFUN_195__(WinWidth, TeamLevelColumnPct), textOffset, string(Level), false, textscale, textscale,, 2);
				}
				__NFUN_209__(YOffsetDuke, __NFUN_198__(EntrySpacing, __NFUN_195__(EntryPadding, class'UWindowScene'.default.WinScaleY)));
				// [Explicit Continue]
				goto J0x1787;
			}
			// End:0x1787
			if(__NFUN_173__(PlayerList[i].Team, 1))
			{
				VoIPCheckBoxes[i].CurrentVoipState = PlayerList[i].VoipState;
				VoIPCheckBoxes[i].WinTop = YOffsetEDF;
				ReadyCheckBoxes[i].WinTop = YOffsetEDF;
				KickButtons[i].WinTop = YOffsetEDF;
				VoIPCheckBoxes[i].WinLeft = __NFUN_195__(WinWidth, TeamVoiceColumnPct);
				VoIPCheckBoxes[i].WinWidth = __NFUN_195__(75, class'UWindowScene'.default.WinScaleX);
				VoIPCheckBoxes[i].WinHeight = __NFUN_195__(32, class'UWindowScene'.default.WinScaleY);
				ReadyCheckBoxes[i].WinLeft = __NFUN_195__(WinWidth, TeamReadyColumnPct);
				ReadyCheckBoxes[i].WinWidth = __NFUN_195__(32, class'UWindowScene'.default.WinScaleX);
				ReadyCheckBoxes[i].WinHeight = __NFUN_195__(32, class'UWindowScene'.default.WinScaleY);
				KickButtons[i].WinLeft = __NFUN_195__(WinWidth, TeamKickColumnPct);
				KickButtons[i].WinWidth = __NFUN_195__(__NFUN_195__(float(KickButtons[i].UpTexture.__NFUN_1191__()), class'UWindowScene'.default.WinScaleX), 0.5);
				KickButtons[i].WinHeight = __NFUN_195__(__NFUN_195__(float(KickButtons[i].UpTexture.__NFUN_1192__()), class'UWindowScene'.default.WinScaleY), 0.5);
				KickButtons[i].ButtonIdx = i;
				// End:0x12ED
				if(__NFUN_148__(__NFUN_148__(__NFUN_174__(PlayerList[i].PlayerRef, CurrentPlayer.PlayerRef), UDukeRootWindow(Root).AgentOnline.IsHost()), __NFUN_145__(GetPlayerOwner().__NFUN_994__())))
				{
					KickButtons[i].ShowWindow();
				}
				VoIPCheckBoxes[i].ButtonIdx = i;
				VoIPCheckBoxes[i].ShowWindow();
				ReadyCheckBoxes[i].CheckBoxIndex = i;
				ReadyCheckBoxes[i].bChecked = PlayerList[i].IsReady;
				ReadyCheckBoxes[i].ShowWindow();
				// End:0x139E
				if(bUsePCIconLocations)
				{
					PlayerListButtons[i].selectionIconOffset = PCTeamSelectionIconXOffset;					
				}
				else
				{
					PlayerListButtons[i].selectionIconOffset = TeamSelectionIconXOffset;
				}
				// End:0x13F7
				if(__NFUN_145__(__NFUN_414__()))
				{
					PlayerListButtons[i].TextScaleXMod = 0.65;
					PlayerListButtons[i].TextScaleYMod = 0.65;
				}
				PlayerListButtons[i].getTextScale(NameTextScaleX, NameTextScaleY);
				TextSize(C, PlayerList[i].PlayerName, XL, YL, NameTextScaleX, NameTextScaleY);
				PlayerName = PlayerList[i].PlayerName;
				// End:0x147C
				if(__NFUN_201__(XL, PlayerListButtonTextWidth))
				{
					PlayerName = getMaxString(PlayerName);
				}
				PlayerListButtons[i].SetText(PlayerName);
				PlayerListButtons[i].NavRight = PlayerListButtons[i];
				// End:0x14F2
				if(__NFUN_169__(__NFUN_165__(i, 1), string(PlayerList)))
				{
					PlayerListButtons[i].NavDown = PlayerListButtons[__NFUN_165__(i, 1)];					
				}
				else
				{
					PlayerListButtons[i].NavDown = PlayerListButtons[0];
				}
				// End:0x1544
				if(__NFUN_172__(__NFUN_166__(i, 1), 0))
				{
					PlayerListButtons[i].NavUp = PlayerListButtons[__NFUN_166__(i, 1)];					
				}
				else
				{
					PlayerListButtons[i].NavUp = none;
				}
				PlayerListButtons[i].ButtonIdx = i;
				PlayerListButtons[i].WinLeft = __NFUN_195__(WinWidth, TeamNameColumnPct);
				PlayerListButtons[i].WinTop = YOffsetEDF;
				PlayerListButtons[i].WinWidth = __NFUN_195__(375, class'UWindowScene'.default.WinScaleX);
				PlayerListButtons[i].WinHeight = __NFUN_195__(36, class'UWindowScene'.default.WinScaleY);
				PlayerListButtons[i].ShowWindow();
				textOffset = __NFUN_199__(__NFUN_198__(YOffsetEDF, __NFUN_196__(EntrySpacing, 2)), __NFUN_196__(YL, 2));
				// End:0x16CC
				if(__NFUN_172__(PlayerList[i].HostPing, 0))
				{
					TextSize(C, string(PlayerList[i].HostPing), XL, YL, textscale, textscale);
					ClipText(C, __NFUN_195__(WinWidth, TeamPingColumnPct), textOffset, string(PlayerList[i].HostPing), false, textscale, textscale,, 2);
				}
				UDukeRootWindow(Root).AgentOnline.GetLevel(PlayerList[i].PlayerRef, Level);
				// End:0x1763
				if(__NFUN_170__(Level, 0))
				{
					TextSize(C, string(Level), XL, YL, textscale, textscale);
					ClipText(C, __NFUN_195__(WinWidth, TeamLevelColumnPct), textOffset, string(Level), false, textscale, textscale,, 2);
				}
				__NFUN_209__(YOffsetEDF, __NFUN_198__(EntrySpacing, __NFUN_195__(EntryPadding, class'UWindowScene'.default.WinScaleY)));
			}
			J0x1787:

			__NFUN_182__(i);
			// [Loop Continue]
			goto J0x8AA;
		}
	}
	return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
	// End:0x53
	if(__NFUN_174__(int(E), 8))
	{
		__NFUN_355__(__NFUN_303__(__NFUN_303__(__NFUN_303__(__NFUN_303__(__NFUN_303__(string(self), "::NotifyFromControl("), string(C)), ", "), string(__NFUN_365__(class'EDE_Debug', int(E)))), ")"));
	}
	super(UWindowWindow).NotifyFromControl(C, E);
	switch(E)
	{
		// End:0x1F1
		case 2:
			// End:0x8E
			if(C.__NFUN_358__('UDukeVoIPCheckbox'))
			{
				muteSelectedPlayer();				
			}
			else
			{
				// End:0x172
				if(C.__NFUN_358__('UDukeReadyCheckBox'))
				{
					// End:0x16F
					if(__NFUN_148__(__NFUN_172__(UDukeReadyCheckBox(C).CheckBoxIndex, 0), __NFUN_173__(CurrentPlayer.PlayerRef, PlayerList[UDukeReadyCheckBox(C).CheckBoxIndex].PlayerRef)))
					{
						UDukeReadyCheckBox(C).PlayCheckBoxSound();
						ToggleReadyButton(__NFUN_145__(PlayerList[UDukeReadyCheckBox(C).CheckBoxIndex].IsReady));
						UDukeRootWindow(Root).AgentOnline.ReadyUp(__NFUN_145__(PlayerList[UDukeReadyCheckBox(C).CheckBoxIndex].IsReady));
					}					
				}
				else
				{
					// End:0x190
					if(C.__NFUN_358__('UDukeKickButton'))
					{
						KickPlayer();						
					}
					else
					{
						// End:0x1EE
						if(C.__NFUN_358__('UDukeLobbyMenuButton'))
						{
							// End:0x1EE
							if(__NFUN_172__(iSelectedPlayer, 0))
							{
								UDukeRootWindow(Root).AgentOnline.ShowGamerCard(PlayerList[UDukeLobbyMenuButton(C).ButtonIdx].PlayerRef);
							}
						}
					}
				}
			}
			// End:0x3B3
			break;
		// End:0x260
		case 21:
			// End:0x25D
			if(__NFUN_169__(string(PlayerList), UDukeSceneMultiPlayerMenuLobby(ParentWindow).MaxPlayers))
			{
				DukeConsole(Root.Console).DialogMgr.ShowWaitingForResponseDialog();
				UDukeRootWindow(Root).AgentOnline.ShowSystemInviteUI();
			}
			// End:0x3B3
			break;
		// End:0x26E
		case 20:
			KickPlayer();
			// End:0x3B3
			break;
		// End:0x273
		case 17:
		// End:0x3B0
		case 12:
			// End:0x3AD
			if(__NFUN_150__(__NFUN_150__(C.__NFUN_358__('UDukeLobbyMenuButton'), C.__NFUN_358__('UDukeKickButton')), C.__NFUN_358__('UDukeVoIPCheckbox')))
			{
				iSelectedPlayer = UDukeMenuButton(C).ButtonIdx;
				// End:0x312
				if(__NFUN_150__(C.__NFUN_358__('UDukeKickButton'), C.__NFUN_358__('UDukeVoIPCheckbox')))
				{
					ChildInFocus = PlayerListButtons[iSelectedPlayer];
				}
				// End:0x33F
				if(__NFUN_173__(CurrentPlayer.PlayerRef, PlayerList[iSelectedPlayer].PlayerRef))
				{
					ToggleKickPlayerButton(false);					
				}
				else
				{
					// End:0x355
					if(__NFUN_145__(bKillChildInFocus))
					{
						ToggleKickPlayerButton(true);
					}
				}
				// End:0x370
				if(bKillChildInFocus)
				{
					ChildInFocus = none;
					bKillChildInFocus = false;					
				}
				else
				{
					// End:0x3AD
					if(__NFUN_340__(ParentWindow.ChildInFocus, self))
					{
						ParentWindow.NotifyFromControl(self, E);
						ParentWindow.ChildInFocus = self;
					}
				}
			}
			// End:0x3B3
			break;
		// End:0xFFFF
		default:
			break;
	}
	return;
}

function NavDownFirstPlayer()
{
	bKillChildInFocus = false;
	ParentWindow.NotifyFromControl(PlayerListButtons[0], 17);
	return;
}

function muteSelectedPlayer()
{
	local int checkBoxIdx;
	local bool IsCurrentlyMuted;

	// End:0x11A
	if(__NFUN_148__(__NFUN_148__(__NFUN_172__(iSelectedPlayer, 0), __NFUN_174__(CurrentPlayer.PlayerRef, PlayerList[iSelectedPlayer].PlayerRef)), __NFUN_174__(int(PlayerList[iSelectedPlayer].VoipState), int(0))))
	{
		__NFUN_355__(__NFUN_303__(__NFUN_303__(string(self), "::Toggling Mute on Player:"), PlayerList[iSelectedPlayer].PlayerName));
		IsCurrentlyMuted = __NFUN_173__(int(PlayerList[iSelectedPlayer].VoipState), int(1));
		__NFUN_355__(__NFUN_303__(__NFUN_303__(string(self), "::Is Player Muted:"), string(IsCurrentlyMuted)));
		UDukeRootWindow(Root).AgentOnline.MutePlayer(PlayerList[iSelectedPlayer].PlayerRef, __NFUN_145__(IsCurrentlyMuted));
		GetPlayerOwner().PlaySoundInfo(0, class'UDukeVoIPCheckbox'.default.SoundCheckboxInfo);
	}
	return;
}

function KickPlayer()
{
	local UDukeKickMessageBox kickMess;

	// End:0x47
	if(__NFUN_150__(__NFUN_145__(UDukeRootWindow(Root).AgentOnline.IsHost()), __NFUN_173__(PlayerList[iSelectedPlayer].PlayerRef, CurrentPlayer.PlayerRef)))
	{
		return;
	}
	kickMess = UDukeKickMessageBox(DukeConsole(Root.Console).DialogMgr.ShowDialogBox(23, self,, class'UDukeKickMessageBox'));
	kickMess.setPlayerName(PlayerList[iSelectedPlayer].PlayerName);
	GetPlayerOwner().PlaySoundInfo(0, KickSoundInfo);
	return;
}

function DukeSuperMessageBoxDone(int Result, Engine.Object.EConsole_Dialog id)
{
	// End:0xAA
	if(__NFUN_148__(__NFUN_173__(Result, 1), __NFUN_173__(int(id), int(23))))
	{
		// End:0xAA
		if(__NFUN_148__(__NFUN_172__(iSelectedPlayer, 0), __NFUN_174__(CurrentPlayer.PlayerRef, PlayerList[iSelectedPlayer].PlayerRef)))
		{
			__NFUN_355__(__NFUN_303__(string(self), "::Kicking player"));
			UDukeRootWindow(Root).AgentOnline.KickPlayer(PlayerList[iSelectedPlayer].PlayerRef, true);
			ParentWindow.NavUp(self);
			bKillChildInFocus = true;
		}
	}
	return;
}

function MouseEnter()
{
	return;
}

function MouseLeave()
{
	return;
}

function WindowEvent(UWindow.UWindowWindow.WinMessage msg, Canvas C, float X, float Y, int Key)
{
	local UWindowDialogControl n;
	local bool IsCurrentlyMuted;

	// End:0xA1
	if(__NFUN_173__(int(msg), int(7)))
	{
		switch(Key)
		{
			// End:0x30
			case int(Root.Console.200):
			// End:0x71
			case int(Root.Console.38):
				// End:0x6E
				if(__NFUN_173__(iSelectedPlayer, 0))
				{
					ParentWindow.NavUp(self);
					bKillChildInFocus = true;
				}
				// End:0xA1
				break;
			// End:0x77
			case int(215):
			// End:0x86
			case int(77):
				muteSelectedPlayer();
				// End:0xA1
				break;
			// End:0xFFFF
			default:
				KeyDown(Key, X, Y);
				// End:0xA1
				break;
				break;
		}
	}
	super(UWindowWindow).WindowEvent(msg, C, X, Y, Key);
	return;
}

function ToggleReadyButton(bool IsReady)
{
	__NFUN_355__("ToggleReadyButton:: Not Implemented in UDukeLobbyPlayerStateList: Add a delegate");
	return;
}

function ToggleKickPlayerButton(bool bShow)
{
	__NFUN_355__("ToggleKickPlayerButton:: Not Implemented in UDukeLobbyPlayerStateList: Add a delegate");
	return;
}

function float DetermineFontScale(Canvas C, float YOffset, out float EntrySize)
{
	local float XL, NormalYL, ListSize, FontScale;

	TextSize(C, "WWW", XL, NormalYL, class'UWindowScene'.default.TTFontScale, class'UWindowScene'.default.TTFontScale);
	ListSize = __NFUN_199__(WinHeight, YOffset);
	EntrySize = __NFUN_196__(ListSize, float(8));
	FontScale = __NFUN_196__(EntrySize, NormalYL);
	// End:0x96
	if(__NFUN_201__(EntrySize, NormalYL))
	{
		EntrySize = NormalYL;
		return class'UWindowScene'.default.TTFontScale;
	}
	return FontScale;
	return;
}

function float DetermineFontScaleTeam(Canvas C, float YOffset, out float EntrySize, optional float End)
{
	local float XL, NormalYL, ListSize, FontScale;

	TextSize(C, "WWW", XL, NormalYL, __NFUN_195__(FontScale, class'UWindowScene'.default.TTFontScale), __NFUN_195__(FontScale, class'UWindowScene'.default.TTFontScale));
	// End:0x6A
	if(__NFUN_201__(End, 0))
	{
		ListSize = __NFUN_199__(End, YOffset);		
	}
	else
	{
		ListSize = __NFUN_199__(WinHeight, YOffset);
	}
	EntrySize = __NFUN_196__(ListSize, float(4));
	FontScale = __NFUN_196__(EntrySize, NormalYL);
	// End:0xD2
	if(__NFUN_201__(EntrySize, NormalYL))
	{
		EntrySize = NormalYL;
		return __NFUN_195__(FontScale, class'UWindowScene'.default.TTFontScale);		
	}
	return FontScale;
	return;
}

function int getCurrentSelectionPlayerRef()
{
	return PlayerList[iSelectedPlayer].PlayerRef;
	return;
}

function bool teamsBalanced()
{
	local int i, playerListLen, teamA, teamB;

	teamA = 0;
	teamB = 0;
	playerListLen = string(PlayerList);
	i = 0;
	J0x21:

	// End:0x77 [Loop If]
	if(__NFUN_169__(i, playerListLen))
	{
		// End:0x50
		if(__NFUN_173__(PlayerList[i].Team, 0))
		{
			__NFUN_184__(teamA);
			// [Explicit Continue]
			goto J0x6D;
		}
		// End:0x6D
		if(__NFUN_173__(PlayerList[i].Team, 1))
		{
			__NFUN_184__(teamB);
		}
		J0x6D:

		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x21;
	}
	UDukeRootWindow(Root).AgentOnline.GetLocalAgentPlayer(CurrentPlayer);
	// End:0xAF
	if(__NFUN_173__(teamA, teamB))
	{
		return true;		
	}
	else
	{
		// End:0xD2
		if(__NFUN_148__(__NFUN_173__(CurrentPlayer.Team, 0), __NFUN_172__(teamB, 4)))
		{
			return true;			
		}
		else
		{
			// End:0xF2
			if(__NFUN_148__(__NFUN_173__(CurrentPlayer.Team, 1), __NFUN_172__(teamA, 4)))
			{
				return true;
			}
		}
	}
	return false;
	return;
}

defaultproperties
{
	EntrySpacing=32
	borderwidth=2
	TeamColor[0]=(B=36,G=1,R=27,A=37)
	TeamColor[1]=(B=36,G=1,R=255,A=37)
	HGridLine='Menu.MP.divider_horiz'
	VGridLine='Menu.MP.Divider_Vert'
	VoiceColumnPct=0.05
	LevelColumnPct=0.15
	NameColumnPct=0.25
	PingColumnPct=0.65
	ReadyColumnPct=0.75
	KickColumnPct=0.85
	TeamVoiceColumnPct=0.05
	TeamLevelColumnPct=0.15
	TeamNameColumnPct=0.25
	TeamPingColumnPct=0.55
	TeamReadyColumnPct=0.65
	TeamKickColumnPct=0.8
	TeamHeaderOffsetYPct=0.12
	TeamNameFontScale=0.75
	TeamNameLabelXPct=0.02
	Team0NameLabelYPct=0.045
	Team1NameLabelYPct=0.535
	TeamHeaderFontScale=0.5
	FirstTeamEntryYOffset=10
	TeamFontModPct=1
	HoriLineOffset=10
	VertLineBottomPct=0.76
	HoriLeftPct=0.025
	HostHoriRightPct=0.95
	ClientHoriRightPct=0.76
	TeamHoriLineOffset=8
	Team0VertLineBottomPct=0.365
	Team1VertLineBottomPct=0.29
	TeamHoriLeftPct=0.08
	TeamHostHoriRightPct=0.88
	TeamClientHoriRightPct=0.8
	Team1HoriLeftPct=0.25
	Team1HoriRightPct=0.45
	SoloSelectionIconXOffset=-260
	TeamSelectionIconXOffset=-310
	PCSoloSelectionIconXOffset=-200
	PCTeamSelectionIconXOffset=-195
	KickSoundInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=('a_menu.Menu.Menu_Roll_Level3_01_ST'),SlotPriority=0,VolumePrefab=0,Slots=(0),Volume=0.3,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
}