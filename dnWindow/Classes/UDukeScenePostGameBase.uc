/*******************************************************************************
 * UDukeScenePostGameBase generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeScenePostGameBase extends UWindowScene;

var Color TeamColor[2];
var float ScoreOffset;
var Texture TimerBkg;
var localized string BlueTeam;
var localized string RedTeam;
var localized string Wins;
var localized string GameEndsInADraw;
var localized string CountDownStr;
var float FillWidth;
var float FillHeight;
var float FillTopEdge;
var float borderwidth;
var SSoundInfo CountdownSoundInfo;

function SetBackgroundBoundries(Canvas C)
{
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local float XL, YL;
	local int i;
	local dnDeathmatchGameReplicationInfo GRI;
	local float TeamScoreSize;
	local int iTeam;
	local float ScoreSpacing;
	local string WinString, S;
	local int WinningPlayerIndex;
	local bool bTied;

	super.Paint(C, X, Y);
	SetBackgroundBoundries(C);
	C.Font = C.TallFont;
	C.DrawColor = WhiteColor;
	GRI = dnDeathmatchGameReplicationInfo(GetPlayerOwner().GameReplicationInfo);
	WinString = GameEndsInADraw;
	// End:0x388
	if(__NFUN_148__(__NFUN_340__(GRI, none), GRI.bTeamGame))
	{
		ScoreSpacing = __NFUN_195__(__NFUN_195__(float(TimerBkg.__NFUN_1191__()), 0.25), WinScaleX);
		Y = __NFUN_195__(float(C.SizeY), 0.075);
		iTeam = 1;
		C.DrawColor = TeamColor[iTeam];
		// End:0x15C
		if(__NFUN_170__(GRI.Teams[iTeam].Score, GRI.Teams[0].Score))
		{
			TeamScoreSize = 3;
			WinString = __NFUN_302__(RedTeam, Wins);			
		}
		else
		{
			TeamScoreSize = 2.5;
		}
		C.__NFUN_1238__(string(GRI.Teams[iTeam].Score), XL, YL, TeamScoreSize, TeamScoreSize);
		C.__NFUN_1250__(__NFUN_199__(__NFUN_199__(__NFUN_196__(__NFUN_199__(C.ClipX, ScoreSpacing), 2), XL), __NFUN_195__(ScoreOffset, WinScaleX)), __NFUN_195__(Y, WinScaleY));
		C.__NFUN_1232__(string(GRI.Teams[iTeam].Score),,,, TeamScoreSize, TeamScoreSize,, 1);
		iTeam = 0;
		C.DrawColor = TeamColor[iTeam];
		// End:0x2B5
		if(__NFUN_170__(GRI.Teams[iTeam].Score, GRI.Teams[1].Score))
		{
			TeamScoreSize = 3;
			WinString = __NFUN_302__(BlueTeam, Wins);			
		}
		else
		{
			TeamScoreSize = 2.5;
		}
		C.__NFUN_1238__(string(GRI.Teams[iTeam].Score), XL, YL, TeamScoreSize, TeamScoreSize);
		C.__NFUN_1250__(__NFUN_198__(__NFUN_196__(__NFUN_198__(C.ClipX, ScoreSpacing), 2), __NFUN_195__(ScoreOffset, WinScaleX)), __NFUN_195__(Y, WinScaleY));
		C.__NFUN_1232__(string(GRI.Teams[iTeam].Score),,,, TeamScoreSize, TeamScoreSize,, 1);		
	}
	else
	{
		// End:0x4AA
		if(__NFUN_340__(GRI, none))
		{
			bTied = false;
			WinningPlayerIndex = 0;
			i = 1;
			J0x3AA:

			// End:0x472 [Loop If]
			if(__NFUN_169__(i, string(GRI.PRIArray)))
			{
				// End:0x41D
				if(__NFUN_170__(GRI.PRIArray[i].Score, GRI.PRIArray[WinningPlayerIndex].Score))
				{
					WinningPlayerIndex = i;
					bTied = false;
					// [Explicit Continue]
					goto J0x468;
				}
				// End:0x468
				if(__NFUN_173__(GRI.PRIArray[i].Score, GRI.PRIArray[WinningPlayerIndex].Score))
				{
					bTied = true;
				}
				J0x468:

				__NFUN_182__(i);
				// [Loop Continue]
				goto J0x3AA;
			}
			// End:0x4AA
			if(__NFUN_145__(bTied))
			{
				WinString = __NFUN_302__(GRI.PRIArray[WinningPlayerIndex].PlayerName, Wins);
			}
		}
	}
	C.DrawColor = WhiteColor;
	// End:0x591
	if(__NFUN_170__(MPGameReplicationInfo(GetPlayerOwner().GameReplicationInfo).EORCountTime, 0))
	{
		S = __NFUN_302__(CountDownStr, string(int(__NFUN_198__(float(MPGameReplicationInfo(GetPlayerOwner().GameReplicationInfo).EORCountTime), 0.999))));
		TextSize(C, S, XL, YL, TTFontScale, TTFontScale);
		ClipText(C, __NFUN_199__(__NFUN_198__(__NFUN_196__(__NFUN_199__(WinWidth, FillWidth), float(2)), FillWidth), XL), __NFUN_198__(__NFUN_198__(__NFUN_198__(FillTopEdge, FillHeight), borderwidth), float(10)), S,, TTFontScale, TTFontScale);
	}
	GRI = dnDeathmatchGameReplicationInfo(GetPlayerOwner().GameReplicationInfo);
	WinString = GameEndsInADraw;
	// End:0x9BF
	if(__NFUN_148__(__NFUN_340__(GRI, none), GRI.bTeamGame))
	{
		ScoreSpacing = __NFUN_195__(__NFUN_195__(float(TimerBkg.__NFUN_1191__()), 0.25), WinScaleX);
		Y = __NFUN_195__(float(C.SizeY), 0.075);
		iTeam = 1;
		C.DrawColor = TeamColor[iTeam];
		// End:0x699
		if(__NFUN_170__(GRI.Teams[iTeam].Score, GRI.Teams[0].Score))
		{
			TeamScoreSize = 3;
			WinString = __NFUN_302__(RedTeam, Wins);			
		}
		else
		{
			TeamScoreSize = 2.5;
		}
		C.__NFUN_1238__(string(GRI.Teams[iTeam].Score), XL, YL, TeamScoreSize, TeamScoreSize);
		C.__NFUN_1250__(__NFUN_199__(__NFUN_199__(__NFUN_196__(__NFUN_199__(C.ClipX, ScoreSpacing), 2), XL), __NFUN_195__(ScoreOffset, WinScaleX)), __NFUN_195__(Y, WinScaleY));
		C.__NFUN_1232__(string(GRI.Teams[iTeam].Score),,,, TeamScoreSize, TeamScoreSize,, 1);
		iTeam = 0;
		C.DrawColor = TeamColor[iTeam];
		// End:0x7F2
		if(__NFUN_170__(GRI.Teams[iTeam].Score, GRI.Teams[1].Score))
		{
			TeamScoreSize = 3;
			WinString = __NFUN_302__(BlueTeam, Wins);			
		}
		else
		{
			TeamScoreSize = 2.5;
		}
		C.__NFUN_1238__(string(GRI.Teams[iTeam].Score), XL, YL, TeamScoreSize, TeamScoreSize);
		C.__NFUN_1250__(__NFUN_198__(__NFUN_196__(__NFUN_198__(C.ClipX, ScoreSpacing), 2), __NFUN_195__(ScoreOffset, WinScaleX)), __NFUN_195__(Y, WinScaleY));
		C.__NFUN_1232__(string(GRI.Teams[iTeam].Score),,,, TeamScoreSize, TeamScoreSize,, 1);
		// End:0x917
		if(__NFUN_169__(GRI.Teams[0].Score, GRI.Teams[1].Score))
		{
			C.DrawColor = TeamColor[1];			
		}
		else
		{
			// End:0x96C
			if(__NFUN_170__(GRI.Teams[0].Score, GRI.Teams[1].Score))
			{
				C.DrawColor = TeamColor[0];				
			}
			else
			{
				// End:0x9BC
				if(__NFUN_173__(GRI.Teams[0].Score, GRI.Teams[1].Score))
				{
					C.DrawColor = WhiteColor;
				}
			}
		}		
	}
	else
	{
		// End:0xAE1
		if(__NFUN_340__(GRI, none))
		{
			bTied = false;
			WinningPlayerIndex = 0;
			i = 1;
			J0x9E1:

			// End:0xAA9 [Loop If]
			if(__NFUN_169__(i, string(GRI.PRIArray)))
			{
				// End:0xA54
				if(__NFUN_170__(GRI.PRIArray[i].Score, GRI.PRIArray[WinningPlayerIndex].Score))
				{
					WinningPlayerIndex = i;
					bTied = false;
					// [Explicit Continue]
					goto J0xA9F;
				}
				// End:0xA9F
				if(__NFUN_173__(GRI.PRIArray[i].Score, GRI.PRIArray[WinningPlayerIndex].Score))
				{
					bTied = true;
				}
				J0xA9F:

				__NFUN_182__(i);
				// [Loop Continue]
				goto J0x9E1;
			}
			// End:0xAE1
			if(__NFUN_145__(bTied))
			{
				WinString = __NFUN_302__(GRI.PRIArray[WinningPlayerIndex].PlayerName, Wins);
			}
		}
	}
	TextSize(C, WinString, XL, YL, 1, 1.2);
	ClipText(C, __NFUN_196__(__NFUN_199__(WinWidth, XL), 2), __NFUN_199__(__NFUN_199__(FillTopEdge, YL), float(4)), WinString,,,, 2);
	return;
}

function EORBeep()
{
	GetPlayerOwner().PlaySoundInfo(0, CountdownSoundInfo);
	return;
}

function LoadNextLevel()
{
	// End:0x1C
	if(__NFUN_340__(class'Engine'.default.NetworkDevice, class'AgentNetDriver'))
	{
		return;
	}
	UDukeRootWindow(Root).AgentOnline.LoadNextMap();
	return;
}

function GetLogoLocation(Canvas C, out float X, out float Y, out float W, out float h)
{
	super.GetLogoLocation(C, X, Y, W, h);
	W = __NFUN_195__(339, WinScaleY);
	h = __NFUN_195__(90, WinScaleY);
	return;
}

defaultproperties
{
	TeamColor[0]=(B=36,G=1,R=51,A=37)
	TeamColor[1]=(B=36,G=1,R=153,A=37)
	ScoreOffset=5
	TimerBkg='dt_hud.ingame_hud.keyinfocircle_128'
	BlueTeam="<?int?dnWindow.UDukeScenePostGameBase.BlueTeam?>"
	RedTeam="<?int?dnWindow.UDukeScenePostGameBase.RedTeam?>"
	Wins="<?int?dnWindow.UDukeScenePostGameBase.Wins?>"
	GameEndsInADraw="<?int?dnWindow.UDukeScenePostGameBase.GameEndsInADraw?>"
	CountDownStr="<?int?dnWindow.UDukeScenePostGameBase.CountDownStr?>"
	CountdownSoundInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=/* Array type was not detected. */,Y[97]=/* Unknown default property type! */,Y=0,VolumePrefab=0,Slots=/* Array type was not detected. */,Y=/* Unknown default property type! */,Volume=0.8,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=true),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	LineTopY=600
	LineBottomY=600
}