/*******************************************************************************
 * UDukeCustomizeItemWindow generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeCustomizeItemWindow extends UWindowDialogControl;

var bool bCenter;
var float borderwidth;
var int ChallIndex;
var Texture LockIcon;
var float LockXPct;
var float LockYPct;
var float LockSize;
var Region LockRegion;
var Engine.Object.EChallengeCustomizeCategory Category;
var float TotalAlpha;
var UDukeListSliderArrowButton NextButton;
var UDukeListSliderArrowButton PrevButton;
var float ArrowHeightPct;
var float ArrowWidthPct;
var float ArrowEdgeOffset;
var bool bIsLeftLocked;
var bool bIsRightLocked;
var bool bShowArrows;
var Color BkgColor;
var Color OrangeColor;
var bool bHoveringOverArrowButton;

function Created()
{
	super.Created();
	PrevButton = UDukeListSliderArrowButton(CreateWindow(class'UDukeListSliderArrowButton', 1, 1, 1, 1));
	PrevButton.CancelAcceptsFocus();
	PrevButton.bLeft = true;
	PrevButton.Register(self);
	PrevButton.DrawColor = OrangeColor;
	NextButton = UDukeListSliderArrowButton(CreateWindow(class'UDukeListSliderArrowButton', 1, 1, 1, 1));
	NextButton.CancelAcceptsFocus();
	NextButton.Register(self);
	NextButton.DrawColor = OrangeColor;
	ChallIndex = -1;
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local bool IsLocked;
	local float ImageSize, LockScaledSize;
	local Texture image;
	local Engine.Object.EChallengeCustomizeCategory localCat;

	super(UWindowWindow).Paint(C, X, Y);
	UWindowScene(ParentWindow).DrawBackgroundBox(C, 0, 0, WinWidth, WinHeight);
	C.DrawColor = WhiteColor;
	ImageSize = __NFUN_199__(WinHeight, __NFUN_195__(borderwidth, float(2)));
	// End:0x3CC
	if(__NFUN_172__(ChallIndex, 0))
	{
		IsLocked = __NFUN_173__(int(DukeMultiPlayer(GetPlayerOwner()).PlayerProgress.GetChallengeStatusByIdx(ChallIndex)), int(0));
		localCat = class'ChallengeInfo'.default.ChallengesArray[ChallIndex].Category;
		// End:0x183
		if(__NFUN_309__(class'ChallengeInfo'.default.ChallengesArray[ChallIndex].image, ""))
		{
			// End:0x153
			if(__NFUN_148__(__NFUN_150__(__NFUN_173__(int(localCat), int(4)), __NFUN_173__(int(localCat), int(5))), IsLocked))
			{
				image = Texture(__NFUN_366__("Changeroom.Menu.duke_shirt_icon_none", class'Texture'));				
			}
			else
			{
				image = Texture(__NFUN_366__(class'ChallengeInfo'.default.ChallengesArray[ChallIndex].image, class'Texture'));
			}			
		}
		else
		{
			image = none;
		}
		// End:0x315
		if(IsLocked)
		{
			// End:0x24A
			if(__NFUN_340__(image, none))
			{
				// End:0x1FA
				if(__NFUN_150__(__NFUN_173__(int(localCat), int(4)), __NFUN_173__(int(localCat), int(5))))
				{
					DrawStretchedTexture(C, __NFUN_196__(__NFUN_199__(WinWidth, ImageSize), 2), borderwidth, ImageSize, ImageSize, image, TotalAlpha,,, true);					
				}
				else
				{
					DrawStretchedTextureSegment(C, __NFUN_196__(__NFUN_199__(WinWidth, ImageSize), 2), borderwidth, ImageSize, ImageSize, 128, 0, 128, 128, image, TotalAlpha,,,,, true);
				}
			}
			DrawStretchedTextureSegment(C, __NFUN_199__(__NFUN_199__(WinWidth, __NFUN_195__(LockXPct, WinWidth)), __NFUN_195__(LockSize, C.FixedScale)), __NFUN_199__(__NFUN_199__(WinHeight, __NFUN_195__(LockYPct, WinHeight)), __NFUN_195__(LockSize, C.FixedScale)), __NFUN_195__(LockSize, C.FixedScale), __NFUN_195__(LockSize, C.FixedScale), float(LockRegion.X), float(LockRegion.Y), float(LockRegion.W), float(LockRegion.h), LockIcon, TotalAlpha,,,,, true);			
		}
		else
		{
			// End:0x3CC
			if(__NFUN_340__(image, none))
			{
				// End:0x37C
				if(__NFUN_150__(__NFUN_173__(int(localCat), int(4)), __NFUN_173__(int(localCat), int(5))))
				{
					DrawStretchedTexture(C, __NFUN_196__(__NFUN_199__(WinWidth, ImageSize), 2), borderwidth, ImageSize, ImageSize, image, TotalAlpha,,, true);					
				}
				else
				{
					DrawStretchedTextureSegment(C, __NFUN_196__(__NFUN_199__(WinWidth, ImageSize), 2), borderwidth, ImageSize, ImageSize, 0, 0, 128, 128, image, TotalAlpha,,,,, true);
				}
			}
		}
	}
	// End:0x575
	if(__NFUN_148__(bCenter, bShowArrows))
	{
		NextButton.WinHeight = __NFUN_195__(WinHeight, ArrowHeightPct);
		NextButton.WinWidth = __NFUN_195__(WinWidth, ArrowWidthPct);
		PrevButton.WinHeight = __NFUN_195__(WinHeight, ArrowHeightPct);
		PrevButton.WinWidth = __NFUN_195__(WinWidth, ArrowWidthPct);
		NextButton.WinTop = __NFUN_199__(__NFUN_196__(WinHeight, 2), __NFUN_196__(NextButton.WinHeight, 2));
		PrevButton.WinTop = __NFUN_199__(__NFUN_196__(WinHeight, 2), __NFUN_196__(PrevButton.WinHeight, 2));
		NextButton.WinLeft = __NFUN_199__(__NFUN_199__(WinWidth, NextButton.WinWidth), ArrowEdgeOffset);
		PrevButton.WinLeft = ArrowEdgeOffset;
		// End:0x526
		if(bIsLeftLocked)
		{
			NextButton.ShowWindow();
			PrevButton.HideWindow();			
		}
		else
		{
			// End:0x552
			if(bIsRightLocked)
			{
				NextButton.HideWindow();
				PrevButton.ShowWindow();				
			}
			else
			{
				NextButton.ShowWindow();
				PrevButton.ShowWindow();
			}
		}		
	}
	else
	{
		NextButton.HideWindow();
		PrevButton.HideWindow();
	}
	return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
	super(UWindowWindow).NotifyFromControl(C, E);
	// End:0x4A
	if(__NFUN_174__(int(E), 8))
	{
		__NFUN_355__(__NFUN_303__(__NFUN_303__(__NFUN_303__(string(self), "::NotifyFromControl("), string(C)), ")"));
	}
	// End:0x86
	if(__NFUN_148__(__NFUN_173__(int(E), 12), __NFUN_150__(__NFUN_339__(C, NextButton), __NFUN_339__(C, PrevButton))))
	{
		bHoveringOverArrowButton = true;		
	}
	else
	{
		// End:0xBF
		if(__NFUN_148__(__NFUN_173__(int(E), 9), __NFUN_150__(__NFUN_339__(C, NextButton), __NFUN_339__(C, PrevButton))))
		{
			bHoveringOverArrowButton = false;
		}
	}
	// End:0x129
	if(__NFUN_173__(int(E), 2))
	{
		// End:0xFC
		if(__NFUN_339__(C, NextButton))
		{
			ParentWindow.KeyDown(int(39), 0, 0);			
		}
		else
		{
			// End:0x129
			if(__NFUN_339__(C, PrevButton))
			{
				ParentWindow.KeyDown(int(37), 0, 0);
			}
		}
	}
	return;
}

function KeyDown(int Key, float X, float Y)
{
	super.KeyDown(Key, X, Y);
	ParentWindow.KeyDown(Key, X, Y);
	return;
}

function KeyHold(int Key, float X, float Y)
{
	super.KeyHold(Key, X, Y);
	ParentWindow.KeyHold(Key, X, Y);
	return;
}

function HideArrows()
{
	bShowArrows = false;
	return;
}

function ShowArrows()
{
	bShowArrows = true;
	return;
}

function WindowEvent(UWindow.UWindowWindow.WinMessage msg, Canvas C, float X, float Y, int Key)
{
	local UDukeSceneItemCustomization SceneIC;

	super(UWindowWindow).WindowEvent(msg, C, X, Y, Key);
	// End:0x67
	if(__NFUN_148__(__NFUN_173__(int(msg), int(0)), __NFUN_145__(bHoveringOverArrowButton)))
	{
		SceneIC = UDukeSceneItemCustomization(ParentWindow);
		// End:0x67
		if(__NFUN_340__(SceneIC, none))
		{
			SceneIC.ReceiveClickFromCIWindow(self);
		}
	}
	return;
}

defaultproperties
{
	borderwidth=2
	LockIcon='Menu.MP.LockIcon'
	LockXPct=0.06
	LockYPct=0.06
	LockSize=32
	LockRegion=(X=25,Y=8,W=75,h=109)
	TotalAlpha=1
	ArrowHeightPct=0.15
	ArrowWidthPct=0.05
	ArrowEdgeOffset=7.5
	OrangeColor=(B=36,G=1,R=252,A=37)
}