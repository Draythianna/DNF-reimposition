/*******************************************************************************
 * UDukeDigsMoreInfoWindow generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeDigsMoreInfoWindow extends UDukeDigsDisplayWindow
	config;

var UDukeKeyButton CloseButton;

function initWindow()
{
	local DukeMultiPlayer dmp;
	local PlayerProgression PlayerStats;

	dmp = DukeMultiPlayer(GetPlayerOwner());
	PlayerStats = dmp.PlayerProgress;
	CurrLvlPrefix = __NFUN_303__(__NFUN_356__("UDukeDigsDisplayWindow", "CurrLvlPrefix", "dnwindow"), string(PlayerStats.GetLevel()));
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local float TitleXL, TitleYL, TTFontScale, ClampedImageSize;
	local string DescHelpText;
	local float Lines, XL, YL, ImageYPos, FontScale, FontScaleX,
		DescAndHelpTextHeight, UpperBarY, LowerBarY, BarHeight, TargetHelpWidth;

	DrawBackground(C);
	TTFontScale = class'UWindowScene'.default.TTFontScale;
	C.Font = C.TallFont;
	C.DrawColor = class'UWindowScene'.default.OrangeColor;
	TextSize(C, Title, TitleXL, TitleYL, __NFUN_195__(TTFontScale, TitleScale), __NFUN_195__(TTFontScale, TitleScale));
	ClipText(C, __NFUN_196__(__NFUN_199__(WinWidth, TitleXL), 2), __NFUN_195__(WinHeight, TitleYPct), Title,, __NFUN_195__(TTFontScale, TitleScale), __NFUN_195__(TTFontScale, TitleScale), 1, 2);
	C.DrawColor = class'UWindowScene'.default.GreyColor;
	FontScale = __NFUN_195__(TTFontScale, DescScale);
	C.__NFUN_1260__(FontScale);
	TextSize(C, Description, XL, YL, FontScale, FontScale);
	Lines = float(WrapClipText(C, DescXPadding, 0, Description,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))), true, false, FontScale, FontScale, 1, 2));
	// End:0x1A6
	if(bDrawLevelTxt)
	{
		__NFUN_209__(Lines, float(2));
	}
	DescAndHelpTextHeight = __NFUN_198__(__NFUN_195__(Lines, YL), __NFUN_195__(WinHeight, TitleYPct));
	__NFUN_209__(DescAndHelpTextHeight, __NFUN_195__(30, class'UWindowScene'.default.WinScaleY));
	Lines = float(WrapClipText(C, DescXPadding, __NFUN_199__(WinHeight, DescAndHelpTextHeight), Description,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))),, false, FontScale, FontScale, 1, 2));
	// End:0x3F9
	if(bDrawLevelTxt)
	{
		C.DrawColor = class'UWindowScene'.default.OrangeColor;
		TextSize(C, CurrLvlPrefix, XL, YL, FontScale, FontScale);
		TargetHelpWidth = __NFUN_195__(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, 2.5)), 0.5);
		FontScaleX = FontScale;
		// End:0x2CD
		if(__NFUN_201__(XL, TargetHelpWidth))
		{
			__NFUN_207__(FontScaleX, __NFUN_196__(TargetHelpWidth, XL));
		}
		WrapClipText(C, DescXPadding, __NFUN_198__(__NFUN_199__(WinHeight, DescAndHelpTextHeight), __NFUN_195__(__NFUN_198__(Lines, float(1)), YL)), CurrLvlPrefix,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))),, false, FontScaleX, FontScale, 1, 2);
		TextSize(C, HelpText, XL, YL, FontScale, FontScale);
		FontScaleX = FontScale;
		// End:0x385
		if(__NFUN_201__(XL, TargetHelpWidth))
		{
			__NFUN_207__(FontScaleX, __NFUN_196__(TargetHelpWidth, XL));
			XL = TargetHelpWidth;
		}
		WrapClipText(C, __NFUN_199__(__NFUN_199__(WinWidth, DescXPadding), XL), __NFUN_198__(__NFUN_199__(WinHeight, DescAndHelpTextHeight), __NFUN_195__(__NFUN_198__(Lines, float(1)), YL)), HelpText,, int(__NFUN_199__(WinWidth, __NFUN_195__(DescXPadding, float(2)))),, false, FontScaleX, FontScale, 1, 2);
		__NFUN_209__(Lines, float(2));
	}
	BarHeight = __NFUN_195__(float(LineRegion.h), class'UWindowScene'.default.WinScaleY);
	UpperBarY = __NFUN_195__(UpperHorizYPct, WinHeight);
	LowerBarY = __NFUN_199__(__NFUN_199__(WinHeight, DescAndHelpTextHeight), BarHeight);
	C.DrawColor = WhiteColor;
	DrawStretchedTextureSegment(C, __NFUN_195__(LineXEdgeOffset, WinWidth), UpperBarY, __NFUN_199__(WinWidth, __NFUN_195__(__NFUN_195__(LineXEdgeOffset, WinWidth), float(2))), BarHeight, float(LineRegion.X), float(LineRegion.Y), float(LineRegion.W), float(LineRegion.h), BackdropTexture, 1);
	DrawStretchedTextureSegment(C, __NFUN_195__(LineXEdgeOffset, WinWidth), LowerBarY, __NFUN_199__(WinWidth, __NFUN_195__(__NFUN_195__(LineXEdgeOffset, WinWidth), float(2))), BarHeight, float(LineRegion.X), float(LineRegion.Y), float(LineRegion.W), float(LineRegion.h), BackdropTexture, 1);
	ClampedImageSize = __NFUN_224__(__NFUN_199__(LowerBarY, __NFUN_198__(UpperBarY, BarHeight)), ImageSize);
	// End:0x5E0
	if(__NFUN_340__(image, none))
	{
		ImageYPos = __NFUN_198__(__NFUN_198__(UpperBarY, BarHeight), __NFUN_195__(__NFUN_199__(LowerBarY, __NFUN_198__(UpperBarY, BarHeight)), 0.5));
		__NFUN_210__(ImageYPos, __NFUN_195__(ClampedImageSize, 0.5));
		DrawStretchedTexture(C, __NFUN_196__(__NFUN_199__(WinWidth, ClampedImageSize), 2), ImageYPos, ClampedImageSize, ClampedImageSize, image, 1,,, true);
	}
	CloseButton.WinWidth = CloseButton.GetWidth(C);
	CloseButton.WinHeight = __NFUN_195__(30, class'UWindowScene'.default.WinScaleY);
	CloseButton.WinLeft = __NFUN_199__(__NFUN_196__(WinWidth, float(2)), __NFUN_196__(CloseButton.WinWidth, float(2)));
	CloseButton.WinTop = __NFUN_199__(__NFUN_199__(WinHeight, CloseButton.WinHeight), 5);
	return;
}

function Created()
{
	super(UWindowWindow).Created();
	CloseButton = UDukeKeyButton(CreateWindow(class'UDukeKeyButton'));
	CloseButton.XBoxButtonRegion = CloseButton.AButton;
	CloseButton.PCButton = class'UWindowScene'.default.SPCText;
	CloseButton.SetText(PressToClose);
	CloseButton.Register(self);
	CloseButton.ShowWindow();
	return;
}

defaultproperties
{
	ImageSize=160
}