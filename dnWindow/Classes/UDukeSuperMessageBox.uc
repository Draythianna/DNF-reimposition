/*******************************************************************************
 * UDukeSuperMessageBox generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeSuperMessageBox extends UWindowWindow;

enum EButtonNum
{
	BN_None,
	BN_One,
	BN_CancelOne,
	BN_Two
};

var bool bCreated;
var int iResult;
var string MessageText;
var string TitleText;
var string PulseText;
var UDukeKeyButton KeyButtons[2];
var int TimeoutVal;
var int TimeOutTime;
var Region FillRegion;
var Texture FillTexture;
var Texture BorderTexture;
var Texture CapTexture;
var SSoundInfo MessageBoxOpenedSoundInfo;
var SSoundInfo MessageBoxYesSoundInfo;
var SSoundInfo MessageBoxNoSoundInfo;
var DukeDialogBoxManager Mgr;
var MaterialEx WaitingSpinner;
var bool bShowSpinner;
var bool bShowBackground;
var float SpinnerSize;
var float SpacingBuffer;
var float EdgeBuffer;
var float ButtonHeight;
var float ButtonWidth;
var float DialogDefaultWidthPct;
var MaterialEx CustomDialogImage;
var Engine.Object.EConsole_Dialog DialogType;
var float CustomOverlayAlpha;
var Texture CustomOverlayTexture;
var bool bPlayOpenedSound;
var float TitleTextScale;
var float BodyTextScale;
var bool bIsConsoleErrorMsg;
var int iDrawPriority;
var float BorderThickness;
var UDukeSuperMessageBox.EButtonNum NumOfButtons;

function SetupMessageBox(string Title, optional string Message, optional string Affirm, optional string Cancel, optional int TimeOut)
{
	TitleText = Title;
	MessageText = Message;
	KeyButtons[0].SetText(Affirm);
	KeyButtons[1].SetText(Cancel);
	KeyButtons[0].ShowWindow();
	KeyButtons[1].ShowWindow();
	NumOfButtons = 0;
	KeyButtons[0].HideWindow();
	KeyButtons[1].HideWindow();
	// End:0xBB
	if(__NFUN_148__(__NFUN_309__(Affirm, ""), __NFUN_308__(Cancel, "")))
	{
		NumOfButtons = 1;		
	}
	else
	{
		// End:0xE2
		if(__NFUN_148__(__NFUN_308__(Affirm, ""), __NFUN_309__(Cancel, "")))
		{
			NumOfButtons = 2;			
		}
		else
		{
			// End:0x109
			if(__NFUN_148__(__NFUN_309__(Affirm, ""), __NFUN_309__(Cancel, "")))
			{
				NumOfButtons = 3;				
			}
			else
			{
				NumOfButtons = 0;
			}
		}
	}
	TimeoutVal = TimeOut;
	PulseText = default.PulseText;
	bShowSpinner = default.bShowSpinner;
	bShowBackground = default.bShowBackground;
	iResult = default.iResult;
	return;
}

function Created()
{
	super.Created();
	KeyButtons[0] = UDukeKeyButton(CreateWindow(class'UDukeKeyButton', 1, 1, 1, 1));
	KeyButtons[1] = UDukeKeyButton(CreateWindow(class'UDukeKeyButton', 1, 1, 1, 1));
	KeyButtons[0].XBoxButtonRegion = KeyButtons[0].AButton;
	KeyButtons[0].PCButton = class'UWindowScene'.default.ENTText;
	KeyButtons[0].Register(self);
	KeyButtons[1].XBoxButtonRegion = KeyButtons[1].BButton;
	KeyButtons[1].PCButton = class'UWindowScene'.default.ESCText;
	KeyButtons[1].Register(self);
	SetAcceptsFocus();
	BorderThickness = 8;
	return;
}

function AfterCreate()
{
	super.AfterCreate();
	bCreated = true;
	return;
}

function Close(optional bool bByParent)
{
	local LevelInfo Level;

	Level = GetLevel();
	// End:0x99
	if(__NFUN_148__(__NFUN_148__(__NFUN_148__(bIsConsoleErrorMsg, __NFUN_340__(Level, none)), Level.bPaused), __NFUN_308__(Level.Pauser, "__UDukeSuperMessageBox")))
	{
		Level.__NFUN_1161__().SetPause(false, "__UDukeSuperMessageBox", true);
	}
	Mgr.DukeMessageBoxDone(self, iResult);
	Mgr.CloseDialog(self);
	HideWindow();
	return;
}

function BeforePaint(Canvas C, float X, float Y)
{
	local float dx, dy, dw, dh;

	super.BeforePaint(C, X, Y);
	GetDialogDimensions(C, dx, dy, dw, dh);
	WinLeft = dx;
	WinTop = dy;
	WinWidth = dw;
	WinHeight = dh;
	AdjustButtons(C);
	return;
}

function DrawBorderCorner(Canvas C, float X, float Y, float Rotation)
{
	C.__NFUN_1250__(X, Y);
	C.__NFUN_1234__(CapTexture, float(CapTexture.__NFUN_1191__()), float(CapTexture.__NFUN_1192__()), 0, 0, float(CapTexture.__NFUN_1191__()), float(CapTexture.__NFUN_1192__()), Rotation);
	return;
}

function DrawBackground(Canvas C)
{
	local float DoubleBorderThickness, borderwidth, BorderHeight;

	DoubleBorderThickness = __NFUN_195__(BorderThickness, float(2));
	borderwidth = __NFUN_199__(WinWidth, DoubleBorderThickness);
	BorderHeight = __NFUN_199__(WinHeight, DoubleBorderThickness);
	C.DrawColor = GetPlayerOwner().NewColorBytes(255, 255, 255);
	DrawStretchedTextureSegment(C, BorderThickness, BorderThickness, __NFUN_199__(WinWidth, DoubleBorderThickness), __NFUN_199__(WinHeight, DoubleBorderThickness), float(FillRegion.X), float(FillRegion.Y), float(FillRegion.W), float(FillRegion.h), FillTexture, 0.75);
	C.Style = 1;
	C.__NFUN_1250__(BorderThickness, 0);
	C.__NFUN_1234__(BorderTexture, borderwidth, BorderThickness, 0, 0, borderwidth, BorderThickness);
	C.__NFUN_1250__(BorderThickness, __NFUN_199__(WinHeight, BorderThickness));
	C.__NFUN_1234__(BorderTexture, borderwidth, BorderThickness, 0, 0, borderwidth, BorderThickness, 3.141593);
	C.__NFUN_1250__(__NFUN_195__(0.5, __NFUN_199__(BorderThickness, BorderHeight)), __NFUN_195__(0.5, __NFUN_199__(WinHeight, BorderThickness)));
	C.__NFUN_1234__(BorderTexture, __NFUN_199__(WinHeight, DoubleBorderThickness), BorderThickness, 0, 0, BorderHeight, BorderThickness, __NFUN_196__(3.141593, float(2)));
	C.__NFUN_1250__(__NFUN_199__(WinWidth, __NFUN_195__(0.5, __NFUN_198__(BorderHeight, BorderThickness))), __NFUN_195__(0.5, __NFUN_199__(WinHeight, BorderThickness)));
	C.__NFUN_1234__(BorderTexture, __NFUN_199__(WinHeight, DoubleBorderThickness), BorderThickness, 0, 0, BorderHeight, BorderThickness, __NFUN_196__(__NFUN_195__(3, 3.141593), float(2)));
	DrawBorderCorner(C, 0, 0, 0);
	DrawBorderCorner(C, __NFUN_199__(WinWidth, BorderThickness), 0, __NFUN_196__(3.141593, float(2)));
	DrawBorderCorner(C, __NFUN_199__(WinWidth, BorderThickness), __NFUN_199__(WinHeight, BorderThickness), 3.141593);
	DrawBorderCorner(C, 0, __NFUN_199__(WinHeight, BorderThickness), __NFUN_196__(__NFUN_195__(3, 3.141593), float(2)));
	return;
}

function Paint(Canvas C, float X, float Y)
{
	local float SpinnerX, XL, YL, YPadding, Scale, OrigX,
		OrigY;

	local LevelInfo Level;

	Level = GetLevel();
	// End:0x6C
	if(__NFUN_148__(__NFUN_148__(bIsConsoleErrorMsg, __NFUN_340__(Level, none)), __NFUN_145__(Level.bPaused)))
	{
		Level.__NFUN_1161__().SetPause(true, "__UDukeSuperMessageBox", true);
	}
	// End:0x15C
	if(__NFUN_173__(int(DialogType), int(2)))
	{
		C.__NFUN_1250__(0, 0);
		OrigX = C.OrgX;
		OrigY = C.OrgY;
		C.__NFUN_1251__(0, 0);
		C.Style = 5;
		C.__NFUN_1234__(CustomOverlayTexture, float(C.SizeX), float(C.SizeY), 0, 0, float(CustomOverlayTexture.__NFUN_1191__()), float(CustomOverlayTexture.__NFUN_1192__()),,,,, CustomOverlayAlpha);
		C.__NFUN_1251__(OrigX, OrigY);
	}
	ClippingRegion.X = 0;
	ClippingRegion.Y = 0;
	ClippingRegion.W = int(WinWidth);
	ClippingRegion.h = int(WinHeight);
	// End:0x1AA
	if(bShowBackground)
	{
		DrawBackground(C);
	}
	C.DrawColor = class'UWindowScene'.default.GreyColor;
	YPadding = EdgeBuffer;
	C.Font = C.BlockFont;
	TextSize(C, TitleText, XL, YL, __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale), __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale));
	ClipText(C, __NFUN_196__(__NFUN_199__(WinWidth, XL), 2), YPadding, TitleText,, __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale), __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale));
	__NFUN_209__(YPadding, __NFUN_198__(YL, SpacingBuffer));
	// End:0x38E
	if(__NFUN_340__(CustomDialogImage, none))
	{
		DrawStretchedTexture(C, __NFUN_198__(0, EdgeBuffer), YPadding, float(CustomDialogImage.__NFUN_1191__()), float(CustomDialogImage.__NFUN_1192__()), CustomDialogImage, 1);
		C.Font = C.BlockFontSmall;
		WrapClipText(C, __NFUN_198__(__NFUN_198__(__NFUN_198__(0, EdgeBuffer), float(CustomDialogImage.__NFUN_1191__())), SpacingBuffer), YPadding, MessageText,, int(__NFUN_195__(float(CustomDialogImage.__NFUN_1191__()), 1.5)),, true, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));		
	}
	else
	{
		// End:0x4E9
		if(bShowSpinner)
		{
			SpinnerX = __NFUN_196__(__NFUN_199__(WinWidth, SpinnerSize), 2);
			DrawStretchedTexture(C, SpinnerX, YPadding, SpinnerSize, SpinnerSize, WaitingSpinner, 1,,, false);
			// End:0x4E6
			if(__NFUN_309__(PulseText, ""))
			{
				C.Font = C.TallFont;
				C.DrawColor = class'UWindowScene'.default.OrangeColor;
				Scale = __NFUN_195__(1.5, class'UWindowScene'.default.TTFontScale);
				TextSize(C, PulseText, XL, YL, Scale, Scale);
				ClipText(C, __NFUN_198__(SpinnerX, float(int(__NFUN_195__(0.5, __NFUN_199__(SpinnerSize, XL))))), __NFUN_198__(YPadding, float(int(__NFUN_195__(0.5, __NFUN_199__(SpinnerSize, YL))))), PulseText,, Scale, Scale, __NFUN_195__(0.5, __NFUN_198__(1, __NFUN_213__(__NFUN_195__(6, GetLevel().TimeSeconds)))), 2);
			}			
		}
		else
		{
			C.Font = C.BlockFontSmall;
			TextSize(C, MessageText, XL, YL, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));
			// End:0x5CD
			if(__NFUN_200__(XL, __NFUN_199__(__NFUN_199__(WinWidth, __NFUN_195__(EdgeBuffer, float(2))), __NFUN_195__(BorderThickness, float(2)))))
			{
				ClipText(C, __NFUN_196__(__NFUN_199__(WinWidth, XL), 2), YPadding, MessageText,, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));				
			}
			else
			{
				WrapClipText(C, EdgeBuffer, YPadding, MessageText, false, int(__NFUN_199__(__NFUN_199__(WinWidth, EdgeBuffer), __NFUN_195__(BorderThickness, float(2)))),, true, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));
			}
		}
	}
	return;
}

function Tick(float Delta)
{
	// End:0x2E
	if(__NFUN_148__(__NFUN_174__(TimeOutTime, 0), __NFUN_200__(float(TimeOutTime), GetLevel().TimeSeconds)))
	{
		Close();
	}
	super.Tick(Delta);
	return;
}

function PushedYes()
{
	__NFUN_355__(__NFUN_303__(string(self), "::PushedYes"));
	// End:0x2E
	if(__NFUN_145__(KeyButtons[0].bWindowVisible))
	{
		return;
	}
	iResult = 1;
	Close();
	GetPlayerOwner().Level.PlaySoundInfo(0, MessageBoxYesSoundInfo);
	return;
}

function PushedNo()
{
	__NFUN_355__(__NFUN_303__(string(self), "::PushedNo"));
	// End:0x2D
	if(__NFUN_145__(KeyButtons[1].bWindowVisible))
	{
		return;
	}
	iResult = 0;
	Close();
	GetPlayerOwner().Level.PlaySoundInfo(0, MessageBoxNoSoundInfo);
	return;
}

function ShowWindow()
{
	local bool bWasVisible;

	bWasVisible = bWindowVisible;
	WindowShown();
	bWindowVisible = true;
	// End:0xCA
	if(bCreated)
	{
		// End:0x4E
		if(__NFUN_174__(TimeoutVal, 0))
		{
			TimeOutTime = int(__NFUN_198__(float(TimeoutVal), GetLevel().TimeSeconds));
		}
		// End:0xCA
		if(__NFUN_148__(__NFUN_148__(bPlayOpenedSound, __NFUN_145__(bWasVisible)), bWindowVisible))
		{
			__NFUN_355__(__NFUN_302__(string(self), ":ShowWindow - Playing MessageBoxOpenedSoundInfo"));
			GetPlayerOwner().Level.PlaySoundInfo(0, MessageBoxOpenedSoundInfo);
		}
	}
	return;
}

function HideWindow()
{
	WindowHidden();
	bWindowVisible = false;
	return;
}

function MouseMove(float X, float Y)
{
	super.MouseMove(X, Y);
	return;
}

function AdjustButtons(Canvas C)
{
	local float Top, Width, Height, ScaleX, ScaleY;

	ScaleX = class'UWindowScene'.default.WinScaleX;
	ScaleY = class'UWindowScene'.default.WinScaleY;
	Top = __NFUN_199__(__NFUN_199__(WinHeight, EdgeBuffer), __NFUN_195__(ButtonHeight, ScaleY));
	switch(NumOfButtons)
	{
		// End:0x7E
		case 0:
			KeyButtons[0].HideWindow();
			KeyButtons[1].HideWindow();
			// End:0x34B
			break;
		// End:0x138
		case 1:
			ButtonWidth = KeyButtons[0].GetWidth(C);
			KeyButtons[0].WinLeft = __NFUN_196__(__NFUN_199__(WinWidth, ButtonWidth), 2);
			KeyButtons[0].WinTop = Top;
			KeyButtons[0].WinWidth = ButtonWidth;
			KeyButtons[0].WinHeight = __NFUN_195__(ButtonHeight, ScaleY);
			KeyButtons[0].ShowWindow();
			KeyButtons[1].HideWindow();
			// End:0x34B
			break;
		// End:0x1F2
		case 2:
			ButtonWidth = KeyButtons[1].GetWidth(C);
			KeyButtons[1].WinLeft = __NFUN_196__(__NFUN_199__(WinWidth, ButtonWidth), 2);
			KeyButtons[1].WinTop = Top;
			KeyButtons[1].WinWidth = ButtonWidth;
			KeyButtons[1].WinHeight = __NFUN_195__(ButtonHeight, ScaleY);
			KeyButtons[1].ShowWindow();
			KeyButtons[0].HideWindow();
			// End:0x34B
			break;
		// End:0x348
		case 3:
			ButtonWidth = KeyButtons[0].GetWidth(C);
			KeyButtons[0].WinLeft = __NFUN_199__(__NFUN_195__(WinWidth, 0.3), __NFUN_196__(ButtonWidth, 2));
			KeyButtons[0].WinTop = Top;
			KeyButtons[0].WinWidth = ButtonWidth;
			KeyButtons[0].WinHeight = __NFUN_195__(ButtonHeight, ScaleY);
			KeyButtons[0].ShowWindow();
			ButtonWidth = KeyButtons[1].GetWidth(C);
			KeyButtons[1].WinLeft = __NFUN_199__(__NFUN_195__(WinWidth, 0.75), __NFUN_196__(ButtonWidth, 2));
			KeyButtons[1].WinTop = Top;
			KeyButtons[1].WinWidth = ButtonWidth;
			KeyButtons[1].WinHeight = __NFUN_195__(ButtonHeight, ScaleY);
			KeyButtons[1].ShowWindow();
			// End:0x34B
			break;
		// End:0xFFFF
		default:
			break;
	}
	return;
}

function GetDialogDimensions(Canvas C, out float X, out float Y, out float W, out float h)
{
	local float XL, YL, BXL, BYL, frameWidth, frameHeight,
		tmpWidth;

	local int Lines;

	frameWidth = 0;
	frameHeight = 0;
	// End:0x298
	if(__NFUN_340__(CustomDialogImage, none))
	{
		C.Font = C.BlockFont;
		TextSize(C, TitleText, XL, YL, __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale), __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale));
		frameWidth = __NFUN_198__(__NFUN_198__(__NFUN_198__(__NFUN_198__(EdgeBuffer, float(CustomDialogImage.__NFUN_1191__())), SpacingBuffer), __NFUN_195__(float(CustomDialogImage.__NFUN_1191__()), 1.5)), EdgeBuffer);
		// End:0xFD
		if(__NFUN_201__(__NFUN_198__(__NFUN_198__(EdgeBuffer, XL), EdgeBuffer), frameWidth))
		{
			frameWidth = __NFUN_198__(__NFUN_198__(EdgeBuffer, XL), EdgeBuffer);
		}
		C.Font = C.BlockFontSmall;
		TextSize(C, MessageText, BXL, BYL, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));
		Lines = WrapClipText(C, __NFUN_198__(__NFUN_198__(__NFUN_198__(0, EdgeBuffer), float(CustomDialogImage.__NFUN_1191__())), SpacingBuffer), frameHeight, MessageText,, int(__NFUN_195__(float(CustomDialogImage.__NFUN_1191__()), 1.5)), true, true, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));
		frameHeight = __NFUN_198__(__NFUN_198__(EdgeBuffer, YL), SpacingBuffer);
		// End:0x249
		if(__NFUN_200__(__NFUN_198__(frameHeight, float(CustomDialogImage.__NFUN_1192__())), __NFUN_198__(frameHeight, __NFUN_195__(BYL, float(__NFUN_165__(Lines, 1))))))
		{
			__NFUN_209__(frameHeight, __NFUN_195__(BYL, float(__NFUN_165__(Lines, 1))));			
		}
		else
		{
			__NFUN_209__(frameHeight, float(CustomDialogImage.__NFUN_1192__()));
		}
		// End:0x27B
		if(__NFUN_173__(int(NumOfButtons), int(0)))
		{
			__NFUN_209__(frameHeight, EdgeBuffer);			
		}
		else
		{
			__NFUN_209__(frameHeight, __NFUN_198__(__NFUN_198__(SpacingBuffer, ButtonHeight), EdgeBuffer));
		}		
	}
	else
	{
		// End:0x4F2
		if(__NFUN_308__(MessageText, ""))
		{
			C.Font = C.BlockFont;
			TextSize(C, TitleText, XL, YL, __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale), __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale));
			frameWidth = __NFUN_198__(__NFUN_198__(EdgeBuffer, XL), EdgeBuffer);
			// End:0x448
			if(bShowSpinner)
			{
				// End:0x35E
				if(__NFUN_200__(frameWidth, __NFUN_198__(SpinnerSize, __NFUN_195__(EdgeBuffer, float(2)))))
				{
					frameWidth = __NFUN_198__(SpinnerSize, __NFUN_195__(EdgeBuffer, float(2)));
				}
				frameHeight = __NFUN_198__(__NFUN_198__(__NFUN_198__(EdgeBuffer, YL), SpacingBuffer), SpinnerSize);
				// End:0x40E
				if(__NFUN_309__(PulseText, ""))
				{
					C.Font = C.TallFont;
					TextSize(C, PulseText, XL, YL, __NFUN_195__(1.5, class'UWindowScene'.default.TTFontScale), __NFUN_195__(1.5, class'UWindowScene'.default.TTFontScale));
					frameWidth = __NFUN_225__(__NFUN_198__(XL, __NFUN_195__(EdgeBuffer, float(2))), frameWidth);
				}
				// End:0x42B
				if(__NFUN_173__(int(NumOfButtons), int(0)))
				{
					__NFUN_209__(frameHeight, EdgeBuffer);					
				}
				else
				{
					__NFUN_209__(frameHeight, __NFUN_198__(__NFUN_198__(SpacingBuffer, ButtonHeight), EdgeBuffer));
				}				
			}
			else
			{
				frameHeight = __NFUN_198__(EdgeBuffer, YL);
				// End:0x477
				if(__NFUN_173__(int(NumOfButtons), int(0)))
				{
					__NFUN_209__(frameHeight, EdgeBuffer);					
				}
				else
				{
					__NFUN_209__(frameHeight, __NFUN_198__(__NFUN_198__(SpacingBuffer, ButtonHeight), EdgeBuffer));
				}
			}
			X = __NFUN_196__(__NFUN_199__(float(C.SizeX), frameWidth), 2);
			Y = __NFUN_196__(__NFUN_199__(float(C.SizeY), frameHeight), 2);
			W = frameWidth;
			h = frameHeight;			
		}
		else
		{
			// End:0x74B
			if(__NFUN_309__(MessageText, ""))
			{
				C.Font = C.BlockFont;
				TextSize(C, TitleText, XL, YL, __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale), __NFUN_195__(TitleTextScale, class'UWindowScene'.default.TTFontScale));
				frameHeight = __NFUN_198__(__NFUN_198__(EdgeBuffer, YL), SpacingBuffer);
				frameWidth = __NFUN_198__(__NFUN_198__(EdgeBuffer, XL), EdgeBuffer);
				tmpWidth = frameWidth;
				C.Font = C.BlockFontSmall;
				TextSize(C, MessageText, BXL, BYL, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));
				// End:0x66B
				if(__NFUN_200__(__NFUN_198__(__NFUN_198__(EdgeBuffer, BXL), EdgeBuffer), frameWidth))
				{
					// End:0x647
					if(__NFUN_173__(int(NumOfButtons), int(0)))
					{
						__NFUN_209__(frameHeight, __NFUN_198__(BYL, EdgeBuffer));						
					}
					else
					{
						__NFUN_209__(frameHeight, __NFUN_198__(__NFUN_198__(__NFUN_198__(BYL, SpacingBuffer), ButtonHeight), EdgeBuffer));
					}					
				}
				else
				{
					frameWidth = float(__NFUN_189__(int(__NFUN_195__(float(C.SizeX), DialogDefaultWidthPct)), int(frameWidth)));
					Lines = WrapClipText(C, EdgeBuffer, frameHeight, MessageText, false, int(__NFUN_199__(__NFUN_199__(frameWidth, EdgeBuffer), __NFUN_195__(BorderThickness, float(2)))), true, true, __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale), __NFUN_195__(class'UWindowScene'.default.TTFontScale, BodyTextScale));
					__NFUN_209__(frameHeight, __NFUN_195__(BYL, float(__NFUN_165__(Lines, 1))));
					// End:0x72E
					if(__NFUN_173__(int(NumOfButtons), int(0)))
					{
						__NFUN_209__(frameHeight, EdgeBuffer);						
					}
					else
					{
						__NFUN_209__(frameHeight, __NFUN_198__(__NFUN_198__(SpacingBuffer, ButtonHeight), EdgeBuffer));
					}
				}				
			}
			else
			{
				__NFUN_355__(__NFUN_303__(string(self), "::GetDialogDimensions::We should never hit this -- So log spam if we do"));
				frameWidth = __NFUN_199__(__NFUN_195__(float(C.SizeX), 0.65), __NFUN_195__(float(C.SizeX), 0.35));
				frameHeight = __NFUN_199__(__NFUN_195__(float(C.SizeY), 0.7), __NFUN_195__(float(C.SizeY), 0.3));
			}
		}
	}
	X = __NFUN_196__(__NFUN_199__(float(C.SizeX), frameWidth), 2);
	Y = __NFUN_196__(__NFUN_199__(float(C.SizeY), frameHeight), 2);
	W = frameWidth;
	h = frameHeight;
	return;
}

function UWindowWindow FindWindowUnder(float X, float Y)
{
	local UWindowWindow Child, ChildChild;
	local bool bModal;

	Child = LastChildWindow;
	// End:0x4C
	if(__NFUN_148__(__NFUN_340__(Child, none), __NFUN_340__(Child.ModalWindow, none)))
	{
		Child = Child.ModalWindow;
		bModal = true;
	}
	GlobalToWindow(X, Y, X, Y);
	J0x66:

	// End:0x203 [Loop If]
	if(__NFUN_340__(Child, none))
	{
		Child.bUWindowActive = bUWindowActive;
		// End:0xA4
		if(bLeaveOnscreen)
		{
			Child.bLeaveOnscreen = true;
		}
		// End:0x1EB
		if(__NFUN_150__(bUWindowActive, Child.bLeaveOnscreen))
		{
			// End:0x1DC
			if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_203__(X, Child.WinLeft), __NFUN_202__(X, __NFUN_198__(Child.WinLeft, Child.WinWidth))), __NFUN_203__(Y, Child.WinTop)), __NFUN_202__(Y, __NFUN_198__(Child.WinTop, Child.WinHeight))), __NFUN_145__(Child.CheckMousePassThrough(__NFUN_199__(X, Child.WinLeft), __NFUN_199__(Y, Child.WinTop)))))
			{
				ChildChild = Child.FindWindowUnder(__NFUN_199__(X, Child.WinLeft), __NFUN_199__(Y, Child.WinTop));
				return ChildChild;				
			}
			else
			{
				// End:0x1EB
				if(bModal)
				{
					return Child;
				}
			}
		}
		Child = Child.PrevSiblingWindow;
		// [Loop Continue]
		goto J0x66;
	}
	return self;
	return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
	super.NotifyFromControl(C, E);
	// End:0x53
	if(__NFUN_173__(int(E), 2))
	{
		// End:0x38
		if(__NFUN_339__(C, KeyButtons[0]))
		{
			PushedYes();			
		}
		else
		{
			// End:0x50
			if(__NFUN_339__(C, KeyButtons[1]))
			{
				PushedNo();
			}
		}		
	}
	else
	{
		// End:0x97
		if(C.__NFUN_358__('UDukeKeyButton'))
		{
			// End:0x83
			if(__NFUN_173__(int(E), 12))
			{
				ChildInFocus = C;				
			}
			else
			{
				// End:0x97
				if(__NFUN_173__(int(E), 9))
				{
					ChildInFocus = none;
				}
			}
		}
	}
	return;
}

function WindowEvent(UWindow.UWindowWindow.WinMessage msg, Canvas C, float X, float Y, int Key)
{
	// End:0x109
	if(__NFUN_173__(int(msg), int(7)))
	{
		// End:0x8A
		if(__NFUN_150__(__NFUN_150__(__NFUN_173__(Key, int(Root.Console.27)), __NFUN_148__(__NFUN_173__(Key, int(Root.Console.205)), __NFUN_145__(bIsConsoleErrorMsg))), __NFUN_173__(Key, int(Root.Console.211))))
		{
			PushedNo();
			return;
		}
		// End:0x106
		if(__NFUN_150__(__NFUN_150__(__NFUN_173__(Key, int(Root.Console.13)), __NFUN_173__(Key, int(Root.Console.210))), __NFUN_148__(__NFUN_173__(Key, int(Root.Console.204)), __NFUN_145__(bIsConsoleErrorMsg))))
		{
			PushedYes();
			return;
		}		
	}
	else
	{
		// End:0x136
		if(__NFUN_173__(int(msg), int(6)))
		{
			// End:0x136
			if(__NFUN_173__(Key, int(1)))
			{
				LMouseUp(X, Y);
				return;
			}
		}
	}
	super.WindowEvent(msg, C, X, Y, Key);
	return;
}

function bool MessageClients(UWindow.UWindowWindow.WinMessage msg, Canvas C, float X, float Y, int Key)
{
	local UWindowWindow Child;

	__NFUN_355__(__NFUN_303__(__NFUN_303__(__NFUN_303__(string(self), "::MessageClients("), string(__NFUN_365__(class'WinMessage', int(msg)))), ")"));
	Child = LastChildWindow;
	J0x3E:

	// End:0x1CE [Loop If]
	if(__NFUN_340__(Child, none))
	{
		Child.bUWindowActive = bUWindowActive;
		// End:0x7C
		if(bLeaveOnscreen)
		{
			Child.bLeaveOnscreen = true;
		}
		// End:0x1B6
		if(__NFUN_150__(bUWindowActive, Child.bLeaveOnscreen))
		{
			// End:0x1B6
			if(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_148__(__NFUN_203__(X, Child.WinLeft), __NFUN_202__(X, __NFUN_198__(Child.WinLeft, Child.WinWidth))), __NFUN_203__(Y, Child.WinTop)), __NFUN_202__(Y, __NFUN_198__(Child.WinTop, Child.WinHeight))), __NFUN_145__(Child.CheckMousePassThrough(__NFUN_199__(X, Child.WinLeft), __NFUN_199__(Y, Child.WinTop)))))
			{
				Child.WindowEvent(msg, C, __NFUN_199__(X, Child.WinLeft), __NFUN_199__(Y, Child.WinTop), Key);
				return true;
			}
		}
		Child = Child.PrevSiblingWindow;
		// [Loop Continue]
		goto J0x3E;
	}
	return false;
	return;
}

function LMouseUp(float X, float Y)
{
	Click(X, Y);
	return;
}

function Click(float X, float Y)
{
	// End:0x26
	if(__NFUN_340__(ChildInFocus, none))
	{
		ChildInFocus.Click(X, Y);
	}
	return;
}

defaultproperties
{
	iResult=-1
	FillRegion=(X=360,Y=88,W=2,h=2)
	FillTexture='Menu.Menu.Backdrop'
	BorderTexture='Menu.Menu.Border_Straight'
	CapTexture='Menu.Menu.Border_Cap'
	MessageBoxOpenedSoundInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=('a_menu.Menu.Menu_Appear_ST'),SlotPriority=0,VolumePrefab=0,Slots=(1),Volume=0.5,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	MessageBoxYesSoundInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=('a_menu.Menu.Menu_QuitYes_01_ST'),SlotPriority=0,VolumePrefab=0,Slots=(0),Volume=0.5,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	MessageBoxNoSoundInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=('a_menu.Menu.Menu_Disappear_ST'),SlotPriority=0,VolumePrefab=0,Slots=(0),Volume=0.5,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0),Velocity3D=(X=1.291717E-41,Y=2.797242E-17,Z=0),Z=0)
	WaitingSpinner='smk1.Logo.spinning_nuke_fb'
	bShowBackground=true
	SpinnerSize=128
	SpacingBuffer=15
	EdgeBuffer=15
	ButtonHeight=32
	ButtonWidth=105
	DialogDefaultWidthPct=0.3
	CustomOverlayAlpha=0.8
	CustomOverlayTexture='Engine.BlackTexture'
	bPlayOpenedSound=true
	TitleTextScale=0.7
	BodyTextScale=0.8
	iDrawPriority=999
	BorderThickness=8
	bIgnoreLDoubleClick=true
}