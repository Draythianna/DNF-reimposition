/*******************************************************************************
 * UDukePasswordCW generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukePasswordCW extends UDukePageWindow
	config;

var string URL;
var UWindowLabelControl PasswordLabel;
var UWindowComboControl PasswordCombo;
var localized string PasswordText;
var config string PasswordHistory[10];
var UWindowSmallCloseButton CloseButton;
var UWindowSmallButton OKButton;
var localized string OKText;

function Created()
{
	local int i;

	super.Created();
	OKButton = UWindowSmallButton(CreateControl(class'UWindowSmallButton', __NFUN_199__(WinWidth, float(108)), __NFUN_199__(WinHeight, float(24)), 48, 16));
	OKButton.SetText("OK");
	CloseButton = UWindowSmallCloseButton(CreateWindow(class'UWindowSmallCloseButton', __NFUN_199__(WinWidth, float(56)), __NFUN_199__(WinHeight, float(24)), 48, 16));
	PasswordLabel = UWindowLabelControl(CreateControl(class'UWindowLabelControl', 1, 1, 1, 1));
	PasswordLabel.SetText(PasswordText);
	PasswordLabel.SetFont(0);
	PasswordLabel.Align = 1;
	PasswordCombo = UWindowComboControl(CreateControl(class'UWindowComboControl', 1, 1, 1, 1));
	PasswordCombo.SetFont(0);
	PasswordCombo.SetEditable(true);
	PasswordCombo.Align = 1;
	i = 0;
	J0x149:

	// End:0x18D [Loop If]
	if(__NFUN_169__(i, 10))
	{
		// End:0x183
		if(__NFUN_309__(PasswordHistory[i], ""))
		{
			PasswordCombo.AddItem(PasswordHistory[i]);
		}
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x149;
	}
	return;
}

function BeforePaint(Canvas C, float X, float Y)
{
	super(UWindowWindow).BeforePaint(C, X, Y);
	OKButton.AutoSize(C);
	CloseButton.AutoSize(C);
	CloseButton.WinLeft = __NFUN_199__(WinWidth, CloseButton.WinWidth);
	CloseButton.WinTop = __NFUN_199__(WinHeight, CloseButton.WinHeight);
	OKButton.WinLeft = __NFUN_199__(__NFUN_199__(CloseButton.WinLeft, float(2)), OKButton.WinWidth);
	OKButton.WinTop = __NFUN_199__(WinHeight, OKButton.WinHeight);
	PasswordLabel.AutoSize(C);
	PasswordLabel.WinLeft = 10;
	PasswordLabel.WinTop = 18;
	PasswordCombo.SetSize(200, PasswordCombo.WinHeight);
	PasswordCombo.WinLeft = __NFUN_199__(__NFUN_199__(WinWidth, PasswordCombo.WinWidth), float(10));
	PasswordCombo.WinTop = 10;
	return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
	super.NotifyFromControl(C, E);
	// End:0x56
	if(__NFUN_150__(__NFUN_148__(__NFUN_339__(C, PasswordCombo), __NFUN_173__(int(E), 7)), __NFUN_148__(__NFUN_339__(C, OKButton), __NFUN_173__(int(E), 2))))
	{
		Connect();
	}
	return;
}

function Connect()
{
	local int i;
	local bool HistoryItem;
	local UWindowComboListItem Item;
	local string P;

	P = PasswordCombo.GetValue();
	// End:0x35
	if(__NFUN_308__(P, ""))
	{
		PasswordCombo.BringToFront();
		return;
	}
	i = 0;
	J0x3C:

	// End:0x70 [Loop If]
	if(__NFUN_169__(i, 10))
	{
		// End:0x66
		if(__NFUN_310__(PasswordHistory[i], P))
		{
			HistoryItem = true;
		}
		__NFUN_184__(i);
		// [Loop Continue]
		goto J0x3C;
	}
	// End:0x189
	if(__NFUN_145__(HistoryItem))
	{
		PasswordCombo.InsertItem(P);
		J0x90:

		// End:0xEC [Loop If]
		if(__NFUN_170__(PasswordCombo.List.Items.Count(), 10))
		{
			PasswordCombo.List.Items.Last.Remove();
			// [Loop Continue]
			goto J0x90;
		}
		Item = UWindowComboListItem(PasswordCombo.List.Items.Next);
		i = 0;
		J0x121:

		// End:0x189 [Loop If]
		if(__NFUN_169__(i, 10))
		{
			// End:0x171
			if(__NFUN_340__(Item, none))
			{
				PasswordHistory[i] = Item.Value;
				Item = UWindowComboListItem(Item.Next);
				// [Explicit Continue]
				goto J0x17F;
			}
			PasswordHistory[i] = "";
			J0x17F:

			__NFUN_184__(i);
			// [Loop Continue]
			goto J0x121;
		}
	}
	__NFUN_368__();
	PasswordCombo.ClearValue();
	UDukePasswordWindow(GetParent(class'UWindowFramedWindow')).bPasswordEntered = true;
	GetParent(class'UWindowFramedWindow').Close();
	DukeConsole(Root.Console).ConnectWithPassword(URL, P);
	return;
}

defaultproperties
{
	PasswordText="<?int?dnWindow.UDukePasswordCW.PasswordText?>"
}