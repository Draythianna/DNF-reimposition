/*******************************************************************************
 * LocalMessage generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class LocalMessage extends Info
	collapsecategories
	notplaceable
	dependson(Player)
	dependson(Console)
	hidecategories(movement,Collision,Lighting,LightColor);

var bool bIsConsoleMessage;
var bool bBeep;
var bool bOffsetYPos;
var int Lifetime;
var class<LocalMessage> ChildMessage;
var bool bFromBottom;
var Color DrawColor;
var float XPos;
var float YPos;
var float FontScaleX;
var float FontScaleY;
var bool bCenter;
var bool bDropShadow;
var bool bMessageArea;

static function string GetString(optional int Switch, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject, optional Class OptionalClass)
{
	return "";
	return;
}

static function string AssembleString(HUD MyHUD, optional int Switch, optional PlayerReplicationInfo RelatedPRI_1, optional string MessageString)
{
	return "";
	return;
}

static function ClientReceive(PlayerPawn P, optional int Switch, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject, optional Class OptionalClass)
{
	// End:0x4F
	if(__NFUN_340__(P.MyHUD, none))
	{
		P.MyHUD.LocalizedMessage(default.Class, Switch, RelatedPRI_1, RelatedPRI_2, OptionalObject,, OptionalClass);
	}
	// End:0x7D
	if(__NFUN_148__(default.bBeep, P.bMessageBeep))
	{
		P.PlayBeepSound();
	}
	// End:0x101
	if(default.bIsConsoleMessage)
	{
		// End:0x101
		if(__NFUN_148__(__NFUN_340__(P.Player, none), __NFUN_340__(P.Player.Console, none)))
		{
			P.Player.Console.AddString(GetString(Switch, RelatedPRI_1, RelatedPRI_2, OptionalObject, OptionalClass));
		}
	}
	return;
}

static function Color GetColor(optional int Switch, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2)
{
	return default.DrawColor;
	return;
}

static function float GetOffset(int Switch, float YL, float ClipY)
{
	return default.YPos;
	return;
}

defaultproperties
{
	Lifetime=6
	DrawColor=(B=6,G=1,R=255,A=7)
	FontScaleX=1
	FontScaleY=1
}