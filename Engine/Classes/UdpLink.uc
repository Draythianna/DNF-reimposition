/*******************************************************************************
 * UdpLink generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UdpLink extends InternetLink
	transient
	native
	collapsecategories
	notplaceable
	hidecategories(movement,Collision,Lighting,LightColor);

var() const int BroadcastAddr;

// Export UUdpLink::execBindPort(FFrame&, void* const)
native(1135) final function int BindPort(optional int Port, optional bool bUseNextAvailable)
{
	//native.Port;
	//native.bUseNextAvailable;	
}

// Export UUdpLink::execSendText(FFrame&, void* const)
native(1136) final function bool SendText(IpAddr Addr, coerce string str)
{
	//native.Addr;
	//native.str;	
}

// Export UUdpLink::execSendBinary(FFrame&, void* const)
native(1137) final function bool SendBinary(IpAddr Addr, int Count, byte B[255])
{
	//native.Addr;
	//native.Count;
	//native.B;	
}

// Export UUdpLink::execReadText(FFrame&, void* const)
native(1138) final function int ReadText(out IpAddr Addr, out string str)
{
	//native.Addr;
	//native.str;	
}

// Export UUdpLink::execReadBinary(FFrame&, void* const)
native(1139) final function int ReadBinary(out IpAddr Addr, int Count, out byte B[255])
{
	//native.Addr;
	//native.Count;
	//native.B;	
}

event ReceivedText(IpAddr Addr, string Text)
{
	return;
}

event ReceivedLine(IpAddr Addr, string Line)
{
	return;
}

event ReceivedBinary(IpAddr Addr, int Count, byte B[255])
{
	return;
}

defaultproperties
{
	BroadcastAddr=-1
	TickStyle=1
	RemoteRole=0
}