/*******************************************************************************
 * RotaryTrigger generated by Eliot.UELib using UELib.CLI.
 * Eliot.UELib Â© 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class RotaryTrigger extends Triggers
	collapsecategories
	notplaceable
	hidecategories(Filter,Interactivity,Karma,Lighting,Networking,Sound);

var() noexport deprecated array<name> OutEvents "Events to call whenever triggered. When triggered, this will advance to the next index and fire that one off.";
var() noexport deprecated array<name> AltEvents "Called when you trigger the AltEvent (does not advance the rotary).";
var() noexport int CurrentEventIndex "Current Index the Rotary is supposed to be stationed on.";
var() noexport name ReverseEvent "Call this go through the rotary backwards and trigger the corresponding OutEvent.";
var() noexport name AltEvent "Call this to fire off the current AltEvent.";
var() noexport name ResetEvent "Call this to reset the Rotary to what it was when the level started.";
var int OriginalEventIndex;

event PostVerifySelf()
{
	super(Actor).PostVerifySelf();
	OriginalEventIndex = CurrentEventIndex;
	__NFUN_718__('Reset', ResetEvent);
	__NFUN_718__('AltEvent', AltEvent);
	__NFUN_718__('Reverse', ReverseEvent);
	return;
}

event Trigger(Actor Other, Pawn EventInstigator)
{
	super(Actor).Trigger(Other, EventInstigator);
	ExecuteEvents(false);
	return;
}

final function TriggerFunc_Reverse()
{
	ExecuteEvents(true);
	return;
}

final function TriggerFunc_AltEvent()
{
	// End:0x0E
	if(__NFUN_171__(string(AltEvents), 0))
	{
		return;
	}
	// End:0x20
	if(__NFUN_172__(CurrentEventIndex, string(AltEvents)))
	{
		return;
	}
	GlobalTrigger(AltEvents[CurrentEventIndex]);
	return;
}

final function TriggerFunc_Reset()
{
	CurrentEventIndex = OriginalEventIndex;
	return;
}

final function ExecuteEvents(bool bReverse)
{
	local int RunawayCounter;

	J0x00:
	__NFUN_184__(RunawayCounter);
	// End:0x19
	if(__NFUN_170__(RunawayCounter, string(OutEvents)))
	{
		return;
	}
	// End:0x2C
	if(bReverse)
	{
		__NFUN_185__(CurrentEventIndex);		
	}
	else
	{
		__NFUN_184__(CurrentEventIndex);
	}
	// End:0x4D
	if(__NFUN_172__(CurrentEventIndex, string(OutEvents)))
	{
		CurrentEventIndex = 0;		
	}
	else
	{
		// End:0x67
		if(__NFUN_169__(CurrentEventIndex, 0))
		{
			CurrentEventIndex = __NFUN_166__(string(OutEvents), 1);
		}
	}
	// End:0x00
	if(!(__NFUN_342__(OutEvents[CurrentEventIndex], 'None')))
		goto J0x00;
	GlobalTrigger(OutEvents[CurrentEventIndex]);
	return;
}

defaultproperties
{
	Texture=Texture'S_TrigRotary'
}